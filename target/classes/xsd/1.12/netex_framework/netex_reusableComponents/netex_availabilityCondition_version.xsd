<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2013 (x64) (http://www.altova.com) by Nicholas JS Knowles (Trapeze Group Limited) -->
<xsd:schema xmlns="http://www.netex.org.uk/netex" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:siri="http://www.siri.org.uk/siri" targetNamespace="http://www.netex.org.uk/netex" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" id="netex_availabilityCondition_version">
  <xsd:include schemaLocation="netex_availabilityCondition_support.xsd"/>
  <xsd:include schemaLocation="netex_serviceCalendar_version.xsd"/>
  <!-- ======================================================================= -->
  <!-- ======================================================================= -->
  <xsd:complexType name="availabilityConditions_RelStructure">
    <xsd:complexContent>
      <xsd:extension base="containmentAggregationStructure">
        <xsd:choice maxOccurs="unbounded">
          <xsd:element ref="AvailabilityConditionRef"/>
          <xsd:element ref="AvailabilityCondition"/>
          <xsd:element ref="ValidDuring"/>
          <xsd:element ref="ValidBetween"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="containedAvailabilityConditions_RelStructure">
    <xsd:complexContent>
      <xsd:extension base="containmentAggregationStructure">
        <xsd:sequence>
          <xsd:element ref="AvailabilityCondition" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!-- ======================================================================= -->
  <xsd:element name="AvailabilityCondition" substitutionGroup="ValidityCondition_">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="AvailabilityCondition_VersionStructure">
          <xsd:sequence>
            <xsd:sequence>
              <xsd:group ref="DataManagedObjectGroup"/>
            </xsd:sequence>
            <xsd:sequence>
              <xsd:element name="Name" type="MultilingualString" minOccurs="0"/>
              <xsd:element name="Description" type="MultilingualString" minOccurs="0"/>
              <xsd:element name="ConditionedObjectRef" type="VersionOfObjectRefStructure" minOccurs="0"/>
              <xsd:element name="WithConditionRef" type="ValidityConditionRefStructure" minOccurs="0"/>
            </xsd:sequence>
            <xsd:sequence>
              <xsd:element name="FromDate" type="xsd:dateTime" minOccurs="0"/>
              <xsd:element name="ToDate" type="xsd:dateTime" minOccurs="0"/>
            </xsd:sequence>
            <xsd:sequence>
              <xsd:group ref="AvailabilityConditionGroup"/>
            </xsd:sequence>
          </xsd:sequence>
          <xsd:attribute name="id" type="AvailabilityConditionIdType"/>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="AvailabilityCondition_VersionStructure">
    <xsd:complexContent>
      <xsd:extension base="ValidBetween_VersionStructure">
        <xsd:sequence>
          <xsd:group ref="AvailabilityConditionGroup"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:group name="AvailabilityConditionGroup">
    <xsd:sequence>
      <xsd:element name="IsAvailable" type="xsd:boolean" default="true" minOccurs="0"/>
      <xsd:element name="dayTypes" type="dayTypes_RelStructure" minOccurs="0"/>
      <xsd:element name="ValidDayBits" type="xsd:normalizedString" minOccurs="0"/>
      <xsd:element name="timebands" type="timebands_RelStructure" minOccurs="0"/>
      <xsd:element name="operatingDays" type="operatingDays_RelStructure" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <!-- ===A simple availability condition==================================================================== -->
  <xsd:element name="ValidDuring" abstract="false" substitutionGroup="ValidityCondition_">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="ValidDuring_VersionStructure">
          <xsd:sequence>
            <xsd:sequence>
              <xsd:element name="Name" type="MultilingualString" minOccurs="0"/>
              <xsd:element name="Description" type="MultilingualString" minOccurs="0"/>
              <xsd:element name="ConditionedObjectRef" type="VersionOfObjectRefStructure" minOccurs="0"/>
              <xsd:element name="WithConditionRef" type="ValidityConditionRefStructure" minOccurs="0"/>
            </xsd:sequence>
            <xsd:sequence>
              <xsd:element name="FromDate" type="xsd:dateTime" minOccurs="0"/>
              <xsd:element name="ToDate" type="xsd:dateTime" minOccurs="0"/>
            </xsd:sequence>
            <xsd:sequence>
              <xsd:group ref="ValidDuringGroup"/>
            </xsd:sequence>
          </xsd:sequence>
          <xsd:attribute name="id" type="AvailabilityConditionIdType" use="optional"/>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="ValidDuring_VersionStructure">
    <xsd:complexContent>
      <xsd:extension base="ValidBetween_VersionStructure">
        <xsd:sequence>
          <xsd:group ref="ValidDuringGroup"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:group name="ValidDuringGroup">
    <xsd:sequence>
      <xsd:choice minOccurs="0">
        <xsd:element ref="DayTypeRef"/>
        <xsd:element name="DaysOfWeek" type="DaysOfWeekListOfEnumerations"/>
        <xsd:element name="Days">
          <xsd:simpleType>
            <xsd:restriction base="xsd:normalizedString">
              <xsd:minLength value="7"/>
              <xsd:maxLength value="7"/>
              <xsd:pattern value="([Y | N])*"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:choice>
      <xsd:element name="timebands" type="timebands_RelStructure" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <!-- ===ALIAS As (DEPRECATED)======================================================== -->
  <xsd:element name="SimpleAvailabilityCondition" abstract="false" substitutionGroup="ValidityCondition_">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="ValidDuring_VersionStructure"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
</xsd:schema>
