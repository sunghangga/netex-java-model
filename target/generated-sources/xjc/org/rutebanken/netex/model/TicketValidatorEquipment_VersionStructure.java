//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for TicketValidatorEquipment_VersionStructure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TicketValidatorEquipment_VersionStructure"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.netex.org.uk/netex}InstalledEquipment_VersionStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.netex.org.uk/netex}TicketValidatorGroup"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TicketValidatorEquipment_VersionStructure", propOrder = {
    "ticketValidatorType",
    "audioValidationFeedback",
    "visualValidationFeedback",
    "tactileValidationFeedback",
    "validationGuidance"
})
@XmlSeeAlso({
    TicketValidatorEquipment.class
})
public class TicketValidatorEquipment_VersionStructure
    extends InstalledEquipment_VersionStructure
{

    @XmlList
    @XmlElement(name = "TicketValidatorType")
    protected List<TicketValidatorEnumeration> ticketValidatorType;
    @XmlElement(name = "AudioValidationFeedback")
    protected Boolean audioValidationFeedback;
    @XmlElement(name = "VisualValidationFeedback")
    protected Boolean visualValidationFeedback;
    @XmlElement(name = "TactileValidationFeedback")
    protected Boolean tactileValidationFeedback;
    @XmlElement(name = "ValidationGuidance")
    protected MultilingualString validationGuidance;

    /**
     * Gets the value of the ticketValidatorType property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the ticketValidatorType property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTicketValidatorType().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TicketValidatorEnumeration }
     * 
     * 
     */
    public List<TicketValidatorEnumeration> getTicketValidatorType() {
        if (ticketValidatorType == null) {
            ticketValidatorType = new ArrayList<TicketValidatorEnumeration>();
        }
        return this.ticketValidatorType;
    }

    /**
     * Gets the value of the audioValidationFeedback property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAudioValidationFeedback() {
        return audioValidationFeedback;
    }

    /**
     * Sets the value of the audioValidationFeedback property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAudioValidationFeedback(Boolean value) {
        this.audioValidationFeedback = value;
    }

    /**
     * Gets the value of the visualValidationFeedback property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isVisualValidationFeedback() {
        return visualValidationFeedback;
    }

    /**
     * Sets the value of the visualValidationFeedback property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setVisualValidationFeedback(Boolean value) {
        this.visualValidationFeedback = value;
    }

    /**
     * Gets the value of the tactileValidationFeedback property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTactileValidationFeedback() {
        return tactileValidationFeedback;
    }

    /**
     * Sets the value of the tactileValidationFeedback property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setTactileValidationFeedback(Boolean value) {
        this.tactileValidationFeedback = value;
    }

    /**
     * Gets the value of the validationGuidance property.
     * 
     * @return
     *     possible object is
     *     {@link MultilingualString }
     *     
     */
    public MultilingualString getValidationGuidance() {
        return validationGuidance;
    }

    /**
     * Sets the value of the validationGuidance property.
     * 
     * @param value
     *     allowed object is
     *     {@link MultilingualString }
     *     
     */
    public void setValidationGuidance(MultilingualString value) {
        this.validationGuidance = value;
    }

    public TicketValidatorEquipment_VersionStructure withTicketValidatorType(TicketValidatorEnumeration... values) {
        if (values!= null) {
            for (TicketValidatorEnumeration value: values) {
                getTicketValidatorType().add(value);
            }
        }
        return this;
    }

    public TicketValidatorEquipment_VersionStructure withTicketValidatorType(Collection<TicketValidatorEnumeration> values) {
        if (values!= null) {
            getTicketValidatorType().addAll(values);
        }
        return this;
    }

    public TicketValidatorEquipment_VersionStructure withAudioValidationFeedback(Boolean value) {
        setAudioValidationFeedback(value);
        return this;
    }

    public TicketValidatorEquipment_VersionStructure withVisualValidationFeedback(Boolean value) {
        setVisualValidationFeedback(value);
        return this;
    }

    public TicketValidatorEquipment_VersionStructure withTactileValidationFeedback(Boolean value) {
        setTactileValidationFeedback(value);
        return this;
    }

    public TicketValidatorEquipment_VersionStructure withValidationGuidance(MultilingualString value) {
        setValidationGuidance(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withName(MultilingualString value) {
        setName(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withPrivateCode(PrivateCodeStructure value) {
        setPrivateCode(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withPublicCode(PrivateCodeStructure value) {
        setPublicCode(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withImage(String value) {
        setImage(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withTypeOfEquipmentRef(TypeOfEquipmentRefStructure value) {
        setTypeOfEquipmentRef(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withDescription(MultilingualString value) {
        setDescription(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withNote(MultilingualString value) {
        setNote(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withInfoLinks(InfoLinks_RelStructure value) {
        setInfoLinks(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withOutOfService(Boolean value) {
        setOutOfService(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withKeyList(KeyListStructure value) {
        setKeyList(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withBrandingRef(BrandingRefStructure value) {
        setBrandingRef(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withResponsibilitySetRef(String value) {
        setResponsibilitySetRef(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public TicketValidatorEquipment_VersionStructure withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
