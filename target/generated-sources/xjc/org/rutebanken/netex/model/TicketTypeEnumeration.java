//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TicketTypeEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="TicketTypeEnumeration"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString"&gt;
 *     &lt;enumeration value="standard"/&gt;
 *     &lt;enumeration value="promotion"/&gt;
 *     &lt;enumeration value="concession"/&gt;
 *     &lt;enumeration value="group"/&gt;
 *     &lt;enumeration value="season"/&gt;
 *     &lt;enumeration value="carnet"/&gt;
 *     &lt;enumeration value="travelCard"/&gt;
 *     &lt;enumeration value="other"/&gt;
 *     &lt;enumeration value="all"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "TicketTypeEnumeration")
@XmlEnum
public enum TicketTypeEnumeration {

    @XmlEnumValue("standard")
    STANDARD("standard"),
    @XmlEnumValue("promotion")
    PROMOTION("promotion"),
    @XmlEnumValue("concession")
    CONCESSION("concession"),
    @XmlEnumValue("group")
    GROUP("group"),
    @XmlEnumValue("season")
    SEASON("season"),
    @XmlEnumValue("carnet")
    CARNET("carnet"),
    @XmlEnumValue("travelCard")
    TRAVEL_CARD("travelCard"),
    @XmlEnumValue("other")
    OTHER("other"),
    @XmlEnumValue("all")
    ALL("all");
    private final String value;

    TicketTypeEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TicketTypeEnumeration fromValue(String v) {
        for (TicketTypeEnumeration c: TicketTypeEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
