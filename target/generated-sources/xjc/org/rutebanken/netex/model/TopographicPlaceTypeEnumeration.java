//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TopographicPlaceTypeEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="TopographicPlaceTypeEnumeration"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN"&gt;
 *     &lt;enumeration value="continent"/&gt;
 *     &lt;enumeration value="interregion"/&gt;
 *     &lt;enumeration value="country"/&gt;
 *     &lt;enumeration value="principality"/&gt;
 *     &lt;enumeration value="state"/&gt;
 *     &lt;enumeration value="province"/&gt;
 *     &lt;enumeration value="region"/&gt;
 *     &lt;enumeration value="county"/&gt;
 *     &lt;enumeration value="area"/&gt;
 *     &lt;enumeration value="conurbation"/&gt;
 *     &lt;enumeration value="city"/&gt;
 *     &lt;enumeration value="municipality"/&gt;
 *     &lt;enumeration value="quarter"/&gt;
 *     &lt;enumeration value="suburb"/&gt;
 *     &lt;enumeration value="town"/&gt;
 *     &lt;enumeration value="urbanCentre"/&gt;
 *     &lt;enumeration value="district"/&gt;
 *     &lt;enumeration value="parish"/&gt;
 *     &lt;enumeration value="village"/&gt;
 *     &lt;enumeration value="hamlet"/&gt;
 *     &lt;enumeration value="placeOfInterest"/&gt;
 *     &lt;enumeration value="other"/&gt;
 *     &lt;enumeration value="unrecorded"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "TopographicPlaceTypeEnumeration")
@XmlEnum
public enum TopographicPlaceTypeEnumeration {

    @XmlEnumValue("continent")
    CONTINENT("continent"),
    @XmlEnumValue("interregion")
    INTERREGION("interregion"),
    @XmlEnumValue("country")
    COUNTRY("country"),
    @XmlEnumValue("principality")
    PRINCIPALITY("principality"),
    @XmlEnumValue("state")
    STATE("state"),
    @XmlEnumValue("province")
    PROVINCE("province"),
    @XmlEnumValue("region")
    REGION("region"),
    @XmlEnumValue("county")
    COUNTY("county"),
    @XmlEnumValue("area")
    AREA("area"),
    @XmlEnumValue("conurbation")
    CONURBATION("conurbation"),
    @XmlEnumValue("city")
    CITY("city"),
    @XmlEnumValue("municipality")
    MUNICIPALITY("municipality"),
    @XmlEnumValue("quarter")
    QUARTER("quarter"),
    @XmlEnumValue("suburb")
    SUBURB("suburb"),
    @XmlEnumValue("town")
    TOWN("town"),
    @XmlEnumValue("urbanCentre")
    URBAN_CENTRE("urbanCentre"),
    @XmlEnumValue("district")
    DISTRICT("district"),
    @XmlEnumValue("parish")
    PARISH("parish"),
    @XmlEnumValue("village")
    VILLAGE("village"),
    @XmlEnumValue("hamlet")
    HAMLET("hamlet"),
    @XmlEnumValue("placeOfInterest")
    PLACE_OF_INTEREST("placeOfInterest"),
    @XmlEnumValue("other")
    OTHER("other"),
    @XmlEnumValue("unrecorded")
    UNRECORDED("unrecorded");
    private final String value;

    TopographicPlaceTypeEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TopographicPlaceTypeEnumeration fromValue(String v) {
        for (TopographicPlaceTypeEnumeration c: TopographicPlaceTypeEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
