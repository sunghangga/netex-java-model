//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for SiteFacilitySetStructure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SiteFacilitySetStructure"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.netex.org.uk/netex}FacilitySet_VersionStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.netex.org.uk/netex}SiteFacilitySetGroup"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SiteFacilitySetStructure", propOrder = {
    "accessFacilityList",
    "emergencyServiceList",
    "hireFacilityList",
    "luggageLockerFacilityList",
    "luggageServiceFacilityList",
    "moneyFacilityList",
    "parkingFacilityList",
    "staffing"
})
@XmlSeeAlso({
    SiteFacilitySet.class
})
public class SiteFacilitySetStructure
    extends FacilitySet_VersionStructure
{

    @XmlList
    @XmlElement(name = "AccessFacilityList", defaultValue = "unknown")
    protected List<AccessFacilityEnumeration> accessFacilityList;
    @XmlList
    @XmlElement(name = "EmergencyServiceList")
    protected List<EmergencyServiceEnumeration> emergencyServiceList;
    @XmlList
    @XmlElement(name = "HireFacilityList")
    protected List<HireFacilityEnumeration> hireFacilityList;
    @XmlList
    @XmlElement(name = "LuggageLockerFacilityList")
    protected List<LuggageLockerFacilityEnumeration> luggageLockerFacilityList;
    @XmlList
    @XmlElement(name = "LuggageServiceFacilityList")
    protected List<LuggageServiceFacilityEnumeration> luggageServiceFacilityList;
    @XmlList
    @XmlElement(name = "MoneyFacilityList")
    protected List<MoneyFacilityEnumeration> moneyFacilityList;
    @XmlList
    @XmlElement(name = "ParkingFacilityList")
    protected List<ParkingFacilityEnumeration> parkingFacilityList;
    @XmlElement(name = "Staffing")
    @XmlSchemaType(name = "normalizedString")
    protected StaffingEnumeration staffing;

    /**
     * Gets the value of the accessFacilityList property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the accessFacilityList property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAccessFacilityList().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AccessFacilityEnumeration }
     * 
     * 
     */
    public List<AccessFacilityEnumeration> getAccessFacilityList() {
        if (accessFacilityList == null) {
            accessFacilityList = new ArrayList<AccessFacilityEnumeration>();
        }
        return this.accessFacilityList;
    }

    /**
     * Gets the value of the emergencyServiceList property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the emergencyServiceList property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEmergencyServiceList().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EmergencyServiceEnumeration }
     * 
     * 
     */
    public List<EmergencyServiceEnumeration> getEmergencyServiceList() {
        if (emergencyServiceList == null) {
            emergencyServiceList = new ArrayList<EmergencyServiceEnumeration>();
        }
        return this.emergencyServiceList;
    }

    /**
     * Gets the value of the hireFacilityList property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the hireFacilityList property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getHireFacilityList().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link HireFacilityEnumeration }
     * 
     * 
     */
    public List<HireFacilityEnumeration> getHireFacilityList() {
        if (hireFacilityList == null) {
            hireFacilityList = new ArrayList<HireFacilityEnumeration>();
        }
        return this.hireFacilityList;
    }

    /**
     * Gets the value of the luggageLockerFacilityList property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the luggageLockerFacilityList property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLuggageLockerFacilityList().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LuggageLockerFacilityEnumeration }
     * 
     * 
     */
    public List<LuggageLockerFacilityEnumeration> getLuggageLockerFacilityList() {
        if (luggageLockerFacilityList == null) {
            luggageLockerFacilityList = new ArrayList<LuggageLockerFacilityEnumeration>();
        }
        return this.luggageLockerFacilityList;
    }

    /**
     * Gets the value of the luggageServiceFacilityList property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the luggageServiceFacilityList property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLuggageServiceFacilityList().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LuggageServiceFacilityEnumeration }
     * 
     * 
     */
    public List<LuggageServiceFacilityEnumeration> getLuggageServiceFacilityList() {
        if (luggageServiceFacilityList == null) {
            luggageServiceFacilityList = new ArrayList<LuggageServiceFacilityEnumeration>();
        }
        return this.luggageServiceFacilityList;
    }

    /**
     * Gets the value of the moneyFacilityList property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the moneyFacilityList property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMoneyFacilityList().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MoneyFacilityEnumeration }
     * 
     * 
     */
    public List<MoneyFacilityEnumeration> getMoneyFacilityList() {
        if (moneyFacilityList == null) {
            moneyFacilityList = new ArrayList<MoneyFacilityEnumeration>();
        }
        return this.moneyFacilityList;
    }

    /**
     * Gets the value of the parkingFacilityList property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the parkingFacilityList property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getParkingFacilityList().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ParkingFacilityEnumeration }
     * 
     * 
     */
    public List<ParkingFacilityEnumeration> getParkingFacilityList() {
        if (parkingFacilityList == null) {
            parkingFacilityList = new ArrayList<ParkingFacilityEnumeration>();
        }
        return this.parkingFacilityList;
    }

    /**
     * Gets the value of the staffing property.
     * 
     * @return
     *     possible object is
     *     {@link StaffingEnumeration }
     *     
     */
    public StaffingEnumeration getStaffing() {
        return staffing;
    }

    /**
     * Sets the value of the staffing property.
     * 
     * @param value
     *     allowed object is
     *     {@link StaffingEnumeration }
     *     
     */
    public void setStaffing(StaffingEnumeration value) {
        this.staffing = value;
    }

    public SiteFacilitySetStructure withAccessFacilityList(AccessFacilityEnumeration... values) {
        if (values!= null) {
            for (AccessFacilityEnumeration value: values) {
                getAccessFacilityList().add(value);
            }
        }
        return this;
    }

    public SiteFacilitySetStructure withAccessFacilityList(Collection<AccessFacilityEnumeration> values) {
        if (values!= null) {
            getAccessFacilityList().addAll(values);
        }
        return this;
    }

    public SiteFacilitySetStructure withEmergencyServiceList(EmergencyServiceEnumeration... values) {
        if (values!= null) {
            for (EmergencyServiceEnumeration value: values) {
                getEmergencyServiceList().add(value);
            }
        }
        return this;
    }

    public SiteFacilitySetStructure withEmergencyServiceList(Collection<EmergencyServiceEnumeration> values) {
        if (values!= null) {
            getEmergencyServiceList().addAll(values);
        }
        return this;
    }

    public SiteFacilitySetStructure withHireFacilityList(HireFacilityEnumeration... values) {
        if (values!= null) {
            for (HireFacilityEnumeration value: values) {
                getHireFacilityList().add(value);
            }
        }
        return this;
    }

    public SiteFacilitySetStructure withHireFacilityList(Collection<HireFacilityEnumeration> values) {
        if (values!= null) {
            getHireFacilityList().addAll(values);
        }
        return this;
    }

    public SiteFacilitySetStructure withLuggageLockerFacilityList(LuggageLockerFacilityEnumeration... values) {
        if (values!= null) {
            for (LuggageLockerFacilityEnumeration value: values) {
                getLuggageLockerFacilityList().add(value);
            }
        }
        return this;
    }

    public SiteFacilitySetStructure withLuggageLockerFacilityList(Collection<LuggageLockerFacilityEnumeration> values) {
        if (values!= null) {
            getLuggageLockerFacilityList().addAll(values);
        }
        return this;
    }

    public SiteFacilitySetStructure withLuggageServiceFacilityList(LuggageServiceFacilityEnumeration... values) {
        if (values!= null) {
            for (LuggageServiceFacilityEnumeration value: values) {
                getLuggageServiceFacilityList().add(value);
            }
        }
        return this;
    }

    public SiteFacilitySetStructure withLuggageServiceFacilityList(Collection<LuggageServiceFacilityEnumeration> values) {
        if (values!= null) {
            getLuggageServiceFacilityList().addAll(values);
        }
        return this;
    }

    public SiteFacilitySetStructure withMoneyFacilityList(MoneyFacilityEnumeration... values) {
        if (values!= null) {
            for (MoneyFacilityEnumeration value: values) {
                getMoneyFacilityList().add(value);
            }
        }
        return this;
    }

    public SiteFacilitySetStructure withMoneyFacilityList(Collection<MoneyFacilityEnumeration> values) {
        if (values!= null) {
            getMoneyFacilityList().addAll(values);
        }
        return this;
    }

    public SiteFacilitySetStructure withParkingFacilityList(ParkingFacilityEnumeration... values) {
        if (values!= null) {
            for (ParkingFacilityEnumeration value: values) {
                getParkingFacilityList().add(value);
            }
        }
        return this;
    }

    public SiteFacilitySetStructure withParkingFacilityList(Collection<ParkingFacilityEnumeration> values) {
        if (values!= null) {
            getParkingFacilityList().addAll(values);
        }
        return this;
    }

    public SiteFacilitySetStructure withStaffing(StaffingEnumeration value) {
        setStaffing(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withProvidedByRef(OrganisationRefStructure value) {
        setProvidedByRef(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withDescription(MultilingualString value) {
        setDescription(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withTypeOfFacilityRef(TypeOfFacilityRefStructure value) {
        setTypeOfFacilityRef(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withOtherFacilities(TypesOfEquipment_RelStructure value) {
        setOtherFacilities(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withAccessibilityInfoFacilityList(AccessibilityInfoFacilityEnumeration... values) {
        if (values!= null) {
            for (AccessibilityInfoFacilityEnumeration value: values) {
                getAccessibilityInfoFacilityList().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withAccessibilityInfoFacilityList(Collection<AccessibilityInfoFacilityEnumeration> values) {
        if (values!= null) {
            getAccessibilityInfoFacilityList().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withAssistanceFacilityList(AssistanceFacilityEnumeration... values) {
        if (values!= null) {
            for (AssistanceFacilityEnumeration value: values) {
                getAssistanceFacilityList().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withAssistanceFacilityList(Collection<AssistanceFacilityEnumeration> values) {
        if (values!= null) {
            getAssistanceFacilityList().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withAccessibilityToolList(AccessibilityToolEnumeration... values) {
        if (values!= null) {
            for (AccessibilityToolEnumeration value: values) {
                getAccessibilityToolList().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withAccessibilityToolList(Collection<AccessibilityToolEnumeration> values) {
        if (values!= null) {
            getAccessibilityToolList().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withCarServiceFacilityList(CarServiceFacilityEnumeration... values) {
        if (values!= null) {
            for (CarServiceFacilityEnumeration value: values) {
                getCarServiceFacilityList().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withCarServiceFacilityList(Collection<CarServiceFacilityEnumeration> values) {
        if (values!= null) {
            getCarServiceFacilityList().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withCateringFacilityList(CateringFacilityEnumeration... values) {
        if (values!= null) {
            for (CateringFacilityEnumeration value: values) {
                getCateringFacilityList().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withCateringFacilityList(Collection<CateringFacilityEnumeration> values) {
        if (values!= null) {
            getCateringFacilityList().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withFamilyFacilityList(FamilyFacilityEnumeration... values) {
        if (values!= null) {
            for (FamilyFacilityEnumeration value: values) {
                getFamilyFacilityList().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withFamilyFacilityList(Collection<FamilyFacilityEnumeration> values) {
        if (values!= null) {
            getFamilyFacilityList().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withFareClasses(FareClassEnumeration... values) {
        if (values!= null) {
            for (FareClassEnumeration value: values) {
                getFareClasses().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withFareClasses(Collection<FareClassEnumeration> values) {
        if (values!= null) {
            getFareClasses().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withGenderLimitation(GenderLimitationEnumeration value) {
        setGenderLimitation(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withMealFacilityList(MealFacilityEnumeration... values) {
        if (values!= null) {
            for (MealFacilityEnumeration value: values) {
                getMealFacilityList().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withMealFacilityList(Collection<MealFacilityEnumeration> values) {
        if (values!= null) {
            getMealFacilityList().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withMedicalFacilityList(MedicalFacilityEnumeration... values) {
        if (values!= null) {
            for (MedicalFacilityEnumeration value: values) {
                getMedicalFacilityList().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withMedicalFacilityList(Collection<MedicalFacilityEnumeration> values) {
        if (values!= null) {
            getMedicalFacilityList().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withMobilityFacilityList(MobilityFacilityEnumeration... values) {
        if (values!= null) {
            for (MobilityFacilityEnumeration value: values) {
                getMobilityFacilityList().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withMobilityFacilityList(Collection<MobilityFacilityEnumeration> values) {
        if (values!= null) {
            getMobilityFacilityList().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withNuisanceFacilityList(NuisanceFacilityEnumeration... values) {
        if (values!= null) {
            for (NuisanceFacilityEnumeration value: values) {
                getNuisanceFacilityList().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withNuisanceFacilityList(Collection<NuisanceFacilityEnumeration> values) {
        if (values!= null) {
            getNuisanceFacilityList().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withPassengerCommsFacilityList(PassengerCommsFacilityEnumeration... values) {
        if (values!= null) {
            for (PassengerCommsFacilityEnumeration value: values) {
                getPassengerCommsFacilityList().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withPassengerCommsFacilityList(Collection<PassengerCommsFacilityEnumeration> values) {
        if (values!= null) {
            getPassengerCommsFacilityList().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withPassengerInformationEquipmentList(PassengerInformationEquipmentEnumeration value) {
        setPassengerInformationEquipmentList(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withPassengerInformationFacilityList(PassengerInformationFacilityEnumeration... values) {
        if (values!= null) {
            for (PassengerInformationFacilityEnumeration value: values) {
                getPassengerInformationFacilityList().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withPassengerInformationFacilityList(Collection<PassengerInformationFacilityEnumeration> values) {
        if (values!= null) {
            getPassengerInformationFacilityList().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withRetailFacilityList(RetailFacilityEnumeration... values) {
        if (values!= null) {
            for (RetailFacilityEnumeration value: values) {
                getRetailFacilityList().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withRetailFacilityList(Collection<RetailFacilityEnumeration> values) {
        if (values!= null) {
            getRetailFacilityList().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withSafetyFacilityList(SafetyFacilityEnumeration... values) {
        if (values!= null) {
            for (SafetyFacilityEnumeration value: values) {
                getSafetyFacilityList().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withSafetyFacilityList(Collection<SafetyFacilityEnumeration> values) {
        if (values!= null) {
            getSafetyFacilityList().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withSanitaryFacilityList(SanitaryFacilityEnumeration... values) {
        if (values!= null) {
            for (SanitaryFacilityEnumeration value: values) {
                getSanitaryFacilityList().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withSanitaryFacilityList(Collection<SanitaryFacilityEnumeration> values) {
        if (values!= null) {
            getSanitaryFacilityList().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withTicketingFacilityList(TicketingFacilityEnumeration... values) {
        if (values!= null) {
            for (TicketingFacilityEnumeration value: values) {
                getTicketingFacilityList().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withTicketingFacilityList(Collection<TicketingFacilityEnumeration> values) {
        if (values!= null) {
            getTicketingFacilityList().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withTicketingServiceFacilityList(TicketingServiceFacilityEnumeration... values) {
        if (values!= null) {
            for (TicketingServiceFacilityEnumeration value: values) {
                getTicketingServiceFacilityList().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withTicketingServiceFacilityList(Collection<TicketingServiceFacilityEnumeration> values) {
        if (values!= null) {
            getTicketingServiceFacilityList().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withKeyList(KeyListStructure value) {
        setKeyList(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withBrandingRef(BrandingRefStructure value) {
        setBrandingRef(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withResponsibilitySetRef(String value) {
        setResponsibilitySetRef(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public SiteFacilitySetStructure withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public SiteFacilitySetStructure withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
