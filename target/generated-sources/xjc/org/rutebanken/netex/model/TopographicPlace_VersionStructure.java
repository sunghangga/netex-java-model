//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.time.LocalDateTime;
import java.util.Collection;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import net.opengis.gml._3.PolygonType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for TopographicPlace_VersionStructure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TopographicPlace_VersionStructure"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.netex.org.uk/netex}Place_VersionStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.netex.org.uk/netex}TopographicDescriptiveGroup"/&gt;
 *         &lt;group ref="{http://www.netex.org.uk/netex}TopographicRelationGroup"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TopographicPlace_VersionStructure", propOrder = {
    "isoCode",
    "descriptor",
    "alternativeDescriptors",
    "topographicPlaceType",
    "placeCentre",
    "postCode",
    "countryRef",
    "otherCountries",
    "parentTopographicPlaceRef",
    "adjacentPlaces",
    "containedIn",
    "accesses"
})
@XmlSeeAlso({
    TopographicPlace.class
})
public class TopographicPlace_VersionStructure
    extends Place_VersionStructure
{

    @XmlElement(name = "IsoCode")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    @XmlSchemaType(name = "normalizedString")
    protected String isoCode;
    @XmlElement(name = "Descriptor", required = true)
    protected TopographicPlaceDescriptor_VersionedChildStructure descriptor;
    protected TopographicPlace_VersionStructure.AlternativeDescriptors alternativeDescriptors;
    @XmlElement(name = "TopographicPlaceType")
    @XmlSchemaType(name = "NMTOKEN")
    protected TopographicPlaceTypeEnumeration topographicPlaceType;
    @XmlElement(name = "PlaceCentre", defaultValue = "false")
    protected Boolean placeCentre;
    @XmlElement(name = "PostCode")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    @XmlSchemaType(name = "normalizedString")
    protected String postCode;
    @XmlElement(name = "CountryRef")
    protected CountryRef countryRef;
    protected CountryRefs_RelStructure otherCountries;
    @XmlElement(name = "ParentTopographicPlaceRef")
    protected TopographicPlaceRefStructure parentTopographicPlaceRef;
    protected TopographicPlaceRefs_RelStructure adjacentPlaces;
    protected TopographicPlaceRefs_RelStructure containedIn;
    protected Accesses_RelStructure accesses;

    /**
     * Gets the value of the isoCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIsoCode() {
        return isoCode;
    }

    /**
     * Sets the value of the isoCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIsoCode(String value) {
        this.isoCode = value;
    }

    /**
     * Gets the value of the descriptor property.
     * 
     * @return
     *     possible object is
     *     {@link TopographicPlaceDescriptor_VersionedChildStructure }
     *     
     */
    public TopographicPlaceDescriptor_VersionedChildStructure getDescriptor() {
        return descriptor;
    }

    /**
     * Sets the value of the descriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link TopographicPlaceDescriptor_VersionedChildStructure }
     *     
     */
    public void setDescriptor(TopographicPlaceDescriptor_VersionedChildStructure value) {
        this.descriptor = value;
    }

    /**
     * Gets the value of the alternativeDescriptors property.
     * 
     * @return
     *     possible object is
     *     {@link TopographicPlace_VersionStructure.AlternativeDescriptors }
     *     
     */
    public TopographicPlace_VersionStructure.AlternativeDescriptors getAlternativeDescriptors() {
        return alternativeDescriptors;
    }

    /**
     * Sets the value of the alternativeDescriptors property.
     * 
     * @param value
     *     allowed object is
     *     {@link TopographicPlace_VersionStructure.AlternativeDescriptors }
     *     
     */
    public void setAlternativeDescriptors(TopographicPlace_VersionStructure.AlternativeDescriptors value) {
        this.alternativeDescriptors = value;
    }

    /**
     * Gets the value of the topographicPlaceType property.
     * 
     * @return
     *     possible object is
     *     {@link TopographicPlaceTypeEnumeration }
     *     
     */
    public TopographicPlaceTypeEnumeration getTopographicPlaceType() {
        return topographicPlaceType;
    }

    /**
     * Sets the value of the topographicPlaceType property.
     * 
     * @param value
     *     allowed object is
     *     {@link TopographicPlaceTypeEnumeration }
     *     
     */
    public void setTopographicPlaceType(TopographicPlaceTypeEnumeration value) {
        this.topographicPlaceType = value;
    }

    /**
     * Gets the value of the placeCentre property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isPlaceCentre() {
        return placeCentre;
    }

    /**
     * Sets the value of the placeCentre property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setPlaceCentre(Boolean value) {
        this.placeCentre = value;
    }

    /**
     * Gets the value of the postCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPostCode() {
        return postCode;
    }

    /**
     * Sets the value of the postCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPostCode(String value) {
        this.postCode = value;
    }

    /**
     * Gets the value of the countryRef property.
     * 
     * @return
     *     possible object is
     *     {@link CountryRef }
     *     
     */
    public CountryRef getCountryRef() {
        return countryRef;
    }

    /**
     * Sets the value of the countryRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link CountryRef }
     *     
     */
    public void setCountryRef(CountryRef value) {
        this.countryRef = value;
    }

    /**
     * Gets the value of the otherCountries property.
     * 
     * @return
     *     possible object is
     *     {@link CountryRefs_RelStructure }
     *     
     */
    public CountryRefs_RelStructure getOtherCountries() {
        return otherCountries;
    }

    /**
     * Sets the value of the otherCountries property.
     * 
     * @param value
     *     allowed object is
     *     {@link CountryRefs_RelStructure }
     *     
     */
    public void setOtherCountries(CountryRefs_RelStructure value) {
        this.otherCountries = value;
    }

    /**
     * Gets the value of the parentTopographicPlaceRef property.
     * 
     * @return
     *     possible object is
     *     {@link TopographicPlaceRefStructure }
     *     
     */
    public TopographicPlaceRefStructure getParentTopographicPlaceRef() {
        return parentTopographicPlaceRef;
    }

    /**
     * Sets the value of the parentTopographicPlaceRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link TopographicPlaceRefStructure }
     *     
     */
    public void setParentTopographicPlaceRef(TopographicPlaceRefStructure value) {
        this.parentTopographicPlaceRef = value;
    }

    /**
     * Gets the value of the adjacentPlaces property.
     * 
     * @return
     *     possible object is
     *     {@link TopographicPlaceRefs_RelStructure }
     *     
     */
    public TopographicPlaceRefs_RelStructure getAdjacentPlaces() {
        return adjacentPlaces;
    }

    /**
     * Sets the value of the adjacentPlaces property.
     * 
     * @param value
     *     allowed object is
     *     {@link TopographicPlaceRefs_RelStructure }
     *     
     */
    public void setAdjacentPlaces(TopographicPlaceRefs_RelStructure value) {
        this.adjacentPlaces = value;
    }

    /**
     * Gets the value of the containedIn property.
     * 
     * @return
     *     possible object is
     *     {@link TopographicPlaceRefs_RelStructure }
     *     
     */
    public TopographicPlaceRefs_RelStructure getContainedIn() {
        return containedIn;
    }

    /**
     * Sets the value of the containedIn property.
     * 
     * @param value
     *     allowed object is
     *     {@link TopographicPlaceRefs_RelStructure }
     *     
     */
    public void setContainedIn(TopographicPlaceRefs_RelStructure value) {
        this.containedIn = value;
    }

    /**
     * Gets the value of the accesses property.
     * 
     * @return
     *     possible object is
     *     {@link Accesses_RelStructure }
     *     
     */
    public Accesses_RelStructure getAccesses() {
        return accesses;
    }

    /**
     * Sets the value of the accesses property.
     * 
     * @param value
     *     allowed object is
     *     {@link Accesses_RelStructure }
     *     
     */
    public void setAccesses(Accesses_RelStructure value) {
        this.accesses = value;
    }

    public TopographicPlace_VersionStructure withIsoCode(String value) {
        setIsoCode(value);
        return this;
    }

    public TopographicPlace_VersionStructure withDescriptor(TopographicPlaceDescriptor_VersionedChildStructure value) {
        setDescriptor(value);
        return this;
    }

    public TopographicPlace_VersionStructure withAlternativeDescriptors(TopographicPlace_VersionStructure.AlternativeDescriptors value) {
        setAlternativeDescriptors(value);
        return this;
    }

    public TopographicPlace_VersionStructure withTopographicPlaceType(TopographicPlaceTypeEnumeration value) {
        setTopographicPlaceType(value);
        return this;
    }

    public TopographicPlace_VersionStructure withPlaceCentre(Boolean value) {
        setPlaceCentre(value);
        return this;
    }

    public TopographicPlace_VersionStructure withPostCode(String value) {
        setPostCode(value);
        return this;
    }

    public TopographicPlace_VersionStructure withCountryRef(CountryRef value) {
        setCountryRef(value);
        return this;
    }

    public TopographicPlace_VersionStructure withOtherCountries(CountryRefs_RelStructure value) {
        setOtherCountries(value);
        return this;
    }

    public TopographicPlace_VersionStructure withParentTopographicPlaceRef(TopographicPlaceRefStructure value) {
        setParentTopographicPlaceRef(value);
        return this;
    }

    public TopographicPlace_VersionStructure withAdjacentPlaces(TopographicPlaceRefs_RelStructure value) {
        setAdjacentPlaces(value);
        return this;
    }

    public TopographicPlace_VersionStructure withContainedIn(TopographicPlaceRefs_RelStructure value) {
        setContainedIn(value);
        return this;
    }

    public TopographicPlace_VersionStructure withAccesses(Accesses_RelStructure value) {
        setAccesses(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withPlaceTypes(TypeOfPlaceRefs_RelStructure value) {
        setPlaceTypes(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withTypes(TypeOfZoneRefs_RelStructure value) {
        setTypes(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withCentroid(SimplePoint_VersionStructure value) {
        setCentroid(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withPolygon(PolygonType value) {
        setPolygon(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withProjections(Projections_RelStructure value) {
        setProjections(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withParentZoneRef(ZoneRefStructure value) {
        setParentZoneRef(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withMembers(PointRefs_RelStructure value) {
        setMembers(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withName(MultilingualString value) {
        setName(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withShortName(MultilingualString value) {
        setShortName(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withDescription(MultilingualString value) {
        setDescription(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withPurposeOfGroupingRef(PurposeOfGroupingRefStructure value) {
        setPurposeOfGroupingRef(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withPrivateCode(PrivateCodeStructure value) {
        setPrivateCode(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withInfoLinks(org.rutebanken.netex.model.GroupOfEntities_VersionStructure.InfoLinks value) {
        setInfoLinks(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withKeyList(KeyListStructure value) {
        setKeyList(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withBrandingRef(BrandingRefStructure value) {
        setBrandingRef(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withResponsibilitySetRef(String value) {
        setResponsibilitySetRef(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public TopographicPlace_VersionStructure withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;extension base="{http://www.netex.org.uk/netex}topographicPlaceDescriptors_RelStructure"&gt;
     *     &lt;/extension&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class AlternativeDescriptors
        extends TopographicPlaceDescriptors_RelStructure
    {


        @Override
        public TopographicPlace_VersionStructure.AlternativeDescriptors withTopographicPlaceDescriptor(TopographicPlaceDescriptor_VersionedChildStructure... values) {
            if (values!= null) {
                for (TopographicPlaceDescriptor_VersionedChildStructure value: values) {
                    getTopographicPlaceDescriptor().add(value);
                }
            }
            return this;
        }

        @Override
        public TopographicPlace_VersionStructure.AlternativeDescriptors withTopographicPlaceDescriptor(Collection<TopographicPlaceDescriptor_VersionedChildStructure> values) {
            if (values!= null) {
                getTopographicPlaceDescriptor().addAll(values);
            }
            return this;
        }

        @Override
        public TopographicPlace_VersionStructure.AlternativeDescriptors withId(String value) {
            setId(value);
            return this;
        }

        /**
         * Generates a String representation of the contents of this type.
         * This is an extension method, produced by the 'ts' xjc plugin
         * 
         */
        @Override
        public String toString() {
            return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
        }

    }

}
