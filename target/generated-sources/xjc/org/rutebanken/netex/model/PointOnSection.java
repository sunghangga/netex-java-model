//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.math.BigInteger;
import java.time.LocalDateTime;
import java.util.Collection;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.netex.org.uk/netex}PointOnSection_VersionedChildStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;sequence&gt;
 *           &lt;group ref="{http://www.netex.org.uk/netex}EntityInVersionGroup" minOccurs="0"/&gt;
 *         &lt;/sequence&gt;
 *         &lt;sequence&gt;
 *           &lt;group ref="{http://www.netex.org.uk/netex}VersionedChildGroup"/&gt;
 *         &lt;/sequence&gt;
 *         &lt;sequence&gt;
 *           &lt;group ref="{http://www.netex.org.uk/netex}PointInLinkSequenceGroup"/&gt;
 *         &lt;/sequence&gt;
 *         &lt;sequence&gt;
 *           &lt;choice&gt;
 *             &lt;element ref="{http://www.netex.org.uk/netex}PointRef"/&gt;
 *             &lt;element ref="{http://www.netex.org.uk/netex}Point"/&gt;
 *           &lt;/choice&gt;
 *           &lt;element ref="{http://www.netex.org.uk/netex}LinkRef" minOccurs="0"/&gt;
 *           &lt;element name="Reverse" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;/sequence&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="id" type="{http://www.netex.org.uk/netex}PointOnSectionIdType" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
public class PointOnSection
    extends PointOnSection_VersionedChildStructure
{


    @Override
    public PointOnSection withPointRef(JAXBElement<? extends PointRefStructure> value) {
        setPointRef(value);
        return this;
    }

    @Override
    public PointOnSection withPoint(JAXBElement<? extends Point_VersionStructure> value) {
        setPoint(value);
        return this;
    }

    @Override
    public PointOnSection withLinkRef(JAXBElement<? extends LinkRefStructure> value) {
        setLinkRef(value);
        return this;
    }

    @Override
    public PointOnSection withReverse(Boolean value) {
        setReverse(value);
        return this;
    }

    @Override
    public PointOnSection withLinkSequenceRef(JAXBElement<? extends LinkSequenceRefStructure> value) {
        setLinkSequenceRef(value);
        return this;
    }

    @Override
    public PointOnSection withProjections(Projections_RelStructure value) {
        setProjections(value);
        return this;
    }

    @Override
    public PointOnSection withDescription(MultilingualString value) {
        setDescription(value);
        return this;
    }

    @Override
    public PointOnSection withOrder(BigInteger value) {
        setOrder(value);
        return this;
    }

    @Override
    public PointOnSection withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public PointOnSection withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public PointOnSection withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public PointOnSection withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public PointOnSection withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public PointOnSection withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public PointOnSection withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public PointOnSection withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public PointOnSection withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public PointOnSection withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public PointOnSection withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public PointOnSection withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public PointOnSection withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public PointOnSection withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public PointOnSection withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public PointOnSection withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
