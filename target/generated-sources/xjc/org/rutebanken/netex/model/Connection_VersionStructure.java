//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Collection;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for Connection_VersionStructure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Connection_VersionStructure"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.netex.org.uk/netex}Transfer_VersionStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.netex.org.uk/netex}ConnectionGroup"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Connection_VersionStructure", propOrder = {
    "externalConnectionLinkRef",
    "from",
    "to",
    "transferOnly"
})
@XmlSeeAlso({
    Connection.class
})
public class Connection_VersionStructure
    extends Transfer_VersionStructure
{

    @XmlElement(name = "ExternalConnectionLinkRef")
    protected ExternalObjectRefStructure externalConnectionLinkRef;
    @XmlElement(name = "From")
    protected ConnectionEndStructure from;
    @XmlElement(name = "To")
    protected ConnectionEndStructure to;
    @XmlElement(name = "TransferOnly")
    protected Boolean transferOnly;

    /**
     * Gets the value of the externalConnectionLinkRef property.
     * 
     * @return
     *     possible object is
     *     {@link ExternalObjectRefStructure }
     *     
     */
    public ExternalObjectRefStructure getExternalConnectionLinkRef() {
        return externalConnectionLinkRef;
    }

    /**
     * Sets the value of the externalConnectionLinkRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ExternalObjectRefStructure }
     *     
     */
    public void setExternalConnectionLinkRef(ExternalObjectRefStructure value) {
        this.externalConnectionLinkRef = value;
    }

    /**
     * Gets the value of the from property.
     * 
     * @return
     *     possible object is
     *     {@link ConnectionEndStructure }
     *     
     */
    public ConnectionEndStructure getFrom() {
        return from;
    }

    /**
     * Sets the value of the from property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConnectionEndStructure }
     *     
     */
    public void setFrom(ConnectionEndStructure value) {
        this.from = value;
    }

    /**
     * Gets the value of the to property.
     * 
     * @return
     *     possible object is
     *     {@link ConnectionEndStructure }
     *     
     */
    public ConnectionEndStructure getTo() {
        return to;
    }

    /**
     * Sets the value of the to property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConnectionEndStructure }
     *     
     */
    public void setTo(ConnectionEndStructure value) {
        this.to = value;
    }

    /**
     * Gets the value of the transferOnly property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTransferOnly() {
        return transferOnly;
    }

    /**
     * Sets the value of the transferOnly property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setTransferOnly(Boolean value) {
        this.transferOnly = value;
    }

    public Connection_VersionStructure withExternalConnectionLinkRef(ExternalObjectRefStructure value) {
        setExternalConnectionLinkRef(value);
        return this;
    }

    public Connection_VersionStructure withFrom(ConnectionEndStructure value) {
        setFrom(value);
        return this;
    }

    public Connection_VersionStructure withTo(ConnectionEndStructure value) {
        setTo(value);
        return this;
    }

    public Connection_VersionStructure withTransferOnly(Boolean value) {
        setTransferOnly(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withName(MultilingualString value) {
        setName(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withTypeOfTransferRef(TypeOfTransferRefStructure value) {
        setTypeOfTransferRef(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withDescription(MultilingualString value) {
        setDescription(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withDistance(BigDecimal value) {
        setDistance(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withTransferDuration(TransferDurationStructure value) {
        setTransferDuration(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withWalkTransferDuration(TransferDurationStructure value) {
        setWalkTransferDuration(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withBothWays(Boolean value) {
        setBothWays(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withKeyList(KeyListStructure value) {
        setKeyList(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withBrandingRef(BrandingRefStructure value) {
        setBrandingRef(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withResponsibilitySetRef(String value) {
        setResponsibilitySetRef(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public Connection_VersionStructure withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public Connection_VersionStructure withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public Connection_VersionStructure withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
