//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.time.LocalDateTime;
import java.util.Collection;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.netex.org.uk/netex}AvailabilityCondition_VersionStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;sequence&gt;
 *           &lt;group ref="{http://www.netex.org.uk/netex}DataManagedObjectGroup"/&gt;
 *         &lt;/sequence&gt;
 *         &lt;sequence&gt;
 *           &lt;element name="Name" type="{http://www.netex.org.uk/netex}MultilingualString" minOccurs="0"/&gt;
 *           &lt;element name="Description" type="{http://www.netex.org.uk/netex}MultilingualString" minOccurs="0"/&gt;
 *           &lt;element name="ConditionedObjectRef" type="{http://www.netex.org.uk/netex}VersionOfObjectRefStructure" minOccurs="0"/&gt;
 *           &lt;element name="WithConditionRef" type="{http://www.netex.org.uk/netex}ValidityConditionRefStructure" minOccurs="0"/&gt;
 *         &lt;/sequence&gt;
 *         &lt;sequence&gt;
 *           &lt;element name="FromDate" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/&gt;
 *           &lt;element name="ToDate" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/&gt;
 *         &lt;/sequence&gt;
 *         &lt;sequence&gt;
 *           &lt;group ref="{http://www.netex.org.uk/netex}AvailabilityConditionGroup"/&gt;
 *         &lt;/sequence&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="id" type="{http://www.netex.org.uk/netex}AvailabilityConditionIdType" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
public class AvailabilityCondition
    extends AvailabilityCondition_VersionStructure
{


    @Override
    public AvailabilityCondition withIsAvailable(Boolean value) {
        setIsAvailable(value);
        return this;
    }

    @Override
    public AvailabilityCondition withDayTypes(DayTypes_RelStructure value) {
        setDayTypes(value);
        return this;
    }

    @Override
    public AvailabilityCondition withValidDayBits(String value) {
        setValidDayBits(value);
        return this;
    }

    @Override
    public AvailabilityCondition withTimebands(Timebands_RelStructure value) {
        setTimebands(value);
        return this;
    }

    @Override
    public AvailabilityCondition withOperatingDays(OperatingDays_RelStructure value) {
        setOperatingDays(value);
        return this;
    }

    @Override
    public AvailabilityCondition withFromDate(LocalDateTime value) {
        setFromDate(value);
        return this;
    }

    @Override
    public AvailabilityCondition withToDate(LocalDateTime value) {
        setToDate(value);
        return this;
    }

    @Override
    public AvailabilityCondition withName(MultilingualString value) {
        setName(value);
        return this;
    }

    @Override
    public AvailabilityCondition withDescription(MultilingualString value) {
        setDescription(value);
        return this;
    }

    @Override
    public AvailabilityCondition withConditionedObjectRef(VersionOfObjectRefStructure value) {
        setConditionedObjectRef(value);
        return this;
    }

    @Override
    public AvailabilityCondition withWithConditionRef(ValidityConditionRefStructure value) {
        setWithConditionRef(value);
        return this;
    }

    @Override
    public AvailabilityCondition withKeyList(KeyListStructure value) {
        setKeyList(value);
        return this;
    }

    @Override
    public AvailabilityCondition withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public AvailabilityCondition withBrandingRef(BrandingRefStructure value) {
        setBrandingRef(value);
        return this;
    }

    @Override
    public AvailabilityCondition withResponsibilitySetRef(String value) {
        setResponsibilitySetRef(value);
        return this;
    }

    @Override
    public AvailabilityCondition withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public AvailabilityCondition withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public AvailabilityCondition withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public AvailabilityCondition withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public AvailabilityCondition withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public AvailabilityCondition withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public AvailabilityCondition withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public AvailabilityCondition withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public AvailabilityCondition withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public AvailabilityCondition withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public AvailabilityCondition withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public AvailabilityCondition withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public AvailabilityCondition withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public AvailabilityCondition withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public AvailabilityCondition withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
