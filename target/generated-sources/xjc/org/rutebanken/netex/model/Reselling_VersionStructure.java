//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.math.BigDecimal;
import java.time.Duration;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.migesok.jaxb.adapter.javatime.DurationXmlAdapter;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for Reselling_VersionStructure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Reselling_VersionStructure"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.netex.org.uk/netex}UsageParameter_VersionStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.netex.org.uk/netex}ResellingGroup"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Reselling_VersionStructure", propOrder = {
    "allowed",
    "canChangeClass",
    "unusedTicketsOnly",
    "onlyAtCertainDistributionPoints",
    "resellWhen",
    "exchangableFromAnyTime",
    "exchangableFromDuration",
    "exchangableFromPercentUse",
    "exchangableFromIntervalRef",
    "exchangableUntilAnyTime",
    "exchangableUntilDuration",
    "exchangableUntilPercentUse",
    "exchangableUntilIntervalRef",
    "effectiveFrom",
    "notificationPeriod",
    "hasFee",
    "refundBasis",
    "paymentMethods",
    "typesOfPaymentMethodRef"
})
@XmlSeeAlso({
    Reselling.class,
    Exchanging_VersionStructure.class,
    Refunding_VersionStructure.class,
    Replacing_VersionStructure.class
})
public class Reselling_VersionStructure
    extends UsageParameter_VersionStructure
{

    @XmlElement(name = "Allowed")
    @XmlSchemaType(name = "normalizedString")
    protected ResellTypeEnumeration allowed;
    @XmlElement(name = "CanChangeClass")
    protected Boolean canChangeClass;
    @XmlElement(name = "UnusedTicketsOnly")
    protected Boolean unusedTicketsOnly;
    @XmlElement(name = "OnlyAtCertainDistributionPoints")
    protected Boolean onlyAtCertainDistributionPoints;
    @XmlElement(name = "ResellWhen")
    @XmlSchemaType(name = "normalizedString")
    protected ResellWhenEnumeration resellWhen;
    @XmlElement(name = "ExchangableFromAnyTime")
    protected String exchangableFromAnyTime;
    @XmlElement(name = "ExchangableFromDuration", type = String.class)
    @XmlJavaTypeAdapter(DurationXmlAdapter.class)
    @XmlSchemaType(name = "duration")
    protected Duration exchangableFromDuration;
    @XmlElement(name = "ExchangableFromPercentUse")
    protected BigDecimal exchangableFromPercentUse;
    @XmlElement(name = "ExchangableFromIntervalRef")
    protected TimeIntervalRefStructure exchangableFromIntervalRef;
    @XmlElement(name = "ExchangableUntilAnyTime")
    protected String exchangableUntilAnyTime;
    @XmlElement(name = "ExchangableUntilDuration", type = String.class)
    @XmlJavaTypeAdapter(DurationXmlAdapter.class)
    @XmlSchemaType(name = "duration")
    protected Duration exchangableUntilDuration;
    @XmlElement(name = "ExchangableUntilPercentUse")
    protected BigDecimal exchangableUntilPercentUse;
    @XmlElement(name = "ExchangableUntilIntervalRef")
    protected TimeIntervalRefStructure exchangableUntilIntervalRef;
    @XmlElement(name = "EffectiveFrom")
    @XmlSchemaType(name = "normalizedString")
    protected EffectiveFromEnumeration effectiveFrom;
    @XmlElement(name = "NotificationPeriod", type = String.class)
    @XmlJavaTypeAdapter(DurationXmlAdapter.class)
    @XmlSchemaType(name = "duration")
    protected Duration notificationPeriod;
    @XmlElement(name = "HasFee")
    protected Boolean hasFee;
    @XmlElement(name = "RefundBasis")
    @XmlSchemaType(name = "normalizedString")
    protected PerBasisEnumeration refundBasis;
    @XmlList
    @XmlElement(name = "PaymentMethods")
    protected List<PaymentMethodEnumeration> paymentMethods;
    protected TypeOfPaymentMethodRefs_RelStructure typesOfPaymentMethodRef;

    /**
     * Gets the value of the allowed property.
     * 
     * @return
     *     possible object is
     *     {@link ResellTypeEnumeration }
     *     
     */
    public ResellTypeEnumeration getAllowed() {
        return allowed;
    }

    /**
     * Sets the value of the allowed property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResellTypeEnumeration }
     *     
     */
    public void setAllowed(ResellTypeEnumeration value) {
        this.allowed = value;
    }

    /**
     * Gets the value of the canChangeClass property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isCanChangeClass() {
        return canChangeClass;
    }

    /**
     * Sets the value of the canChangeClass property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setCanChangeClass(Boolean value) {
        this.canChangeClass = value;
    }

    /**
     * Gets the value of the unusedTicketsOnly property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isUnusedTicketsOnly() {
        return unusedTicketsOnly;
    }

    /**
     * Sets the value of the unusedTicketsOnly property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setUnusedTicketsOnly(Boolean value) {
        this.unusedTicketsOnly = value;
    }

    /**
     * Gets the value of the onlyAtCertainDistributionPoints property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isOnlyAtCertainDistributionPoints() {
        return onlyAtCertainDistributionPoints;
    }

    /**
     * Sets the value of the onlyAtCertainDistributionPoints property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setOnlyAtCertainDistributionPoints(Boolean value) {
        this.onlyAtCertainDistributionPoints = value;
    }

    /**
     * Gets the value of the resellWhen property.
     * 
     * @return
     *     possible object is
     *     {@link ResellWhenEnumeration }
     *     
     */
    public ResellWhenEnumeration getResellWhen() {
        return resellWhen;
    }

    /**
     * Sets the value of the resellWhen property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResellWhenEnumeration }
     *     
     */
    public void setResellWhen(ResellWhenEnumeration value) {
        this.resellWhen = value;
    }

    /**
     * Gets the value of the exchangableFromAnyTime property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExchangableFromAnyTime() {
        return exchangableFromAnyTime;
    }

    /**
     * Sets the value of the exchangableFromAnyTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExchangableFromAnyTime(String value) {
        this.exchangableFromAnyTime = value;
    }

    /**
     * Gets the value of the exchangableFromDuration property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Duration getExchangableFromDuration() {
        return exchangableFromDuration;
    }

    /**
     * Sets the value of the exchangableFromDuration property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExchangableFromDuration(Duration value) {
        this.exchangableFromDuration = value;
    }

    /**
     * Gets the value of the exchangableFromPercentUse property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getExchangableFromPercentUse() {
        return exchangableFromPercentUse;
    }

    /**
     * Sets the value of the exchangableFromPercentUse property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setExchangableFromPercentUse(BigDecimal value) {
        this.exchangableFromPercentUse = value;
    }

    /**
     * Gets the value of the exchangableFromIntervalRef property.
     * 
     * @return
     *     possible object is
     *     {@link TimeIntervalRefStructure }
     *     
     */
    public TimeIntervalRefStructure getExchangableFromIntervalRef() {
        return exchangableFromIntervalRef;
    }

    /**
     * Sets the value of the exchangableFromIntervalRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link TimeIntervalRefStructure }
     *     
     */
    public void setExchangableFromIntervalRef(TimeIntervalRefStructure value) {
        this.exchangableFromIntervalRef = value;
    }

    /**
     * Gets the value of the exchangableUntilAnyTime property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExchangableUntilAnyTime() {
        return exchangableUntilAnyTime;
    }

    /**
     * Sets the value of the exchangableUntilAnyTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExchangableUntilAnyTime(String value) {
        this.exchangableUntilAnyTime = value;
    }

    /**
     * Gets the value of the exchangableUntilDuration property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Duration getExchangableUntilDuration() {
        return exchangableUntilDuration;
    }

    /**
     * Sets the value of the exchangableUntilDuration property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExchangableUntilDuration(Duration value) {
        this.exchangableUntilDuration = value;
    }

    /**
     * Gets the value of the exchangableUntilPercentUse property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getExchangableUntilPercentUse() {
        return exchangableUntilPercentUse;
    }

    /**
     * Sets the value of the exchangableUntilPercentUse property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setExchangableUntilPercentUse(BigDecimal value) {
        this.exchangableUntilPercentUse = value;
    }

    /**
     * Gets the value of the exchangableUntilIntervalRef property.
     * 
     * @return
     *     possible object is
     *     {@link TimeIntervalRefStructure }
     *     
     */
    public TimeIntervalRefStructure getExchangableUntilIntervalRef() {
        return exchangableUntilIntervalRef;
    }

    /**
     * Sets the value of the exchangableUntilIntervalRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link TimeIntervalRefStructure }
     *     
     */
    public void setExchangableUntilIntervalRef(TimeIntervalRefStructure value) {
        this.exchangableUntilIntervalRef = value;
    }

    /**
     * Gets the value of the effectiveFrom property.
     * 
     * @return
     *     possible object is
     *     {@link EffectiveFromEnumeration }
     *     
     */
    public EffectiveFromEnumeration getEffectiveFrom() {
        return effectiveFrom;
    }

    /**
     * Sets the value of the effectiveFrom property.
     * 
     * @param value
     *     allowed object is
     *     {@link EffectiveFromEnumeration }
     *     
     */
    public void setEffectiveFrom(EffectiveFromEnumeration value) {
        this.effectiveFrom = value;
    }

    /**
     * Gets the value of the notificationPeriod property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Duration getNotificationPeriod() {
        return notificationPeriod;
    }

    /**
     * Sets the value of the notificationPeriod property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNotificationPeriod(Duration value) {
        this.notificationPeriod = value;
    }

    /**
     * Gets the value of the hasFee property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isHasFee() {
        return hasFee;
    }

    /**
     * Sets the value of the hasFee property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setHasFee(Boolean value) {
        this.hasFee = value;
    }

    /**
     * Gets the value of the refundBasis property.
     * 
     * @return
     *     possible object is
     *     {@link PerBasisEnumeration }
     *     
     */
    public PerBasisEnumeration getRefundBasis() {
        return refundBasis;
    }

    /**
     * Sets the value of the refundBasis property.
     * 
     * @param value
     *     allowed object is
     *     {@link PerBasisEnumeration }
     *     
     */
    public void setRefundBasis(PerBasisEnumeration value) {
        this.refundBasis = value;
    }

    /**
     * Gets the value of the paymentMethods property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the paymentMethods property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPaymentMethods().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PaymentMethodEnumeration }
     * 
     * 
     */
    public List<PaymentMethodEnumeration> getPaymentMethods() {
        if (paymentMethods == null) {
            paymentMethods = new ArrayList<PaymentMethodEnumeration>();
        }
        return this.paymentMethods;
    }

    /**
     * Gets the value of the typesOfPaymentMethodRef property.
     * 
     * @return
     *     possible object is
     *     {@link TypeOfPaymentMethodRefs_RelStructure }
     *     
     */
    public TypeOfPaymentMethodRefs_RelStructure getTypesOfPaymentMethodRef() {
        return typesOfPaymentMethodRef;
    }

    /**
     * Sets the value of the typesOfPaymentMethodRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypeOfPaymentMethodRefs_RelStructure }
     *     
     */
    public void setTypesOfPaymentMethodRef(TypeOfPaymentMethodRefs_RelStructure value) {
        this.typesOfPaymentMethodRef = value;
    }

    public Reselling_VersionStructure withAllowed(ResellTypeEnumeration value) {
        setAllowed(value);
        return this;
    }

    public Reselling_VersionStructure withCanChangeClass(Boolean value) {
        setCanChangeClass(value);
        return this;
    }

    public Reselling_VersionStructure withUnusedTicketsOnly(Boolean value) {
        setUnusedTicketsOnly(value);
        return this;
    }

    public Reselling_VersionStructure withOnlyAtCertainDistributionPoints(Boolean value) {
        setOnlyAtCertainDistributionPoints(value);
        return this;
    }

    public Reselling_VersionStructure withResellWhen(ResellWhenEnumeration value) {
        setResellWhen(value);
        return this;
    }

    public Reselling_VersionStructure withExchangableFromAnyTime(String value) {
        setExchangableFromAnyTime(value);
        return this;
    }

    public Reselling_VersionStructure withExchangableFromDuration(Duration value) {
        setExchangableFromDuration(value);
        return this;
    }

    public Reselling_VersionStructure withExchangableFromPercentUse(BigDecimal value) {
        setExchangableFromPercentUse(value);
        return this;
    }

    public Reselling_VersionStructure withExchangableFromIntervalRef(TimeIntervalRefStructure value) {
        setExchangableFromIntervalRef(value);
        return this;
    }

    public Reselling_VersionStructure withExchangableUntilAnyTime(String value) {
        setExchangableUntilAnyTime(value);
        return this;
    }

    public Reselling_VersionStructure withExchangableUntilDuration(Duration value) {
        setExchangableUntilDuration(value);
        return this;
    }

    public Reselling_VersionStructure withExchangableUntilPercentUse(BigDecimal value) {
        setExchangableUntilPercentUse(value);
        return this;
    }

    public Reselling_VersionStructure withExchangableUntilIntervalRef(TimeIntervalRefStructure value) {
        setExchangableUntilIntervalRef(value);
        return this;
    }

    public Reselling_VersionStructure withEffectiveFrom(EffectiveFromEnumeration value) {
        setEffectiveFrom(value);
        return this;
    }

    public Reselling_VersionStructure withNotificationPeriod(Duration value) {
        setNotificationPeriod(value);
        return this;
    }

    public Reselling_VersionStructure withHasFee(Boolean value) {
        setHasFee(value);
        return this;
    }

    public Reselling_VersionStructure withRefundBasis(PerBasisEnumeration value) {
        setRefundBasis(value);
        return this;
    }

    public Reselling_VersionStructure withPaymentMethods(PaymentMethodEnumeration... values) {
        if (values!= null) {
            for (PaymentMethodEnumeration value: values) {
                getPaymentMethods().add(value);
            }
        }
        return this;
    }

    public Reselling_VersionStructure withPaymentMethods(Collection<PaymentMethodEnumeration> values) {
        if (values!= null) {
            getPaymentMethods().addAll(values);
        }
        return this;
    }

    public Reselling_VersionStructure withTypesOfPaymentMethodRef(TypeOfPaymentMethodRefs_RelStructure value) {
        setTypesOfPaymentMethodRef(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withTypeOfUsageParameterRef(TypeOfUsageParameterRefStructure value) {
        setTypeOfUsageParameterRef(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withPrices(UsageParameterPrices_RelStructure value) {
        setPrices(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withName(MultilingualString value) {
        setName(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withDescription(MultilingualString value) {
        setDescription(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withUrl(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withInfoLinks(org.rutebanken.netex.model.PriceableObject_VersionStructure.InfoLinks value) {
        setInfoLinks(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withAlternativeNames(AlternativeNames_RelStructure value) {
        setAlternativeNames(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withNoticeAssignments(NoticeAssignments_RelStructure value) {
        setNoticeAssignments(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withPricingServiceRef(PricingServiceRefStructure value) {
        setPricingServiceRef(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withPricingRuleRef(JAXBElement<? extends PricingRuleRefStructure> value) {
        setPricingRuleRef(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withPriceGroups(PriceGroups_RelStructure value) {
        setPriceGroups(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withFareTables(FareTables_RelStructure value) {
        setFareTables(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withKeyList(KeyListStructure value) {
        setKeyList(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withBrandingRef(BrandingRefStructure value) {
        setBrandingRef(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withResponsibilitySetRef(String value) {
        setResponsibilitySetRef(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public Reselling_VersionStructure withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public Reselling_VersionStructure withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public Reselling_VersionStructure withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
