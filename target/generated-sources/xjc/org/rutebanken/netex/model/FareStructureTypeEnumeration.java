//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for FareStructureTypeEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="FareStructureTypeEnumeration"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString"&gt;
 *     &lt;enumeration value="networkFlatFare"/&gt;
 *     &lt;enumeration value="lineFlatFare"/&gt;
 *     &lt;enumeration value="zonalFare"/&gt;
 *     &lt;enumeration value="zoneToZoneFare"/&gt;
 *     &lt;enumeration value="zoneSequenceFare"/&gt;
 *     &lt;enumeration value="cappedFlatFare"/&gt;
 *     &lt;enumeration value="cappedPointToPointFare"/&gt;
 *     &lt;enumeration value="cappedZonalFare"/&gt;
 *     &lt;enumeration value="pointToPointFare"/&gt;
 *     &lt;enumeration value="pointToPointDistanceFare"/&gt;
 *     &lt;enumeration value="stageFare"/&gt;
 *     &lt;enumeration value="penaltyFare"/&gt;
 *     &lt;enumeration value="other"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "FareStructureTypeEnumeration")
@XmlEnum
public enum FareStructureTypeEnumeration {

    @XmlEnumValue("networkFlatFare")
    NETWORK_FLAT_FARE("networkFlatFare"),
    @XmlEnumValue("lineFlatFare")
    LINE_FLAT_FARE("lineFlatFare"),
    @XmlEnumValue("zonalFare")
    ZONAL_FARE("zonalFare"),
    @XmlEnumValue("zoneToZoneFare")
    ZONE_TO_ZONE_FARE("zoneToZoneFare"),
    @XmlEnumValue("zoneSequenceFare")
    ZONE_SEQUENCE_FARE("zoneSequenceFare"),
    @XmlEnumValue("cappedFlatFare")
    CAPPED_FLAT_FARE("cappedFlatFare"),
    @XmlEnumValue("cappedPointToPointFare")
    CAPPED_POINT_TO_POINT_FARE("cappedPointToPointFare"),
    @XmlEnumValue("cappedZonalFare")
    CAPPED_ZONAL_FARE("cappedZonalFare"),
    @XmlEnumValue("pointToPointFare")
    POINT_TO_POINT_FARE("pointToPointFare"),
    @XmlEnumValue("pointToPointDistanceFare")
    POINT_TO_POINT_DISTANCE_FARE("pointToPointDistanceFare"),
    @XmlEnumValue("stageFare")
    STAGE_FARE("stageFare"),
    @XmlEnumValue("penaltyFare")
    PENALTY_FARE("penaltyFare"),
    @XmlEnumValue("other")
    OTHER("other");
    private final String value;

    FareStructureTypeEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static FareStructureTypeEnumeration fromValue(String v) {
        for (FareStructureTypeEnumeration c: FareStructureTypeEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
