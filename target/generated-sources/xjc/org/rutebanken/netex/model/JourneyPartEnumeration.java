//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for JourneyPartEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="JourneyPartEnumeration"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN"&gt;
 *     &lt;enumeration value="joiningTo"/&gt;
 *     &lt;enumeration value="splittingFrom"/&gt;
 *     &lt;enumeration value="splittingTo"/&gt;
 *     &lt;enumeration value="joinFrom"/&gt;
 *     &lt;enumeration value="connectTo"/&gt;
 *     &lt;enumeration value="identificationNumberChange"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "JourneyPartEnumeration")
@XmlEnum
public enum JourneyPartEnumeration {

    @XmlEnumValue("joiningTo")
    JOINING_TO("joiningTo"),
    @XmlEnumValue("splittingFrom")
    SPLITTING_FROM("splittingFrom"),
    @XmlEnumValue("splittingTo")
    SPLITTING_TO("splittingTo"),
    @XmlEnumValue("joinFrom")
    JOIN_FROM("joinFrom"),
    @XmlEnumValue("connectTo")
    CONNECT_TO("connectTo"),
    @XmlEnumValue("identificationNumberChange")
    IDENTIFICATION_NUMBER_CHANGE("identificationNumberChange");
    private final String value;

    JourneyPartEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static JourneyPartEnumeration fromValue(String v) {
        for (JourneyPartEnumeration c: JourneyPartEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
