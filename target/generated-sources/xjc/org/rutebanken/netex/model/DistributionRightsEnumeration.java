//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DistributionRightsEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DistributionRightsEnumeration"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString"&gt;
 *     &lt;enumeration value="none"/&gt;
 *     &lt;enumeration value="sell"/&gt;
 *     &lt;enumeration value="exchange"/&gt;
 *     &lt;enumeration value="refund"/&gt;
 *     &lt;enumeration value="inform"/&gt;
 *     &lt;enumeration value="private"/&gt;
 *     &lt;enumeration value="other"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "DistributionRightsEnumeration")
@XmlEnum
public enum DistributionRightsEnumeration {

    @XmlEnumValue("none")
    NONE("none"),
    @XmlEnumValue("sell")
    SELL("sell"),
    @XmlEnumValue("exchange")
    EXCHANGE("exchange"),
    @XmlEnumValue("refund")
    REFUND("refund"),
    @XmlEnumValue("inform")
    INFORM("inform"),
    @XmlEnumValue("private")
    PRIVATE("private"),
    @XmlEnumValue("other")
    OTHER("other");
    private final String value;

    DistributionRightsEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DistributionRightsEnumeration fromValue(String v) {
        for (DistributionRightsEnumeration c: DistributionRightsEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
