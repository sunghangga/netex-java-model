//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDateTime;
import java.util.Collection;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for LimitingRule_VersionedStructure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="LimitingRule_VersionedStructure"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.netex.org.uk/netex}DiscountingRule_VersionedStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.netex.org.uk/netex}LimitingRuleGroup"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "LimitingRule_VersionedStructure", propOrder = {
    "minimumPrice",
    "minimumPriceAsPercentage",
    "minimumPriceAsMultiple",
    "maximumPrice",
    "maximumPriceAsPercentage",
    "maximumPriceAsMultiple",
    "minimumLimitPriceAsPercentage",
    "minimumLimitPrice",
    "maximumLimitPriceAsPercentage",
    "maximumLimitPrice"
})
@XmlSeeAlso({
    LimitingRule.class,
    LimitingRuleInContext.class
})
public abstract class LimitingRule_VersionedStructure
    extends DiscountingRule_VersionedStructure
{

    @XmlElement(name = "MinimumPrice")
    protected BigDecimal minimumPrice;
    @XmlElement(name = "MinimumPriceAsPercentage")
    protected BigDecimal minimumPriceAsPercentage;
    @XmlElement(name = "MinimumPriceAsMultiple")
    protected BigInteger minimumPriceAsMultiple;
    @XmlElement(name = "MaximumPrice")
    protected BigDecimal maximumPrice;
    @XmlElement(name = "MaximumPriceAsPercentage")
    protected BigDecimal maximumPriceAsPercentage;
    @XmlElement(name = "MaximumPriceAsMultiple")
    protected BigInteger maximumPriceAsMultiple;
    @XmlElement(name = "MinimumLimitPriceAsPercentage")
    protected BigDecimal minimumLimitPriceAsPercentage;
    @XmlElement(name = "MinimumLimitPrice")
    protected BigDecimal minimumLimitPrice;
    @XmlElement(name = "MaximumLimitPriceAsPercentage")
    protected BigDecimal maximumLimitPriceAsPercentage;
    @XmlElement(name = "MaximumLimitPrice")
    protected BigDecimal maximumLimitPrice;

    /**
     * Gets the value of the minimumPrice property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getMinimumPrice() {
        return minimumPrice;
    }

    /**
     * Sets the value of the minimumPrice property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setMinimumPrice(BigDecimal value) {
        this.minimumPrice = value;
    }

    /**
     * Gets the value of the minimumPriceAsPercentage property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getMinimumPriceAsPercentage() {
        return minimumPriceAsPercentage;
    }

    /**
     * Sets the value of the minimumPriceAsPercentage property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setMinimumPriceAsPercentage(BigDecimal value) {
        this.minimumPriceAsPercentage = value;
    }

    /**
     * Gets the value of the minimumPriceAsMultiple property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMinimumPriceAsMultiple() {
        return minimumPriceAsMultiple;
    }

    /**
     * Sets the value of the minimumPriceAsMultiple property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMinimumPriceAsMultiple(BigInteger value) {
        this.minimumPriceAsMultiple = value;
    }

    /**
     * Gets the value of the maximumPrice property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getMaximumPrice() {
        return maximumPrice;
    }

    /**
     * Sets the value of the maximumPrice property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setMaximumPrice(BigDecimal value) {
        this.maximumPrice = value;
    }

    /**
     * Gets the value of the maximumPriceAsPercentage property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getMaximumPriceAsPercentage() {
        return maximumPriceAsPercentage;
    }

    /**
     * Sets the value of the maximumPriceAsPercentage property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setMaximumPriceAsPercentage(BigDecimal value) {
        this.maximumPriceAsPercentage = value;
    }

    /**
     * Gets the value of the maximumPriceAsMultiple property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaximumPriceAsMultiple() {
        return maximumPriceAsMultiple;
    }

    /**
     * Sets the value of the maximumPriceAsMultiple property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMaximumPriceAsMultiple(BigInteger value) {
        this.maximumPriceAsMultiple = value;
    }

    /**
     * Gets the value of the minimumLimitPriceAsPercentage property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getMinimumLimitPriceAsPercentage() {
        return minimumLimitPriceAsPercentage;
    }

    /**
     * Sets the value of the minimumLimitPriceAsPercentage property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setMinimumLimitPriceAsPercentage(BigDecimal value) {
        this.minimumLimitPriceAsPercentage = value;
    }

    /**
     * Gets the value of the minimumLimitPrice property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getMinimumLimitPrice() {
        return minimumLimitPrice;
    }

    /**
     * Sets the value of the minimumLimitPrice property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setMinimumLimitPrice(BigDecimal value) {
        this.minimumLimitPrice = value;
    }

    /**
     * Gets the value of the maximumLimitPriceAsPercentage property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getMaximumLimitPriceAsPercentage() {
        return maximumLimitPriceAsPercentage;
    }

    /**
     * Sets the value of the maximumLimitPriceAsPercentage property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setMaximumLimitPriceAsPercentage(BigDecimal value) {
        this.maximumLimitPriceAsPercentage = value;
    }

    /**
     * Gets the value of the maximumLimitPrice property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getMaximumLimitPrice() {
        return maximumLimitPrice;
    }

    /**
     * Sets the value of the maximumLimitPrice property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setMaximumLimitPrice(BigDecimal value) {
        this.maximumLimitPrice = value;
    }

    public LimitingRule_VersionedStructure withMinimumPrice(BigDecimal value) {
        setMinimumPrice(value);
        return this;
    }

    public LimitingRule_VersionedStructure withMinimumPriceAsPercentage(BigDecimal value) {
        setMinimumPriceAsPercentage(value);
        return this;
    }

    public LimitingRule_VersionedStructure withMinimumPriceAsMultiple(BigInteger value) {
        setMinimumPriceAsMultiple(value);
        return this;
    }

    public LimitingRule_VersionedStructure withMaximumPrice(BigDecimal value) {
        setMaximumPrice(value);
        return this;
    }

    public LimitingRule_VersionedStructure withMaximumPriceAsPercentage(BigDecimal value) {
        setMaximumPriceAsPercentage(value);
        return this;
    }

    public LimitingRule_VersionedStructure withMaximumPriceAsMultiple(BigInteger value) {
        setMaximumPriceAsMultiple(value);
        return this;
    }

    public LimitingRule_VersionedStructure withMinimumLimitPriceAsPercentage(BigDecimal value) {
        setMinimumLimitPriceAsPercentage(value);
        return this;
    }

    public LimitingRule_VersionedStructure withMinimumLimitPrice(BigDecimal value) {
        setMinimumLimitPrice(value);
        return this;
    }

    public LimitingRule_VersionedStructure withMaximumLimitPriceAsPercentage(BigDecimal value) {
        setMaximumLimitPriceAsPercentage(value);
        return this;
    }

    public LimitingRule_VersionedStructure withMaximumLimitPrice(BigDecimal value) {
        setMaximumLimitPrice(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withDiscountAsPercentage(BigDecimal value) {
        setDiscountAsPercentage(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withDiscountAsValue(BigDecimal value) {
        setDiscountAsValue(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withCanBeCumulative(Boolean value) {
        setCanBeCumulative(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withName(MultilingualString value) {
        setName(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withDescription(MultilingualString value) {
        setDescription(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withMethodName(String value) {
        setMethodName(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withTypeOfPricingRuleRef(TypeOfPricingRuleRefStructure value) {
        setTypeOfPricingRuleRef(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withPricingRuleRef(JAXBElement<? extends PricingRuleRefStructure> value) {
        setPricingRuleRef(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withFactor(BigDecimal value) {
        setFactor(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withCurrency(String value) {
        setCurrency(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withPriceUnitRef(PriceUnitRefStructure value) {
        setPriceUnitRef(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withUrl(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withKeyList(KeyListStructure value) {
        setKeyList(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withBrandingRef(BrandingRefStructure value) {
        setBrandingRef(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withResponsibilitySetRef(String value) {
        setResponsibilitySetRef(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public LimitingRule_VersionedStructure withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
