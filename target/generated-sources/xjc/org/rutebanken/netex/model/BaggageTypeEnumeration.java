//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for BaggageTypeEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="BaggageTypeEnumeration"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString"&gt;
 *     &lt;enumeration value="handbag"/&gt;
 *     &lt;enumeration value="handLuggage"/&gt;
 *     &lt;enumeration value="smallSuitcase"/&gt;
 *     &lt;enumeration value="suitcase"/&gt;
 *     &lt;enumeration value="trunk"/&gt;
 *     &lt;enumeration value="oversizeItem"/&gt;
 *     &lt;enumeration value="bicycle"/&gt;
 *     &lt;enumeration value="motorcycle"/&gt;
 *     &lt;enumeration value="sportingEquipment"/&gt;
 *     &lt;enumeration value="skis"/&gt;
 *     &lt;enumeration value="musicalnstrument"/&gt;
 *     &lt;enumeration value="pushChair"/&gt;
 *     &lt;enumeration value="wheelchair"/&gt;
 *     &lt;enumeration value="motorizedWheelchair"/&gt;
 *     &lt;enumeration value="largeMotorizedWheelchair"/&gt;
 *     &lt;enumeration value="smallAnimal"/&gt;
 *     &lt;enumeration value="animal"/&gt;
 *     &lt;enumeration value="game"/&gt;
 *     &lt;enumeration value="other"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "BaggageTypeEnumeration")
@XmlEnum
public enum BaggageTypeEnumeration {

    @XmlEnumValue("handbag")
    HANDBAG("handbag"),
    @XmlEnumValue("handLuggage")
    HAND_LUGGAGE("handLuggage"),
    @XmlEnumValue("smallSuitcase")
    SMALL_SUITCASE("smallSuitcase"),
    @XmlEnumValue("suitcase")
    SUITCASE("suitcase"),
    @XmlEnumValue("trunk")
    TRUNK("trunk"),
    @XmlEnumValue("oversizeItem")
    OVERSIZE_ITEM("oversizeItem"),
    @XmlEnumValue("bicycle")
    BICYCLE("bicycle"),
    @XmlEnumValue("motorcycle")
    MOTORCYCLE("motorcycle"),
    @XmlEnumValue("sportingEquipment")
    SPORTING_EQUIPMENT("sportingEquipment"),
    @XmlEnumValue("skis")
    SKIS("skis"),
    @XmlEnumValue("musicalnstrument")
    MUSICALNSTRUMENT("musicalnstrument"),
    @XmlEnumValue("pushChair")
    PUSH_CHAIR("pushChair"),
    @XmlEnumValue("wheelchair")
    WHEELCHAIR("wheelchair"),
    @XmlEnumValue("motorizedWheelchair")
    MOTORIZED_WHEELCHAIR("motorizedWheelchair"),
    @XmlEnumValue("largeMotorizedWheelchair")
    LARGE_MOTORIZED_WHEELCHAIR("largeMotorizedWheelchair"),
    @XmlEnumValue("smallAnimal")
    SMALL_ANIMAL("smallAnimal"),
    @XmlEnumValue("animal")
    ANIMAL("animal"),
    @XmlEnumValue("game")
    GAME("game"),
    @XmlEnumValue("other")
    OTHER("other");
    private final String value;

    BaggageTypeEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static BaggageTypeEnumeration fromValue(String v) {
        for (BaggageTypeEnumeration c: BaggageTypeEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
