//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.math.BigInteger;
import java.time.Duration;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.Collection;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.netex.org.uk/netex}ObservedPassingTime_VersionedChildStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;sequence&gt;
 *           &lt;group ref="{http://www.netex.org.uk/netex}VersionedChildGroup"/&gt;
 *         &lt;/sequence&gt;
 *         &lt;sequence&gt;
 *           &lt;group ref="{http://www.netex.org.uk/netex}PassingTimeGroup"/&gt;
 *         &lt;/sequence&gt;
 *         &lt;sequence&gt;
 *           &lt;group ref="{http://www.netex.org.uk/netex}DatedPassingTimeGroup"/&gt;
 *         &lt;/sequence&gt;
 *         &lt;sequence&gt;
 *           &lt;group ref="{http://www.netex.org.uk/netex}ObservedPassingTimeGroup"/&gt;
 *         &lt;/sequence&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="id" type="{http://www.netex.org.uk/netex}ObservedPassingTimeIdType" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
public class ObservedPassingTime
    extends ObservedPassingTime_VersionedChildStructure
{


    @Override
    public ObservedPassingTime withActualArrivalTime(LocalTime value) {
        setActualArrivalTime(value);
        return this;
    }

    @Override
    public ObservedPassingTime withArrivalDayOffset(BigInteger value) {
        setArrivalDayOffset(value);
        return this;
    }

    @Override
    public ObservedPassingTime withActualDepartureTime(LocalTime value) {
        setActualDepartureTime(value);
        return this;
    }

    @Override
    public ObservedPassingTime withDepartureDayOffset(BigInteger value) {
        setDepartureDayOffset(value);
        return this;
    }

    @Override
    public ObservedPassingTime withActualWaitingTime(Duration value) {
        setActualWaitingTime(value);
        return this;
    }

    @Override
    public ObservedPassingTime withActualNonstopPassingTime(LocalTime value) {
        setActualNonstopPassingTime(value);
        return this;
    }

    @Override
    public ObservedPassingTime withPassingTimeDayOffset(BigInteger value) {
        setPassingTimeDayOffset(value);
        return this;
    }

    @Override
    public ObservedPassingTime withActualHeadway(HeadwayIntervalStructure value) {
        setActualHeadway(value);
        return this;
    }

    @Override
    public ObservedPassingTime withDatedJourneyRef(JourneyRefStructure value) {
        setDatedJourneyRef(value);
        return this;
    }

    @Override
    public ObservedPassingTime withJourneyRef(JAXBElement<? extends JourneyRefStructure> value) {
        setJourneyRef(value);
        return this;
    }

    @Override
    public ObservedPassingTime withAlightAndReboard(Boolean value) {
        setAlightAndReboard(value);
        return this;
    }

    @Override
    public ObservedPassingTime withPointInJourneyPatternRef(JAXBElement<? extends PointInJourneyPatternRefStructure> value) {
        setPointInJourneyPatternRef(value);
        return this;
    }

    @Override
    public ObservedPassingTime withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public ObservedPassingTime withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public ObservedPassingTime withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public ObservedPassingTime withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public ObservedPassingTime withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public ObservedPassingTime withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public ObservedPassingTime withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public ObservedPassingTime withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public ObservedPassingTime withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public ObservedPassingTime withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public ObservedPassingTime withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public ObservedPassingTime withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public ObservedPassingTime withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public ObservedPassingTime withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public ObservedPassingTime withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public ObservedPassingTime withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
