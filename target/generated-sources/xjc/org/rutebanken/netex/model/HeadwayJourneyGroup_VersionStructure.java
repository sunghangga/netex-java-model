//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.math.BigInteger;
import java.time.Duration;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.Collection;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.migesok.jaxb.adapter.javatime.DurationXmlAdapter;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for HeadwayJourneyGroup_VersionStructure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="HeadwayJourneyGroup_VersionStructure"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.netex.org.uk/netex}JourneyFrequencyGroup_VersionStructure"&gt;
 *       &lt;group ref="{http://www.netex.org.uk/netex}HeadwayJourneyGroupGroup"/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "HeadwayJourneyGroup_VersionStructure", propOrder = {
    "scheduledHeadwayInterval",
    "minimumHeadwayInterval",
    "maximumHeadwayInterval",
    "headwayDisplay",
    "descriptionHeadwayJourneyGroupGroup"
})
@XmlSeeAlso({
    HeadwayJourneyGroup.class
})
public class HeadwayJourneyGroup_VersionStructure
    extends JourneyFrequencyGroup_VersionStructure
{

    @XmlElement(name = "ScheduledHeadwayInterval", type = String.class)
    @XmlJavaTypeAdapter(DurationXmlAdapter.class)
    @XmlSchemaType(name = "duration")
    protected Duration scheduledHeadwayInterval;
    @XmlElement(name = "MinimumHeadwayInterval", type = String.class)
    @XmlJavaTypeAdapter(DurationXmlAdapter.class)
    @XmlSchemaType(name = "duration")
    protected Duration minimumHeadwayInterval;
    @XmlElement(name = "MaximumHeadwayInterval", type = String.class)
    @XmlJavaTypeAdapter(DurationXmlAdapter.class)
    @XmlSchemaType(name = "duration")
    protected Duration maximumHeadwayInterval;
    @XmlElement(name = "HeadwayDisplay")
    @XmlSchemaType(name = "normalizedString")
    protected HeadwayUseEnumeration headwayDisplay;
    @XmlElement(name = "Description")
    protected MultilingualString descriptionHeadwayJourneyGroupGroup;

    /**
     * Gets the value of the scheduledHeadwayInterval property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Duration getScheduledHeadwayInterval() {
        return scheduledHeadwayInterval;
    }

    /**
     * Sets the value of the scheduledHeadwayInterval property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setScheduledHeadwayInterval(Duration value) {
        this.scheduledHeadwayInterval = value;
    }

    /**
     * Gets the value of the minimumHeadwayInterval property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Duration getMinimumHeadwayInterval() {
        return minimumHeadwayInterval;
    }

    /**
     * Sets the value of the minimumHeadwayInterval property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMinimumHeadwayInterval(Duration value) {
        this.minimumHeadwayInterval = value;
    }

    /**
     * Gets the value of the maximumHeadwayInterval property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Duration getMaximumHeadwayInterval() {
        return maximumHeadwayInterval;
    }

    /**
     * Sets the value of the maximumHeadwayInterval property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMaximumHeadwayInterval(Duration value) {
        this.maximumHeadwayInterval = value;
    }

    /**
     * Gets the value of the headwayDisplay property.
     * 
     * @return
     *     possible object is
     *     {@link HeadwayUseEnumeration }
     *     
     */
    public HeadwayUseEnumeration getHeadwayDisplay() {
        return headwayDisplay;
    }

    /**
     * Sets the value of the headwayDisplay property.
     * 
     * @param value
     *     allowed object is
     *     {@link HeadwayUseEnumeration }
     *     
     */
    public void setHeadwayDisplay(HeadwayUseEnumeration value) {
        this.headwayDisplay = value;
    }

    /**
     * Gets the value of the descriptionHeadwayJourneyGroupGroup property.
     * 
     * @return
     *     possible object is
     *     {@link MultilingualString }
     *     
     */
    public MultilingualString getDescriptionHeadwayJourneyGroupGroup() {
        return descriptionHeadwayJourneyGroupGroup;
    }

    /**
     * Sets the value of the descriptionHeadwayJourneyGroupGroup property.
     * 
     * @param value
     *     allowed object is
     *     {@link MultilingualString }
     *     
     */
    public void setDescriptionHeadwayJourneyGroupGroup(MultilingualString value) {
        this.descriptionHeadwayJourneyGroupGroup = value;
    }

    public HeadwayJourneyGroup_VersionStructure withScheduledHeadwayInterval(Duration value) {
        setScheduledHeadwayInterval(value);
        return this;
    }

    public HeadwayJourneyGroup_VersionStructure withMinimumHeadwayInterval(Duration value) {
        setMinimumHeadwayInterval(value);
        return this;
    }

    public HeadwayJourneyGroup_VersionStructure withMaximumHeadwayInterval(Duration value) {
        setMaximumHeadwayInterval(value);
        return this;
    }

    public HeadwayJourneyGroup_VersionStructure withHeadwayDisplay(HeadwayUseEnumeration value) {
        setHeadwayDisplay(value);
        return this;
    }

    public HeadwayJourneyGroup_VersionStructure withDescriptionHeadwayJourneyGroupGroup(MultilingualString value) {
        setDescriptionHeadwayJourneyGroupGroup(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withFirstDepartureTime(LocalTime value) {
        setFirstDepartureTime(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withFirstDayOffset(BigInteger value) {
        setFirstDayOffset(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withLastDepartureTime(LocalTime value) {
        setLastDepartureTime(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withLastDayOffset(BigInteger value) {
        setLastDayOffset(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withTimeDemandTypes(TimeDemandTypeRefs_RelStructure value) {
        setTimeDemandTypes(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withJourneys(ExplicitJourneyRefs_RelStructure value) {
        setJourneys(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withName(MultilingualString value) {
        setName(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withShortName(MultilingualString value) {
        setShortName(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withDescription(MultilingualString value) {
        setDescription(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withPurposeOfGroupingRef(PurposeOfGroupingRefStructure value) {
        setPurposeOfGroupingRef(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withPrivateCode(PrivateCodeStructure value) {
        setPrivateCode(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withInfoLinks(org.rutebanken.netex.model.GroupOfEntities_VersionStructure.InfoLinks value) {
        setInfoLinks(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withKeyList(KeyListStructure value) {
        setKeyList(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withBrandingRef(BrandingRefStructure value) {
        setBrandingRef(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withResponsibilitySetRef(String value) {
        setResponsibilitySetRef(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public HeadwayJourneyGroup_VersionStructure withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
