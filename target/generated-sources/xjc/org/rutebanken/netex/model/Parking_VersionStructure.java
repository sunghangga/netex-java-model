//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.math.BigInteger;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import net.opengis.gml._3.PolygonType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for Parking_VersionStructure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Parking_VersionStructure"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.netex.org.uk/netex}Site_VersionStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.netex.org.uk/netex}ParkingGroup"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Parking_VersionStructure", propOrder = {
    "pathLinks",
    "pathJunctions",
    "accesses",
    "navigationPaths",
    "publicCode",
    "label",
    "parkingType",
    "parkingVehicleTypes",
    "parkingLayout",
    "numberOfParkingLevels",
    "principalCapacity",
    "totalCapacity",
    "overnightParkingPermitted",
    "prohibitedForHazardousMaterials",
    "rechargingAvailable",
    "secure",
    "realTimeOccupancyAvailable",
    "parkingPaymentProcess",
    "paymentMethods",
    "typesOfPaymentMethod",
    "defaultCurrency",
    "currenciesAccepted",
    "cardsAccepted",
    "parkingReservation",
    "bookingUrl",
    "paymentByMobile",
    "freeParkingOutOfHours",
    "parkingProperties",
    "parkingAreas",
    "vehicleEntrances"
})
@XmlSeeAlso({
    Parking.class
})
public class Parking_VersionStructure
    extends Site_VersionStructure
{

    protected SitePathLinks_RelStructure pathLinks;
    protected PathJunctions_RelStructure pathJunctions;
    protected Accesses_RelStructure accesses;
    protected NavigationPaths_RelStructure navigationPaths;
    @XmlElement(name = "PublicCode")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    @XmlSchemaType(name = "normalizedString")
    protected String publicCode;
    @XmlElement(name = "Label")
    protected MultilingualString label;
    @XmlElement(name = "ParkingType")
    @XmlSchemaType(name = "string")
    protected ParkingTypeEnumeration parkingType;
    @XmlList
    @XmlElement(name = "ParkingVehicleTypes")
    protected List<ParkingVehicleEnumeration> parkingVehicleTypes;
    @XmlElement(name = "ParkingLayout")
    @XmlSchemaType(name = "string")
    protected ParkingLayoutEnumeration parkingLayout;
    @XmlElement(name = "NumberOfParkingLevels")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger numberOfParkingLevels;
    @XmlElement(name = "PrincipalCapacity")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger principalCapacity;
    @XmlElement(name = "TotalCapacity")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger totalCapacity;
    @XmlElement(name = "OvernightParkingPermitted")
    protected Boolean overnightParkingPermitted;
    @XmlElement(name = "ProhibitedForHazardousMaterials", defaultValue = "true")
    protected Boolean prohibitedForHazardousMaterials;
    @XmlElement(name = "RechargingAvailable")
    protected Boolean rechargingAvailable;
    @XmlElement(name = "Secure")
    protected Boolean secure;
    @XmlElement(name = "RealTimeOccupancyAvailable")
    protected Boolean realTimeOccupancyAvailable;
    @XmlList
    @XmlElement(name = "ParkingPaymentProcess")
    protected List<ParkingPaymentProcessEnumeration> parkingPaymentProcess;
    @XmlList
    @XmlElement(name = "PaymentMethods")
    protected List<PaymentMethodEnumeration> paymentMethods;
    protected TypeOfPaymentMethodRefs_RelStructure typesOfPaymentMethod;
    @XmlElement(name = "DefaultCurrency")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NMTOKEN")
    protected String defaultCurrency;
    @XmlList
    @XmlElement(name = "CurrenciesAccepted")
    @XmlSchemaType(name = "anySimpleType")
    protected List<String> currenciesAccepted;
    @XmlList
    @XmlElement(name = "CardsAccepted")
    @XmlSchemaType(name = "NMTOKENS")
    protected List<String> cardsAccepted;
    @XmlElement(name = "ParkingReservation")
    @XmlSchemaType(name = "string")
    protected ParkingReservationEnumeration parkingReservation;
    @XmlElement(name = "BookingUrl")
    @XmlSchemaType(name = "anyURI")
    protected String bookingUrl;
    @XmlElement(name = "PaymentByMobile")
    protected PaymentByMobileStructure paymentByMobile;
    @XmlElement(name = "FreeParkingOutOfHours", defaultValue = "true")
    protected Boolean freeParkingOutOfHours;
    protected ParkingProperties_RelStructure parkingProperties;
    protected ParkingAreas_RelStructure parkingAreas;
    protected ParkingEntrancesForVehicles_RelStructure vehicleEntrances;

    /**
     * Gets the value of the pathLinks property.
     * 
     * @return
     *     possible object is
     *     {@link SitePathLinks_RelStructure }
     *     
     */
    public SitePathLinks_RelStructure getPathLinks() {
        return pathLinks;
    }

    /**
     * Sets the value of the pathLinks property.
     * 
     * @param value
     *     allowed object is
     *     {@link SitePathLinks_RelStructure }
     *     
     */
    public void setPathLinks(SitePathLinks_RelStructure value) {
        this.pathLinks = value;
    }

    /**
     * Gets the value of the pathJunctions property.
     * 
     * @return
     *     possible object is
     *     {@link PathJunctions_RelStructure }
     *     
     */
    public PathJunctions_RelStructure getPathJunctions() {
        return pathJunctions;
    }

    /**
     * Sets the value of the pathJunctions property.
     * 
     * @param value
     *     allowed object is
     *     {@link PathJunctions_RelStructure }
     *     
     */
    public void setPathJunctions(PathJunctions_RelStructure value) {
        this.pathJunctions = value;
    }

    /**
     * Gets the value of the accesses property.
     * 
     * @return
     *     possible object is
     *     {@link Accesses_RelStructure }
     *     
     */
    public Accesses_RelStructure getAccesses() {
        return accesses;
    }

    /**
     * Sets the value of the accesses property.
     * 
     * @param value
     *     allowed object is
     *     {@link Accesses_RelStructure }
     *     
     */
    public void setAccesses(Accesses_RelStructure value) {
        this.accesses = value;
    }

    /**
     * Gets the value of the navigationPaths property.
     * 
     * @return
     *     possible object is
     *     {@link NavigationPaths_RelStructure }
     *     
     */
    public NavigationPaths_RelStructure getNavigationPaths() {
        return navigationPaths;
    }

    /**
     * Sets the value of the navigationPaths property.
     * 
     * @param value
     *     allowed object is
     *     {@link NavigationPaths_RelStructure }
     *     
     */
    public void setNavigationPaths(NavigationPaths_RelStructure value) {
        this.navigationPaths = value;
    }

    /**
     * Gets the value of the publicCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPublicCode() {
        return publicCode;
    }

    /**
     * Sets the value of the publicCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPublicCode(String value) {
        this.publicCode = value;
    }

    /**
     * Gets the value of the label property.
     * 
     * @return
     *     possible object is
     *     {@link MultilingualString }
     *     
     */
    public MultilingualString getLabel() {
        return label;
    }

    /**
     * Sets the value of the label property.
     * 
     * @param value
     *     allowed object is
     *     {@link MultilingualString }
     *     
     */
    public void setLabel(MultilingualString value) {
        this.label = value;
    }

    /**
     * Gets the value of the parkingType property.
     * 
     * @return
     *     possible object is
     *     {@link ParkingTypeEnumeration }
     *     
     */
    public ParkingTypeEnumeration getParkingType() {
        return parkingType;
    }

    /**
     * Sets the value of the parkingType property.
     * 
     * @param value
     *     allowed object is
     *     {@link ParkingTypeEnumeration }
     *     
     */
    public void setParkingType(ParkingTypeEnumeration value) {
        this.parkingType = value;
    }

    /**
     * Gets the value of the parkingVehicleTypes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the parkingVehicleTypes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getParkingVehicleTypes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ParkingVehicleEnumeration }
     * 
     * 
     */
    public List<ParkingVehicleEnumeration> getParkingVehicleTypes() {
        if (parkingVehicleTypes == null) {
            parkingVehicleTypes = new ArrayList<ParkingVehicleEnumeration>();
        }
        return this.parkingVehicleTypes;
    }

    /**
     * Gets the value of the parkingLayout property.
     * 
     * @return
     *     possible object is
     *     {@link ParkingLayoutEnumeration }
     *     
     */
    public ParkingLayoutEnumeration getParkingLayout() {
        return parkingLayout;
    }

    /**
     * Sets the value of the parkingLayout property.
     * 
     * @param value
     *     allowed object is
     *     {@link ParkingLayoutEnumeration }
     *     
     */
    public void setParkingLayout(ParkingLayoutEnumeration value) {
        this.parkingLayout = value;
    }

    /**
     * Gets the value of the numberOfParkingLevels property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNumberOfParkingLevels() {
        return numberOfParkingLevels;
    }

    /**
     * Sets the value of the numberOfParkingLevels property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumberOfParkingLevels(BigInteger value) {
        this.numberOfParkingLevels = value;
    }

    /**
     * Gets the value of the principalCapacity property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getPrincipalCapacity() {
        return principalCapacity;
    }

    /**
     * Sets the value of the principalCapacity property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setPrincipalCapacity(BigInteger value) {
        this.principalCapacity = value;
    }

    /**
     * Gets the value of the totalCapacity property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getTotalCapacity() {
        return totalCapacity;
    }

    /**
     * Sets the value of the totalCapacity property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setTotalCapacity(BigInteger value) {
        this.totalCapacity = value;
    }

    /**
     * Gets the value of the overnightParkingPermitted property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isOvernightParkingPermitted() {
        return overnightParkingPermitted;
    }

    /**
     * Sets the value of the overnightParkingPermitted property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setOvernightParkingPermitted(Boolean value) {
        this.overnightParkingPermitted = value;
    }

    /**
     * Gets the value of the prohibitedForHazardousMaterials property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isProhibitedForHazardousMaterials() {
        return prohibitedForHazardousMaterials;
    }

    /**
     * Sets the value of the prohibitedForHazardousMaterials property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setProhibitedForHazardousMaterials(Boolean value) {
        this.prohibitedForHazardousMaterials = value;
    }

    /**
     * Gets the value of the rechargingAvailable property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isRechargingAvailable() {
        return rechargingAvailable;
    }

    /**
     * Sets the value of the rechargingAvailable property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setRechargingAvailable(Boolean value) {
        this.rechargingAvailable = value;
    }

    /**
     * Gets the value of the secure property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isSecure() {
        return secure;
    }

    /**
     * Sets the value of the secure property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSecure(Boolean value) {
        this.secure = value;
    }

    /**
     * Gets the value of the realTimeOccupancyAvailable property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isRealTimeOccupancyAvailable() {
        return realTimeOccupancyAvailable;
    }

    /**
     * Sets the value of the realTimeOccupancyAvailable property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setRealTimeOccupancyAvailable(Boolean value) {
        this.realTimeOccupancyAvailable = value;
    }

    /**
     * Gets the value of the parkingPaymentProcess property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the parkingPaymentProcess property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getParkingPaymentProcess().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ParkingPaymentProcessEnumeration }
     * 
     * 
     */
    public List<ParkingPaymentProcessEnumeration> getParkingPaymentProcess() {
        if (parkingPaymentProcess == null) {
            parkingPaymentProcess = new ArrayList<ParkingPaymentProcessEnumeration>();
        }
        return this.parkingPaymentProcess;
    }

    /**
     * Gets the value of the paymentMethods property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the paymentMethods property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPaymentMethods().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PaymentMethodEnumeration }
     * 
     * 
     */
    public List<PaymentMethodEnumeration> getPaymentMethods() {
        if (paymentMethods == null) {
            paymentMethods = new ArrayList<PaymentMethodEnumeration>();
        }
        return this.paymentMethods;
    }

    /**
     * Gets the value of the typesOfPaymentMethod property.
     * 
     * @return
     *     possible object is
     *     {@link TypeOfPaymentMethodRefs_RelStructure }
     *     
     */
    public TypeOfPaymentMethodRefs_RelStructure getTypesOfPaymentMethod() {
        return typesOfPaymentMethod;
    }

    /**
     * Sets the value of the typesOfPaymentMethod property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypeOfPaymentMethodRefs_RelStructure }
     *     
     */
    public void setTypesOfPaymentMethod(TypeOfPaymentMethodRefs_RelStructure value) {
        this.typesOfPaymentMethod = value;
    }

    /**
     * Gets the value of the defaultCurrency property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDefaultCurrency() {
        return defaultCurrency;
    }

    /**
     * Sets the value of the defaultCurrency property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDefaultCurrency(String value) {
        this.defaultCurrency = value;
    }

    /**
     * Gets the value of the currenciesAccepted property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the currenciesAccepted property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCurrenciesAccepted().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getCurrenciesAccepted() {
        if (currenciesAccepted == null) {
            currenciesAccepted = new ArrayList<String>();
        }
        return this.currenciesAccepted;
    }

    /**
     * Gets the value of the cardsAccepted property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the cardsAccepted property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCardsAccepted().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getCardsAccepted() {
        if (cardsAccepted == null) {
            cardsAccepted = new ArrayList<String>();
        }
        return this.cardsAccepted;
    }

    /**
     * Gets the value of the parkingReservation property.
     * 
     * @return
     *     possible object is
     *     {@link ParkingReservationEnumeration }
     *     
     */
    public ParkingReservationEnumeration getParkingReservation() {
        return parkingReservation;
    }

    /**
     * Sets the value of the parkingReservation property.
     * 
     * @param value
     *     allowed object is
     *     {@link ParkingReservationEnumeration }
     *     
     */
    public void setParkingReservation(ParkingReservationEnumeration value) {
        this.parkingReservation = value;
    }

    /**
     * Gets the value of the bookingUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBookingUrl() {
        return bookingUrl;
    }

    /**
     * Sets the value of the bookingUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBookingUrl(String value) {
        this.bookingUrl = value;
    }

    /**
     * Gets the value of the paymentByMobile property.
     * 
     * @return
     *     possible object is
     *     {@link PaymentByMobileStructure }
     *     
     */
    public PaymentByMobileStructure getPaymentByMobile() {
        return paymentByMobile;
    }

    /**
     * Sets the value of the paymentByMobile property.
     * 
     * @param value
     *     allowed object is
     *     {@link PaymentByMobileStructure }
     *     
     */
    public void setPaymentByMobile(PaymentByMobileStructure value) {
        this.paymentByMobile = value;
    }

    /**
     * Gets the value of the freeParkingOutOfHours property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isFreeParkingOutOfHours() {
        return freeParkingOutOfHours;
    }

    /**
     * Sets the value of the freeParkingOutOfHours property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setFreeParkingOutOfHours(Boolean value) {
        this.freeParkingOutOfHours = value;
    }

    /**
     * Gets the value of the parkingProperties property.
     * 
     * @return
     *     possible object is
     *     {@link ParkingProperties_RelStructure }
     *     
     */
    public ParkingProperties_RelStructure getParkingProperties() {
        return parkingProperties;
    }

    /**
     * Sets the value of the parkingProperties property.
     * 
     * @param value
     *     allowed object is
     *     {@link ParkingProperties_RelStructure }
     *     
     */
    public void setParkingProperties(ParkingProperties_RelStructure value) {
        this.parkingProperties = value;
    }

    /**
     * Gets the value of the parkingAreas property.
     * 
     * @return
     *     possible object is
     *     {@link ParkingAreas_RelStructure }
     *     
     */
    public ParkingAreas_RelStructure getParkingAreas() {
        return parkingAreas;
    }

    /**
     * Sets the value of the parkingAreas property.
     * 
     * @param value
     *     allowed object is
     *     {@link ParkingAreas_RelStructure }
     *     
     */
    public void setParkingAreas(ParkingAreas_RelStructure value) {
        this.parkingAreas = value;
    }

    /**
     * Gets the value of the vehicleEntrances property.
     * 
     * @return
     *     possible object is
     *     {@link ParkingEntrancesForVehicles_RelStructure }
     *     
     */
    public ParkingEntrancesForVehicles_RelStructure getVehicleEntrances() {
        return vehicleEntrances;
    }

    /**
     * Sets the value of the vehicleEntrances property.
     * 
     * @param value
     *     allowed object is
     *     {@link ParkingEntrancesForVehicles_RelStructure }
     *     
     */
    public void setVehicleEntrances(ParkingEntrancesForVehicles_RelStructure value) {
        this.vehicleEntrances = value;
    }

    public Parking_VersionStructure withPathLinks(SitePathLinks_RelStructure value) {
        setPathLinks(value);
        return this;
    }

    public Parking_VersionStructure withPathJunctions(PathJunctions_RelStructure value) {
        setPathJunctions(value);
        return this;
    }

    public Parking_VersionStructure withAccesses(Accesses_RelStructure value) {
        setAccesses(value);
        return this;
    }

    public Parking_VersionStructure withNavigationPaths(NavigationPaths_RelStructure value) {
        setNavigationPaths(value);
        return this;
    }

    public Parking_VersionStructure withPublicCode(String value) {
        setPublicCode(value);
        return this;
    }

    public Parking_VersionStructure withLabel(MultilingualString value) {
        setLabel(value);
        return this;
    }

    public Parking_VersionStructure withParkingType(ParkingTypeEnumeration value) {
        setParkingType(value);
        return this;
    }

    public Parking_VersionStructure withParkingVehicleTypes(ParkingVehicleEnumeration... values) {
        if (values!= null) {
            for (ParkingVehicleEnumeration value: values) {
                getParkingVehicleTypes().add(value);
            }
        }
        return this;
    }

    public Parking_VersionStructure withParkingVehicleTypes(Collection<ParkingVehicleEnumeration> values) {
        if (values!= null) {
            getParkingVehicleTypes().addAll(values);
        }
        return this;
    }

    public Parking_VersionStructure withParkingLayout(ParkingLayoutEnumeration value) {
        setParkingLayout(value);
        return this;
    }

    public Parking_VersionStructure withNumberOfParkingLevels(BigInteger value) {
        setNumberOfParkingLevels(value);
        return this;
    }

    public Parking_VersionStructure withPrincipalCapacity(BigInteger value) {
        setPrincipalCapacity(value);
        return this;
    }

    public Parking_VersionStructure withTotalCapacity(BigInteger value) {
        setTotalCapacity(value);
        return this;
    }

    public Parking_VersionStructure withOvernightParkingPermitted(Boolean value) {
        setOvernightParkingPermitted(value);
        return this;
    }

    public Parking_VersionStructure withProhibitedForHazardousMaterials(Boolean value) {
        setProhibitedForHazardousMaterials(value);
        return this;
    }

    public Parking_VersionStructure withRechargingAvailable(Boolean value) {
        setRechargingAvailable(value);
        return this;
    }

    public Parking_VersionStructure withSecure(Boolean value) {
        setSecure(value);
        return this;
    }

    public Parking_VersionStructure withRealTimeOccupancyAvailable(Boolean value) {
        setRealTimeOccupancyAvailable(value);
        return this;
    }

    public Parking_VersionStructure withParkingPaymentProcess(ParkingPaymentProcessEnumeration... values) {
        if (values!= null) {
            for (ParkingPaymentProcessEnumeration value: values) {
                getParkingPaymentProcess().add(value);
            }
        }
        return this;
    }

    public Parking_VersionStructure withParkingPaymentProcess(Collection<ParkingPaymentProcessEnumeration> values) {
        if (values!= null) {
            getParkingPaymentProcess().addAll(values);
        }
        return this;
    }

    public Parking_VersionStructure withPaymentMethods(PaymentMethodEnumeration... values) {
        if (values!= null) {
            for (PaymentMethodEnumeration value: values) {
                getPaymentMethods().add(value);
            }
        }
        return this;
    }

    public Parking_VersionStructure withPaymentMethods(Collection<PaymentMethodEnumeration> values) {
        if (values!= null) {
            getPaymentMethods().addAll(values);
        }
        return this;
    }

    public Parking_VersionStructure withTypesOfPaymentMethod(TypeOfPaymentMethodRefs_RelStructure value) {
        setTypesOfPaymentMethod(value);
        return this;
    }

    public Parking_VersionStructure withDefaultCurrency(String value) {
        setDefaultCurrency(value);
        return this;
    }

    public Parking_VersionStructure withCurrenciesAccepted(String... values) {
        if (values!= null) {
            for (String value: values) {
                getCurrenciesAccepted().add(value);
            }
        }
        return this;
    }

    public Parking_VersionStructure withCurrenciesAccepted(Collection<String> values) {
        if (values!= null) {
            getCurrenciesAccepted().addAll(values);
        }
        return this;
    }

    public Parking_VersionStructure withCardsAccepted(String... values) {
        if (values!= null) {
            for (String value: values) {
                getCardsAccepted().add(value);
            }
        }
        return this;
    }

    public Parking_VersionStructure withCardsAccepted(Collection<String> values) {
        if (values!= null) {
            getCardsAccepted().addAll(values);
        }
        return this;
    }

    public Parking_VersionStructure withParkingReservation(ParkingReservationEnumeration value) {
        setParkingReservation(value);
        return this;
    }

    public Parking_VersionStructure withBookingUrl(String value) {
        setBookingUrl(value);
        return this;
    }

    public Parking_VersionStructure withPaymentByMobile(PaymentByMobileStructure value) {
        setPaymentByMobile(value);
        return this;
    }

    public Parking_VersionStructure withFreeParkingOutOfHours(Boolean value) {
        setFreeParkingOutOfHours(value);
        return this;
    }

    public Parking_VersionStructure withParkingProperties(ParkingProperties_RelStructure value) {
        setParkingProperties(value);
        return this;
    }

    public Parking_VersionStructure withParkingAreas(ParkingAreas_RelStructure value) {
        setParkingAreas(value);
        return this;
    }

    public Parking_VersionStructure withVehicleEntrances(ParkingEntrancesForVehicles_RelStructure value) {
        setVehicleEntrances(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withTopographicPlaceRef(TopographicPlaceRefStructure value) {
        setTopographicPlaceRef(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withTopographicPlaceView(TopographicPlaceView value) {
        setTopographicPlaceView(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withAdditionalTopographicPlaces(TopographicPlaceRefs_RelStructure value) {
        setAdditionalTopographicPlaces(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withSiteType(SiteTypeEnumeration value) {
        setSiteType(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withAtCentre(Boolean value) {
        setAtCentre(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withLocale(LocaleStructure value) {
        setLocale(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withOrganisationRef(JAXBElement<? extends OrganisationRefStructure> value) {
        setOrganisationRef(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withOperatingOrganisationView(Organisation_DerivedViewStructure value) {
        setOperatingOrganisationView(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withParentSiteRef(SiteRefStructure value) {
        setParentSiteRef(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withAdjacentSites(SiteRefs_RelStructure value) {
        setAdjacentSites(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withContainedInPlaceRef(TopographicPlaceRefStructure value) {
        setContainedInPlaceRef(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withLevels(Levels_RelStructure value) {
        setLevels(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withEntrances(SiteEntrances_RelStructure value) {
        setEntrances(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withEquipmentPlaces(EquipmentPlaces_RelStructure value) {
        setEquipmentPlaces(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withPlaceEquipments(PlaceEquipments_RelStructure value) {
        setPlaceEquipments(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withLocalServices(LocalServices_RelStructure value) {
        setLocalServices(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withAccessibilityAssessment(AccessibilityAssessment value) {
        setAccessibilityAssessment(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withAccessModes(AccessModeEnumeration... values) {
        if (values!= null) {
            for (AccessModeEnumeration value: values) {
                getAccessModes().add(value);
            }
        }
        return this;
    }

    @Override
    public Parking_VersionStructure withAccessModes(Collection<AccessModeEnumeration> values) {
        if (values!= null) {
            getAccessModes().addAll(values);
        }
        return this;
    }

    @Override
    public Parking_VersionStructure withNameSuffix(MultilingualString value) {
        setNameSuffix(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withAlternativeNames(AlternativeNames_RelStructure value) {
        setAlternativeNames(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withCrossRoad(MultilingualString value) {
        setCrossRoad(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withLandmark(MultilingualString value) {
        setLandmark(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withPublicUse(PublicUseEnumeration value) {
        setPublicUse(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withCovered(CoveredEnumeration value) {
        setCovered(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withGated(GatedEnumeration value) {
        setGated(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withLighting(LightingEnumeration value) {
        setLighting(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withAllAreasWheelchairAccessible(Boolean value) {
        setAllAreasWheelchairAccessible(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withPersonCapacity(BigInteger value) {
        setPersonCapacity(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withFacilities(SiteFacilitySets_RelStructure value) {
        setFacilities(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withUrl(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withImage(String value) {
        setImage(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withPostalAddress(PostalAddress value) {
        setPostalAddress(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withRoadAddress(RoadAddress value) {
        setRoadAddress(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withPlaceTypes(TypeOfPlaceRefs_RelStructure value) {
        setPlaceTypes(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withTypes(TypeOfZoneRefs_RelStructure value) {
        setTypes(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withCentroid(SimplePoint_VersionStructure value) {
        setCentroid(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withPolygon(PolygonType value) {
        setPolygon(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withProjections(Projections_RelStructure value) {
        setProjections(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withParentZoneRef(ZoneRefStructure value) {
        setParentZoneRef(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withMembers(PointRefs_RelStructure value) {
        setMembers(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withName(MultilingualString value) {
        setName(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withShortName(MultilingualString value) {
        setShortName(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withDescription(MultilingualString value) {
        setDescription(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withPurposeOfGroupingRef(PurposeOfGroupingRefStructure value) {
        setPurposeOfGroupingRef(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withPrivateCode(PrivateCodeStructure value) {
        setPrivateCode(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withInfoLinks(org.rutebanken.netex.model.GroupOfEntities_VersionStructure.InfoLinks value) {
        setInfoLinks(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withKeyList(KeyListStructure value) {
        setKeyList(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withBrandingRef(BrandingRefStructure value) {
        setBrandingRef(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withResponsibilitySetRef(String value) {
        setResponsibilitySetRef(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public Parking_VersionStructure withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public Parking_VersionStructure withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public Parking_VersionStructure withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
