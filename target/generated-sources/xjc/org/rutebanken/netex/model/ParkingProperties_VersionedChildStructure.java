//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.time.Duration;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.migesok.jaxb.adapter.javatime.DurationXmlAdapter;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for ParkingProperties_VersionedChildStructure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ParkingProperties_VersionedChildStructure"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.netex.org.uk/netex}VersionedChildStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.netex.org.uk/netex}ParkingPropertiesGroup"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ParkingProperties_VersionedChildStructure", propOrder = {
    "parkingRef",
    "parkingUserTypes",
    "parkingVehicleTypes",
    "parkingStayList",
    "maximumStay",
    "areas",
    "spaces"
})
@XmlSeeAlso({
    ParkingProperties.class
})
public class ParkingProperties_VersionedChildStructure
    extends VersionedChildStructure
{

    @XmlElement(name = "ParkingRef")
    protected ParkingRefStructure parkingRef;
    @XmlList
    @XmlElement(name = "ParkingUserTypes")
    protected List<ParkingUserEnumeration> parkingUserTypes;
    @XmlList
    @XmlElement(name = "ParkingVehicleTypes")
    protected List<ParkingVehicleEnumeration> parkingVehicleTypes;
    @XmlList
    @XmlElement(name = "ParkingStayList")
    protected List<ParkingStayEnumeration> parkingStayList;
    @XmlElement(name = "MaximumStay", type = String.class)
    @XmlJavaTypeAdapter(DurationXmlAdapter.class)
    @XmlSchemaType(name = "duration")
    protected Duration maximumStay;
    protected ParkingAreaRefs_RelStructure areas;
    protected ParkingCapacities_RelStructure spaces;

    /**
     * Gets the value of the parkingRef property.
     * 
     * @return
     *     possible object is
     *     {@link ParkingRefStructure }
     *     
     */
    public ParkingRefStructure getParkingRef() {
        return parkingRef;
    }

    /**
     * Sets the value of the parkingRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ParkingRefStructure }
     *     
     */
    public void setParkingRef(ParkingRefStructure value) {
        this.parkingRef = value;
    }

    /**
     * Gets the value of the parkingUserTypes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the parkingUserTypes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getParkingUserTypes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ParkingUserEnumeration }
     * 
     * 
     */
    public List<ParkingUserEnumeration> getParkingUserTypes() {
        if (parkingUserTypes == null) {
            parkingUserTypes = new ArrayList<ParkingUserEnumeration>();
        }
        return this.parkingUserTypes;
    }

    /**
     * Gets the value of the parkingVehicleTypes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the parkingVehicleTypes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getParkingVehicleTypes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ParkingVehicleEnumeration }
     * 
     * 
     */
    public List<ParkingVehicleEnumeration> getParkingVehicleTypes() {
        if (parkingVehicleTypes == null) {
            parkingVehicleTypes = new ArrayList<ParkingVehicleEnumeration>();
        }
        return this.parkingVehicleTypes;
    }

    /**
     * Gets the value of the parkingStayList property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the parkingStayList property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getParkingStayList().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ParkingStayEnumeration }
     * 
     * 
     */
    public List<ParkingStayEnumeration> getParkingStayList() {
        if (parkingStayList == null) {
            parkingStayList = new ArrayList<ParkingStayEnumeration>();
        }
        return this.parkingStayList;
    }

    /**
     * Gets the value of the maximumStay property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Duration getMaximumStay() {
        return maximumStay;
    }

    /**
     * Sets the value of the maximumStay property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMaximumStay(Duration value) {
        this.maximumStay = value;
    }

    /**
     * Gets the value of the areas property.
     * 
     * @return
     *     possible object is
     *     {@link ParkingAreaRefs_RelStructure }
     *     
     */
    public ParkingAreaRefs_RelStructure getAreas() {
        return areas;
    }

    /**
     * Sets the value of the areas property.
     * 
     * @param value
     *     allowed object is
     *     {@link ParkingAreaRefs_RelStructure }
     *     
     */
    public void setAreas(ParkingAreaRefs_RelStructure value) {
        this.areas = value;
    }

    /**
     * Gets the value of the spaces property.
     * 
     * @return
     *     possible object is
     *     {@link ParkingCapacities_RelStructure }
     *     
     */
    public ParkingCapacities_RelStructure getSpaces() {
        return spaces;
    }

    /**
     * Sets the value of the spaces property.
     * 
     * @param value
     *     allowed object is
     *     {@link ParkingCapacities_RelStructure }
     *     
     */
    public void setSpaces(ParkingCapacities_RelStructure value) {
        this.spaces = value;
    }

    public ParkingProperties_VersionedChildStructure withParkingRef(ParkingRefStructure value) {
        setParkingRef(value);
        return this;
    }

    public ParkingProperties_VersionedChildStructure withParkingUserTypes(ParkingUserEnumeration... values) {
        if (values!= null) {
            for (ParkingUserEnumeration value: values) {
                getParkingUserTypes().add(value);
            }
        }
        return this;
    }

    public ParkingProperties_VersionedChildStructure withParkingUserTypes(Collection<ParkingUserEnumeration> values) {
        if (values!= null) {
            getParkingUserTypes().addAll(values);
        }
        return this;
    }

    public ParkingProperties_VersionedChildStructure withParkingVehicleTypes(ParkingVehicleEnumeration... values) {
        if (values!= null) {
            for (ParkingVehicleEnumeration value: values) {
                getParkingVehicleTypes().add(value);
            }
        }
        return this;
    }

    public ParkingProperties_VersionedChildStructure withParkingVehicleTypes(Collection<ParkingVehicleEnumeration> values) {
        if (values!= null) {
            getParkingVehicleTypes().addAll(values);
        }
        return this;
    }

    public ParkingProperties_VersionedChildStructure withParkingStayList(ParkingStayEnumeration... values) {
        if (values!= null) {
            for (ParkingStayEnumeration value: values) {
                getParkingStayList().add(value);
            }
        }
        return this;
    }

    public ParkingProperties_VersionedChildStructure withParkingStayList(Collection<ParkingStayEnumeration> values) {
        if (values!= null) {
            getParkingStayList().addAll(values);
        }
        return this;
    }

    public ParkingProperties_VersionedChildStructure withMaximumStay(Duration value) {
        setMaximumStay(value);
        return this;
    }

    public ParkingProperties_VersionedChildStructure withAreas(ParkingAreaRefs_RelStructure value) {
        setAreas(value);
        return this;
    }

    public ParkingProperties_VersionedChildStructure withSpaces(ParkingCapacities_RelStructure value) {
        setSpaces(value);
        return this;
    }

    @Override
    public ParkingProperties_VersionedChildStructure withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public ParkingProperties_VersionedChildStructure withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public ParkingProperties_VersionedChildStructure withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public ParkingProperties_VersionedChildStructure withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public ParkingProperties_VersionedChildStructure withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public ParkingProperties_VersionedChildStructure withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public ParkingProperties_VersionedChildStructure withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public ParkingProperties_VersionedChildStructure withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public ParkingProperties_VersionedChildStructure withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public ParkingProperties_VersionedChildStructure withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public ParkingProperties_VersionedChildStructure withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public ParkingProperties_VersionedChildStructure withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public ParkingProperties_VersionedChildStructure withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public ParkingProperties_VersionedChildStructure withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public ParkingProperties_VersionedChildStructure withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public ParkingProperties_VersionedChildStructure withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
