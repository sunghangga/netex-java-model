//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDateTime;
import java.util.Collection;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for CrossingEquipment_VersionStructure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CrossingEquipment_VersionStructure"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.netex.org.uk/netex}AccessEquipment_VersionStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.netex.org.uk/netex}CrossingEquipmentGroup"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CrossingEquipment_VersionStructure", propOrder = {
    "crossingType",
    "zebraCrossing",
    "pedestrianLights",
    "acousticDeviceSensors",
    "acousticCrossingAids",
    "tactileGuidanceStrips",
    "tactileWarningStrip",
    "visualGuidanceBands",
    "droppedKerb",
    "suitableForCycles"
})
@XmlSeeAlso({
    CrossingEquipment.class
})
public class CrossingEquipment_VersionStructure
    extends AccessEquipment_VersionStructure
{

    @XmlElement(name = "CrossingType")
    protected CrossingTypeEnumeration crossingType;
    @XmlElement(name = "ZebraCrossing")
    protected Boolean zebraCrossing;
    @XmlElement(name = "PedestrianLights", defaultValue = "false")
    protected Boolean pedestrianLights;
    @XmlElement(name = "AcousticDeviceSensors", defaultValue = "false")
    protected Boolean acousticDeviceSensors;
    @XmlElement(name = "AcousticCrossingAids", defaultValue = "false")
    protected Boolean acousticCrossingAids;
    @XmlElement(name = "TactileGuidanceStrips", defaultValue = "false")
    protected Boolean tactileGuidanceStrips;
    @XmlElement(name = "TactileWarningStrip")
    @XmlSchemaType(name = "NMTOKEN")
    protected TactileWarningStripEnumeration tactileWarningStrip;
    @XmlElement(name = "VisualGuidanceBands", defaultValue = "false")
    protected Boolean visualGuidanceBands;
    @XmlElement(name = "DroppedKerb")
    protected Boolean droppedKerb;
    @XmlElement(name = "SuitableForCycles")
    protected Boolean suitableForCycles;

    /**
     * Gets the value of the crossingType property.
     * 
     * @return
     *     possible object is
     *     {@link CrossingTypeEnumeration }
     *     
     */
    public CrossingTypeEnumeration getCrossingType() {
        return crossingType;
    }

    /**
     * Sets the value of the crossingType property.
     * 
     * @param value
     *     allowed object is
     *     {@link CrossingTypeEnumeration }
     *     
     */
    public void setCrossingType(CrossingTypeEnumeration value) {
        this.crossingType = value;
    }

    /**
     * Gets the value of the zebraCrossing property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isZebraCrossing() {
        return zebraCrossing;
    }

    /**
     * Sets the value of the zebraCrossing property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setZebraCrossing(Boolean value) {
        this.zebraCrossing = value;
    }

    /**
     * Gets the value of the pedestrianLights property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isPedestrianLights() {
        return pedestrianLights;
    }

    /**
     * Sets the value of the pedestrianLights property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setPedestrianLights(Boolean value) {
        this.pedestrianLights = value;
    }

    /**
     * Gets the value of the acousticDeviceSensors property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAcousticDeviceSensors() {
        return acousticDeviceSensors;
    }

    /**
     * Sets the value of the acousticDeviceSensors property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAcousticDeviceSensors(Boolean value) {
        this.acousticDeviceSensors = value;
    }

    /**
     * Gets the value of the acousticCrossingAids property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAcousticCrossingAids() {
        return acousticCrossingAids;
    }

    /**
     * Sets the value of the acousticCrossingAids property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAcousticCrossingAids(Boolean value) {
        this.acousticCrossingAids = value;
    }

    /**
     * Gets the value of the tactileGuidanceStrips property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTactileGuidanceStrips() {
        return tactileGuidanceStrips;
    }

    /**
     * Sets the value of the tactileGuidanceStrips property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setTactileGuidanceStrips(Boolean value) {
        this.tactileGuidanceStrips = value;
    }

    /**
     * Gets the value of the tactileWarningStrip property.
     * 
     * @return
     *     possible object is
     *     {@link TactileWarningStripEnumeration }
     *     
     */
    public TactileWarningStripEnumeration getTactileWarningStrip() {
        return tactileWarningStrip;
    }

    /**
     * Sets the value of the tactileWarningStrip property.
     * 
     * @param value
     *     allowed object is
     *     {@link TactileWarningStripEnumeration }
     *     
     */
    public void setTactileWarningStrip(TactileWarningStripEnumeration value) {
        this.tactileWarningStrip = value;
    }

    /**
     * Gets the value of the visualGuidanceBands property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isVisualGuidanceBands() {
        return visualGuidanceBands;
    }

    /**
     * Sets the value of the visualGuidanceBands property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setVisualGuidanceBands(Boolean value) {
        this.visualGuidanceBands = value;
    }

    /**
     * Gets the value of the droppedKerb property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isDroppedKerb() {
        return droppedKerb;
    }

    /**
     * Sets the value of the droppedKerb property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDroppedKerb(Boolean value) {
        this.droppedKerb = value;
    }

    /**
     * Gets the value of the suitableForCycles property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isSuitableForCycles() {
        return suitableForCycles;
    }

    /**
     * Sets the value of the suitableForCycles property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSuitableForCycles(Boolean value) {
        this.suitableForCycles = value;
    }

    public CrossingEquipment_VersionStructure withCrossingType(CrossingTypeEnumeration value) {
        setCrossingType(value);
        return this;
    }

    public CrossingEquipment_VersionStructure withZebraCrossing(Boolean value) {
        setZebraCrossing(value);
        return this;
    }

    public CrossingEquipment_VersionStructure withPedestrianLights(Boolean value) {
        setPedestrianLights(value);
        return this;
    }

    public CrossingEquipment_VersionStructure withAcousticDeviceSensors(Boolean value) {
        setAcousticDeviceSensors(value);
        return this;
    }

    public CrossingEquipment_VersionStructure withAcousticCrossingAids(Boolean value) {
        setAcousticCrossingAids(value);
        return this;
    }

    public CrossingEquipment_VersionStructure withTactileGuidanceStrips(Boolean value) {
        setTactileGuidanceStrips(value);
        return this;
    }

    public CrossingEquipment_VersionStructure withTactileWarningStrip(TactileWarningStripEnumeration value) {
        setTactileWarningStrip(value);
        return this;
    }

    public CrossingEquipment_VersionStructure withVisualGuidanceBands(Boolean value) {
        setVisualGuidanceBands(value);
        return this;
    }

    public CrossingEquipment_VersionStructure withDroppedKerb(Boolean value) {
        setDroppedKerb(value);
        return this;
    }

    public CrossingEquipment_VersionStructure withSuitableForCycles(Boolean value) {
        setSuitableForCycles(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withWidth(BigDecimal value) {
        setWidth(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withDirectionOfUse(DirectionOfUseEnumeration value) {
        setDirectionOfUse(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withPassengersPerMinute(BigInteger value) {
        setPassengersPerMinute(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withRelativeWeighting(BigInteger value) {
        setRelativeWeighting(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withSafeForGuideDog(Boolean value) {
        setSafeForGuideDog(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withName(MultilingualString value) {
        setName(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withPrivateCode(PrivateCodeStructure value) {
        setPrivateCode(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withPublicCode(PrivateCodeStructure value) {
        setPublicCode(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withImage(String value) {
        setImage(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withTypeOfEquipmentRef(TypeOfEquipmentRefStructure value) {
        setTypeOfEquipmentRef(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withDescription(MultilingualString value) {
        setDescription(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withNote(MultilingualString value) {
        setNote(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withInfoLinks(InfoLinks_RelStructure value) {
        setInfoLinks(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withOutOfService(Boolean value) {
        setOutOfService(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withKeyList(KeyListStructure value) {
        setKeyList(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withBrandingRef(BrandingRefStructure value) {
        setBrandingRef(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withResponsibilitySetRef(String value) {
        setResponsibilitySetRef(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public CrossingEquipment_VersionStructure withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
