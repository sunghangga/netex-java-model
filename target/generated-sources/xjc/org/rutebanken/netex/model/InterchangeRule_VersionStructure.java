//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.math.BigInteger;
import java.time.Duration;
import java.time.LocalDateTime;
import java.util.Collection;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for InterchangeRule_VersionStructure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="InterchangeRule_VersionStructure"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.netex.org.uk/netex}Interchange_VersionStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.netex.org.uk/netex}InterchangeRuleGroup"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "InterchangeRule_VersionStructure", propOrder = {
    "connectionZoneRef",
    "controlCentreRef",
    "exclude",
    "timings",
    "feederFilter",
    "distributorFilter"
})
@XmlSeeAlso({
    InterchangeRule.class
})
public class InterchangeRule_VersionStructure
    extends Interchange_VersionStructure
{

    @XmlElement(name = "ConnectionZoneRef")
    protected ZoneRefStructure connectionZoneRef;
    @XmlElement(name = "ControlCentreRef")
    protected ControlCentreRefStructure controlCentreRef;
    @XmlElement(name = "Exclude", defaultValue = "false")
    protected Boolean exclude;
    protected InterchangeRuleTimings_RelStructure timings;
    @XmlElement(name = "FeederFilter")
    protected InterchangeRuleParameterStructure feederFilter;
    @XmlElement(name = "DistributorFilter")
    protected InterchangeRuleParameterStructure distributorFilter;

    /**
     * Gets the value of the connectionZoneRef property.
     * 
     * @return
     *     possible object is
     *     {@link ZoneRefStructure }
     *     
     */
    public ZoneRefStructure getConnectionZoneRef() {
        return connectionZoneRef;
    }

    /**
     * Sets the value of the connectionZoneRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ZoneRefStructure }
     *     
     */
    public void setConnectionZoneRef(ZoneRefStructure value) {
        this.connectionZoneRef = value;
    }

    /**
     * Gets the value of the controlCentreRef property.
     * 
     * @return
     *     possible object is
     *     {@link ControlCentreRefStructure }
     *     
     */
    public ControlCentreRefStructure getControlCentreRef() {
        return controlCentreRef;
    }

    /**
     * Sets the value of the controlCentreRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ControlCentreRefStructure }
     *     
     */
    public void setControlCentreRef(ControlCentreRefStructure value) {
        this.controlCentreRef = value;
    }

    /**
     * Gets the value of the exclude property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isExclude() {
        return exclude;
    }

    /**
     * Sets the value of the exclude property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setExclude(Boolean value) {
        this.exclude = value;
    }

    /**
     * Gets the value of the timings property.
     * 
     * @return
     *     possible object is
     *     {@link InterchangeRuleTimings_RelStructure }
     *     
     */
    public InterchangeRuleTimings_RelStructure getTimings() {
        return timings;
    }

    /**
     * Sets the value of the timings property.
     * 
     * @param value
     *     allowed object is
     *     {@link InterchangeRuleTimings_RelStructure }
     *     
     */
    public void setTimings(InterchangeRuleTimings_RelStructure value) {
        this.timings = value;
    }

    /**
     * Gets the value of the feederFilter property.
     * 
     * @return
     *     possible object is
     *     {@link InterchangeRuleParameterStructure }
     *     
     */
    public InterchangeRuleParameterStructure getFeederFilter() {
        return feederFilter;
    }

    /**
     * Sets the value of the feederFilter property.
     * 
     * @param value
     *     allowed object is
     *     {@link InterchangeRuleParameterStructure }
     *     
     */
    public void setFeederFilter(InterchangeRuleParameterStructure value) {
        this.feederFilter = value;
    }

    /**
     * Gets the value of the distributorFilter property.
     * 
     * @return
     *     possible object is
     *     {@link InterchangeRuleParameterStructure }
     *     
     */
    public InterchangeRuleParameterStructure getDistributorFilter() {
        return distributorFilter;
    }

    /**
     * Sets the value of the distributorFilter property.
     * 
     * @param value
     *     allowed object is
     *     {@link InterchangeRuleParameterStructure }
     *     
     */
    public void setDistributorFilter(InterchangeRuleParameterStructure value) {
        this.distributorFilter = value;
    }

    public InterchangeRule_VersionStructure withConnectionZoneRef(ZoneRefStructure value) {
        setConnectionZoneRef(value);
        return this;
    }

    public InterchangeRule_VersionStructure withControlCentreRef(ControlCentreRefStructure value) {
        setControlCentreRef(value);
        return this;
    }

    public InterchangeRule_VersionStructure withExclude(Boolean value) {
        setExclude(value);
        return this;
    }

    public InterchangeRule_VersionStructure withTimings(InterchangeRuleTimings_RelStructure value) {
        setTimings(value);
        return this;
    }

    public InterchangeRule_VersionStructure withFeederFilter(InterchangeRuleParameterStructure value) {
        setFeederFilter(value);
        return this;
    }

    public InterchangeRule_VersionStructure withDistributorFilter(InterchangeRuleParameterStructure value) {
        setDistributorFilter(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withName(MultilingualString value) {
        setName(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withDescription(MultilingualString value) {
        setDescription(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withPrivateCode(PrivateCodeStructure value) {
        setPrivateCode(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withExternalInterchangeRef(ExternalObjectRefStructure value) {
        setExternalInterchangeRef(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withConnectionRef(ConnectionRefStructure value) {
        setConnectionRef(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withPriority(BigInteger value) {
        setPriority(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withStaySeated(Boolean value) {
        setStaySeated(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withCrossBorder(Boolean value) {
        setCrossBorder(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withPlanned(Boolean value) {
        setPlanned(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withGuaranteed(Boolean value) {
        setGuaranteed(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withAdvertised(Boolean value) {
        setAdvertised(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withControlled(Boolean value) {
        setControlled(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withConnectionCertainty(ConnectionCertaintyEnumeration value) {
        setConnectionCertainty(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withStandardWaitTime(Duration value) {
        setStandardWaitTime(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withMaximumWaitTime(Duration value) {
        setMaximumWaitTime(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withMaximumAutomaticWaitTime(Duration value) {
        setMaximumAutomaticWaitTime(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withStandardTransferTime(Duration value) {
        setStandardTransferTime(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withMinimumTransferTime(Duration value) {
        setMinimumTransferTime(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withMaximumTransferTime(Duration value) {
        setMaximumTransferTime(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withControlCentreNotifyThreshold(Duration value) {
        setControlCentreNotifyThreshold(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withTransferModes(AccessModeEnumeration... values) {
        if (values!= null) {
            for (AccessModeEnumeration value: values) {
                getTransferModes().add(value);
            }
        }
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withTransferModes(Collection<AccessModeEnumeration> values) {
        if (values!= null) {
            getTransferModes().addAll(values);
        }
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withNoticeAssignments(Interchange_VersionStructure.NoticeAssignments value) {
        setNoticeAssignments(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withKeyList(KeyListStructure value) {
        setKeyList(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withBrandingRef(BrandingRefStructure value) {
        setBrandingRef(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withResponsibilitySetRef(String value) {
        setResponsibilitySetRef(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public InterchangeRule_VersionStructure withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
