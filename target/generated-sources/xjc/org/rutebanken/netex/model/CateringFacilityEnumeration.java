//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CateringFacilityEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CateringFacilityEnumeration"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN"&gt;
 *     &lt;enumeration value="bar"/&gt;
 *     &lt;enumeration value="bistro"/&gt;
 *     &lt;enumeration value="buffet"/&gt;
 *     &lt;enumeration value="noFoodAvailable"/&gt;
 *     &lt;enumeration value="noBeveragesAvailable"/&gt;
 *     &lt;enumeration value="restaurant"/&gt;
 *     &lt;enumeration value="firstClassRestaurant"/&gt;
 *     &lt;enumeration value="trolley"/&gt;
 *     &lt;enumeration value="coffeeShop"/&gt;
 *     &lt;enumeration value="hotFoodService"/&gt;
 *     &lt;enumeration value="selfService"/&gt;
 *     &lt;enumeration value="snacks"/&gt;
 *     &lt;enumeration value="foodVendingMachine"/&gt;
 *     &lt;enumeration value="beverageVendingMachine"/&gt;
 *     &lt;enumeration value="miniBar"/&gt;
 *     &lt;enumeration value="breakfastInCar"/&gt;
 *     &lt;enumeration value="mealAtSeat"/&gt;
 *     &lt;enumeration value="other"/&gt;
 *     &lt;enumeration value="unknown"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "CateringFacilityEnumeration")
@XmlEnum
public enum CateringFacilityEnumeration {

    @XmlEnumValue("bar")
    BAR("bar"),
    @XmlEnumValue("bistro")
    BISTRO("bistro"),
    @XmlEnumValue("buffet")
    BUFFET("buffet"),
    @XmlEnumValue("noFoodAvailable")
    NO_FOOD_AVAILABLE("noFoodAvailable"),
    @XmlEnumValue("noBeveragesAvailable")
    NO_BEVERAGES_AVAILABLE("noBeveragesAvailable"),
    @XmlEnumValue("restaurant")
    RESTAURANT("restaurant"),
    @XmlEnumValue("firstClassRestaurant")
    FIRST_CLASS_RESTAURANT("firstClassRestaurant"),
    @XmlEnumValue("trolley")
    TROLLEY("trolley"),
    @XmlEnumValue("coffeeShop")
    COFFEE_SHOP("coffeeShop"),
    @XmlEnumValue("hotFoodService")
    HOT_FOOD_SERVICE("hotFoodService"),
    @XmlEnumValue("selfService")
    SELF_SERVICE("selfService"),
    @XmlEnumValue("snacks")
    SNACKS("snacks"),
    @XmlEnumValue("foodVendingMachine")
    FOOD_VENDING_MACHINE("foodVendingMachine"),
    @XmlEnumValue("beverageVendingMachine")
    BEVERAGE_VENDING_MACHINE("beverageVendingMachine"),
    @XmlEnumValue("miniBar")
    MINI_BAR("miniBar"),
    @XmlEnumValue("breakfastInCar")
    BREAKFAST_IN_CAR("breakfastInCar"),
    @XmlEnumValue("mealAtSeat")
    MEAL_AT_SEAT("mealAtSeat"),
    @XmlEnumValue("other")
    OTHER("other"),
    @XmlEnumValue("unknown")
    UNKNOWN("unknown");
    private final String value;

    CateringFacilityEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CateringFacilityEnumeration fromValue(String v) {
        for (CateringFacilityEnumeration c: CateringFacilityEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
