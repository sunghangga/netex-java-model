//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDateTime;
import java.util.Collection;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import net.opengis.gml._3.LineStringType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.netex.org.uk/netex}PathLink_VersionStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;sequence&gt;
 *           &lt;group ref="{http://www.netex.org.uk/netex}EntityInVersionGroup" minOccurs="0"/&gt;
 *         &lt;/sequence&gt;
 *         &lt;sequence&gt;
 *           &lt;group ref="{http://www.netex.org.uk/netex}DataManagedObjectGroup"/&gt;
 *         &lt;/sequence&gt;
 *         &lt;sequence&gt;
 *           &lt;group ref="{http://www.netex.org.uk/netex}LinkGroup"/&gt;
 *         &lt;/sequence&gt;
 *         &lt;sequence&gt;
 *           &lt;group ref="{http://www.netex.org.uk/netex}PathLinkGroup"/&gt;
 *         &lt;/sequence&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="id" type="{http://www.netex.org.uk/netex}PathLinkIdType" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
public class PathLink
    extends PathLink_VersionStructure
{


    @Override
    public PathLink withFrom(PathLinkEndStructure value) {
        setFrom(value);
        return this;
    }

    @Override
    public PathLink withTo(PathLinkEndStructure value) {
        setTo(value);
        return this;
    }

    @Override
    public PathLink withDescription(MultilingualString value) {
        setDescription(value);
        return this;
    }

    @Override
    public PathLink withAccessibilityAssessmentRef(AccessibilityAssessmentRefStructure value) {
        setAccessibilityAssessmentRef(value);
        return this;
    }

    @Override
    public PathLink withAccessibilityAssessment(AccessibilityAssessment value) {
        setAccessibilityAssessment(value);
        return this;
    }

    @Override
    public PathLink withAccessModes(AccessModeEnumeration... values) {
        if (values!= null) {
            for (AccessModeEnumeration value: values) {
                getAccessModes().add(value);
            }
        }
        return this;
    }

    @Override
    public PathLink withAccessModes(Collection<AccessModeEnumeration> values) {
        if (values!= null) {
            getAccessModes().addAll(values);
        }
        return this;
    }

    @Override
    public PathLink withPublicUse(PublicUseEnumeration value) {
        setPublicUse(value);
        return this;
    }

    @Override
    public PathLink withCovered(CoveredEnumeration value) {
        setCovered(value);
        return this;
    }

    @Override
    public PathLink withGated(GatedEnumeration value) {
        setGated(value);
        return this;
    }

    @Override
    public PathLink withLighting(LightingEnumeration value) {
        setLighting(value);
        return this;
    }

    @Override
    public PathLink withAllAreasWheelchairAccessible(Boolean value) {
        setAllAreasWheelchairAccessible(value);
        return this;
    }

    @Override
    public PathLink withPersonCapacity(BigInteger value) {
        setPersonCapacity(value);
        return this;
    }

    @Override
    public PathLink withFacilities(SiteFacilitySets_RelStructure value) {
        setFacilities(value);
        return this;
    }

    @Override
    public PathLink withTowards(MultilingualString value) {
        setTowards(value);
        return this;
    }

    @Override
    public PathLink withBack(MultilingualString value) {
        setBack(value);
        return this;
    }

    @Override
    public PathLink withNumberOfSteps(BigInteger value) {
        setNumberOfSteps(value);
        return this;
    }

    @Override
    public PathLink withMinimumHeight(BigDecimal value) {
        setMinimumHeight(value);
        return this;
    }

    @Override
    public PathLink withMinimumWidth(BigDecimal value) {
        setMinimumWidth(value);
        return this;
    }

    @Override
    public PathLink withAllowedUse(PathDirectionEnumeration value) {
        setAllowedUse(value);
        return this;
    }

    @Override
    public PathLink withTransition(TransitionEnumeration value) {
        setTransition(value);
        return this;
    }

    @Override
    public PathLink withGradient(BigInteger value) {
        setGradient(value);
        return this;
    }

    @Override
    public PathLink withGradienType(GradientEnumeration value) {
        setGradienType(value);
        return this;
    }

    @Override
    public PathLink withTiltAngle(BigInteger value) {
        setTiltAngle(value);
        return this;
    }

    @Override
    public PathLink withTiltType(TiltTypeEnumeration value) {
        setTiltType(value);
        return this;
    }

    @Override
    public PathLink withAccessFeatureType(AccessFeatureEnumeration value) {
        setAccessFeatureType(value);
        return this;
    }

    @Override
    public PathLink withPassageType(PassageTypeEnumeration value) {
        setPassageType(value);
        return this;
    }

    @Override
    public PathLink withFlooringType(FlooringTypeEnumeration value) {
        setFlooringType(value);
        return this;
    }

    @Override
    public PathLink withRightSideBorder(BorderTypeEnumeration value) {
        setRightSideBorder(value);
        return this;
    }

    @Override
    public PathLink withLeftSideBorder(BorderTypeEnumeration value) {
        setLeftSideBorder(value);
        return this;
    }

    @Override
    public PathLink withTactileWarningStrip(TactileWarningStripEnumeration value) {
        setTactileWarningStrip(value);
        return this;
    }

    @Override
    public PathLink withTactileGuidingStrip(Boolean value) {
        setTactileGuidingStrip(value);
        return this;
    }

    @Override
    public PathLink withMaximumFlowPerMinute(BigInteger value) {
        setMaximumFlowPerMinute(value);
        return this;
    }

    @Override
    public PathLink withTransferDuration(TransferDurationStructure value) {
        setTransferDuration(value);
        return this;
    }

    @Override
    public PathLink withName(MultilingualString value) {
        setName(value);
        return this;
    }

    @Override
    public PathLink withDistance(BigDecimal value) {
        setDistance(value);
        return this;
    }

    @Override
    public PathLink withTypes(LinkTypeRefs_RelStructure value) {
        setTypes(value);
        return this;
    }

    @Override
    public PathLink withLineString(LineStringType value) {
        setLineString(value);
        return this;
    }

    @Override
    public PathLink withProjections(Projections_RelStructure value) {
        setProjections(value);
        return this;
    }

    @Override
    public PathLink withPassingThrough(PointsOnLink_RelStructure value) {
        setPassingThrough(value);
        return this;
    }

    @Override
    public PathLink withKeyList(KeyListStructure value) {
        setKeyList(value);
        return this;
    }

    @Override
    public PathLink withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public PathLink withBrandingRef(BrandingRefStructure value) {
        setBrandingRef(value);
        return this;
    }

    @Override
    public PathLink withResponsibilitySetRef(String value) {
        setResponsibilitySetRef(value);
        return this;
    }

    @Override
    public PathLink withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public PathLink withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public PathLink withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public PathLink withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public PathLink withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public PathLink withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public PathLink withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public PathLink withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public PathLink withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public PathLink withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public PathLink withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public PathLink withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public PathLink withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public PathLink withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public PathLink withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
