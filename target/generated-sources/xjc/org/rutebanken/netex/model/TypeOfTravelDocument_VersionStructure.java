//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for TypeOfTravelDocument_VersionStructure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TypeOfTravelDocument_VersionStructure"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.netex.org.uk/netex}TypeOfEntity_VersionStructure"&gt;
 *       &lt;group ref="{http://www.netex.org.uk/netex}TypeOfTravelDocumentGroup"/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TypeOfTravelDocument_VersionStructure", propOrder = {
    "isCard",
    "isSmartCard",
    "hasPhoto",
    "mediaType",
    "machineReadable",
    "typesOfMachineReadabilities",
    "alternativeNames"
})
@XmlSeeAlso({
    TypeOfTravelDocument.class
})
public class TypeOfTravelDocument_VersionStructure
    extends TypeOfEntity_VersionStructure
{

    @XmlElement(name = "IsCard")
    protected Boolean isCard;
    @XmlElement(name = "IsSmartCard")
    protected Boolean isSmartCard;
    @XmlElement(name = "HasPhoto")
    protected Boolean hasPhoto;
    @XmlElement(name = "MediaType")
    @XmlSchemaType(name = "normalizedString")
    protected MediaTypeEnumeration mediaType;
    @XmlList
    @XmlElement(name = "MachineReadable")
    protected List<MachineReadableEnumeration> machineReadable;
    protected TypesOfMachineReadabilities_RelStructure typesOfMachineReadabilities;
    protected AlternativeNames_RelStructure alternativeNames;

    /**
     * Gets the value of the isCard property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsCard() {
        return isCard;
    }

    /**
     * Sets the value of the isCard property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsCard(Boolean value) {
        this.isCard = value;
    }

    /**
     * Gets the value of the isSmartCard property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsSmartCard() {
        return isSmartCard;
    }

    /**
     * Sets the value of the isSmartCard property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsSmartCard(Boolean value) {
        this.isSmartCard = value;
    }

    /**
     * Gets the value of the hasPhoto property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isHasPhoto() {
        return hasPhoto;
    }

    /**
     * Sets the value of the hasPhoto property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setHasPhoto(Boolean value) {
        this.hasPhoto = value;
    }

    /**
     * Gets the value of the mediaType property.
     * 
     * @return
     *     possible object is
     *     {@link MediaTypeEnumeration }
     *     
     */
    public MediaTypeEnumeration getMediaType() {
        return mediaType;
    }

    /**
     * Sets the value of the mediaType property.
     * 
     * @param value
     *     allowed object is
     *     {@link MediaTypeEnumeration }
     *     
     */
    public void setMediaType(MediaTypeEnumeration value) {
        this.mediaType = value;
    }

    /**
     * Gets the value of the machineReadable property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the machineReadable property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMachineReadable().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MachineReadableEnumeration }
     * 
     * 
     */
    public List<MachineReadableEnumeration> getMachineReadable() {
        if (machineReadable == null) {
            machineReadable = new ArrayList<MachineReadableEnumeration>();
        }
        return this.machineReadable;
    }

    /**
     * Gets the value of the typesOfMachineReadabilities property.
     * 
     * @return
     *     possible object is
     *     {@link TypesOfMachineReadabilities_RelStructure }
     *     
     */
    public TypesOfMachineReadabilities_RelStructure getTypesOfMachineReadabilities() {
        return typesOfMachineReadabilities;
    }

    /**
     * Sets the value of the typesOfMachineReadabilities property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypesOfMachineReadabilities_RelStructure }
     *     
     */
    public void setTypesOfMachineReadabilities(TypesOfMachineReadabilities_RelStructure value) {
        this.typesOfMachineReadabilities = value;
    }

    /**
     * Gets the value of the alternativeNames property.
     * 
     * @return
     *     possible object is
     *     {@link AlternativeNames_RelStructure }
     *     
     */
    public AlternativeNames_RelStructure getAlternativeNames() {
        return alternativeNames;
    }

    /**
     * Sets the value of the alternativeNames property.
     * 
     * @param value
     *     allowed object is
     *     {@link AlternativeNames_RelStructure }
     *     
     */
    public void setAlternativeNames(AlternativeNames_RelStructure value) {
        this.alternativeNames = value;
    }

    public TypeOfTravelDocument_VersionStructure withIsCard(Boolean value) {
        setIsCard(value);
        return this;
    }

    public TypeOfTravelDocument_VersionStructure withIsSmartCard(Boolean value) {
        setIsSmartCard(value);
        return this;
    }

    public TypeOfTravelDocument_VersionStructure withHasPhoto(Boolean value) {
        setHasPhoto(value);
        return this;
    }

    public TypeOfTravelDocument_VersionStructure withMediaType(MediaTypeEnumeration value) {
        setMediaType(value);
        return this;
    }

    public TypeOfTravelDocument_VersionStructure withMachineReadable(MachineReadableEnumeration... values) {
        if (values!= null) {
            for (MachineReadableEnumeration value: values) {
                getMachineReadable().add(value);
            }
        }
        return this;
    }

    public TypeOfTravelDocument_VersionStructure withMachineReadable(Collection<MachineReadableEnumeration> values) {
        if (values!= null) {
            getMachineReadable().addAll(values);
        }
        return this;
    }

    public TypeOfTravelDocument_VersionStructure withTypesOfMachineReadabilities(TypesOfMachineReadabilities_RelStructure value) {
        setTypesOfMachineReadabilities(value);
        return this;
    }

    public TypeOfTravelDocument_VersionStructure withAlternativeNames(AlternativeNames_RelStructure value) {
        setAlternativeNames(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withNameOfClassifiedEntityClass(String value) {
        setNameOfClassifiedEntityClass(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withName(MultilingualString value) {
        setName(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withShortName(MultilingualString value) {
        setShortName(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withDescription(MultilingualString value) {
        setDescription(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withImage(String value) {
        setImage(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withUrl(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withPrivateCode(PrivateCodeStructure value) {
        setPrivateCode(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withKeyList(KeyListStructure value) {
        setKeyList(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withBrandingRef(BrandingRefStructure value) {
        setBrandingRef(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withResponsibilitySetRef(String value) {
        setResponsibilitySetRef(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public TypeOfTravelDocument_VersionStructure withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
