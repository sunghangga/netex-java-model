//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.time.Duration;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.migesok.jaxb.adapter.javatime.DurationXmlAdapter;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for OnwardTimingLink_DerivedViewStructure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="OnwardTimingLink_DerivedViewStructure"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.netex.org.uk/netex}DerivedViewStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{http://www.netex.org.uk/netex}TimingLinkInJourneyPatternRef" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.netex.org.uk/netex}TimingLinkRef" minOccurs="0"/&gt;
 *         &lt;element name="ToPointRef" type="{http://www.netex.org.uk/netex}TimingPointRefStructure" minOccurs="0"/&gt;
 *         &lt;element name="RunTime" type="{http://www.w3.org/2001/XMLSchema}duration" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OnwardTimingLink_DerivedViewStructure", propOrder = {
    "timingLinkInJourneyPatternRef",
    "timingLinkRef",
    "toPointRef",
    "runTime"
})
@XmlSeeAlso({
    OnwardTimingLinkView.class
})
public class OnwardTimingLink_DerivedViewStructure
    extends DerivedViewStructure
{

    @XmlElement(name = "TimingLinkInJourneyPatternRef")
    protected TimingLinkInJourneyPatternRefStructure timingLinkInJourneyPatternRef;
    @XmlElement(name = "TimingLinkRef")
    protected TimingLinkRefStructure timingLinkRef;
    @XmlElement(name = "ToPointRef")
    protected TimingPointRefStructure toPointRef;
    @XmlElement(name = "RunTime", type = String.class)
    @XmlJavaTypeAdapter(DurationXmlAdapter.class)
    @XmlSchemaType(name = "duration")
    protected Duration runTime;

    /**
     * Gets the value of the timingLinkInJourneyPatternRef property.
     * 
     * @return
     *     possible object is
     *     {@link TimingLinkInJourneyPatternRefStructure }
     *     
     */
    public TimingLinkInJourneyPatternRefStructure getTimingLinkInJourneyPatternRef() {
        return timingLinkInJourneyPatternRef;
    }

    /**
     * Sets the value of the timingLinkInJourneyPatternRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link TimingLinkInJourneyPatternRefStructure }
     *     
     */
    public void setTimingLinkInJourneyPatternRef(TimingLinkInJourneyPatternRefStructure value) {
        this.timingLinkInJourneyPatternRef = value;
    }

    /**
     * Gets the value of the timingLinkRef property.
     * 
     * @return
     *     possible object is
     *     {@link TimingLinkRefStructure }
     *     
     */
    public TimingLinkRefStructure getTimingLinkRef() {
        return timingLinkRef;
    }

    /**
     * Sets the value of the timingLinkRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link TimingLinkRefStructure }
     *     
     */
    public void setTimingLinkRef(TimingLinkRefStructure value) {
        this.timingLinkRef = value;
    }

    /**
     * Gets the value of the toPointRef property.
     * 
     * @return
     *     possible object is
     *     {@link TimingPointRefStructure }
     *     
     */
    public TimingPointRefStructure getToPointRef() {
        return toPointRef;
    }

    /**
     * Sets the value of the toPointRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link TimingPointRefStructure }
     *     
     */
    public void setToPointRef(TimingPointRefStructure value) {
        this.toPointRef = value;
    }

    /**
     * Gets the value of the runTime property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Duration getRunTime() {
        return runTime;
    }

    /**
     * Sets the value of the runTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRunTime(Duration value) {
        this.runTime = value;
    }

    public OnwardTimingLink_DerivedViewStructure withTimingLinkInJourneyPatternRef(TimingLinkInJourneyPatternRefStructure value) {
        setTimingLinkInJourneyPatternRef(value);
        return this;
    }

    public OnwardTimingLink_DerivedViewStructure withTimingLinkRef(TimingLinkRefStructure value) {
        setTimingLinkRef(value);
        return this;
    }

    public OnwardTimingLink_DerivedViewStructure withToPointRef(TimingPointRefStructure value) {
        setToPointRef(value);
        return this;
    }

    public OnwardTimingLink_DerivedViewStructure withRunTime(Duration value) {
        setRunTime(value);
        return this;
    }

    @Override
    public OnwardTimingLink_DerivedViewStructure withBrandingRef(BrandingRefStructure value) {
        setBrandingRef(value);
        return this;
    }

    @Override
    public OnwardTimingLink_DerivedViewStructure withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
