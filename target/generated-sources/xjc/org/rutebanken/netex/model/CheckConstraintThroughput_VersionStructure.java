//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.math.BigInteger;
import java.time.Duration;
import java.time.LocalDateTime;
import java.util.Collection;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.migesok.jaxb.adapter.javatime.DurationXmlAdapter;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for CheckConstraintThroughput_VersionStructure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CheckConstraintThroughput_VersionStructure"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.netex.org.uk/netex}Assignment_VersionStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.netex.org.uk/netex}CheckConstraintThroughputGroup"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CheckConstraintThroughput_VersionStructure", propOrder = {
    "checkConstraintRef",
    "period",
    "maximumPassengers",
    "averagePassengers",
    "wheelchairPassengers"
})
@XmlSeeAlso({
    CheckConstraintThroughput.class
})
public class CheckConstraintThroughput_VersionStructure
    extends Assignment_VersionStructure
{

    @XmlElement(name = "CheckConstraintRef")
    protected CheckConstraintRefStructure checkConstraintRef;
    @XmlElement(name = "Period", type = String.class)
    @XmlJavaTypeAdapter(DurationXmlAdapter.class)
    @XmlSchemaType(name = "duration")
    protected Duration period;
    @XmlElement(name = "MaximumPassengers")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger maximumPassengers;
    @XmlElement(name = "AveragePassengers")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger averagePassengers;
    @XmlElement(name = "WheelchairPassengers")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger wheelchairPassengers;

    /**
     * Gets the value of the checkConstraintRef property.
     * 
     * @return
     *     possible object is
     *     {@link CheckConstraintRefStructure }
     *     
     */
    public CheckConstraintRefStructure getCheckConstraintRef() {
        return checkConstraintRef;
    }

    /**
     * Sets the value of the checkConstraintRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link CheckConstraintRefStructure }
     *     
     */
    public void setCheckConstraintRef(CheckConstraintRefStructure value) {
        this.checkConstraintRef = value;
    }

    /**
     * Gets the value of the period property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Duration getPeriod() {
        return period;
    }

    /**
     * Sets the value of the period property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPeriod(Duration value) {
        this.period = value;
    }

    /**
     * Gets the value of the maximumPassengers property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaximumPassengers() {
        return maximumPassengers;
    }

    /**
     * Sets the value of the maximumPassengers property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMaximumPassengers(BigInteger value) {
        this.maximumPassengers = value;
    }

    /**
     * Gets the value of the averagePassengers property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getAveragePassengers() {
        return averagePassengers;
    }

    /**
     * Sets the value of the averagePassengers property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setAveragePassengers(BigInteger value) {
        this.averagePassengers = value;
    }

    /**
     * Gets the value of the wheelchairPassengers property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getWheelchairPassengers() {
        return wheelchairPassengers;
    }

    /**
     * Sets the value of the wheelchairPassengers property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setWheelchairPassengers(BigInteger value) {
        this.wheelchairPassengers = value;
    }

    public CheckConstraintThroughput_VersionStructure withCheckConstraintRef(CheckConstraintRefStructure value) {
        setCheckConstraintRef(value);
        return this;
    }

    public CheckConstraintThroughput_VersionStructure withPeriod(Duration value) {
        setPeriod(value);
        return this;
    }

    public CheckConstraintThroughput_VersionStructure withMaximumPassengers(BigInteger value) {
        setMaximumPassengers(value);
        return this;
    }

    public CheckConstraintThroughput_VersionStructure withAveragePassengers(BigInteger value) {
        setAveragePassengers(value);
        return this;
    }

    public CheckConstraintThroughput_VersionStructure withWheelchairPassengers(BigInteger value) {
        setWheelchairPassengers(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withName(MultilingualString value) {
        setName(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withDescription(MultilingualString value) {
        setDescription(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withOrder(BigInteger value) {
        setOrder(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withKeyList(KeyListStructure value) {
        setKeyList(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withBrandingRef(BrandingRefStructure value) {
        setBrandingRef(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withResponsibilitySetRef(String value) {
        setResponsibilitySetRef(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public CheckConstraintThroughput_VersionStructure withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
