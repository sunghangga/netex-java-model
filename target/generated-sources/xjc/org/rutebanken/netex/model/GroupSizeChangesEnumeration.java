//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for GroupSizeChangesEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="GroupSizeChangesEnumeration"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString"&gt;
 *     &lt;enumeration value="noChanges"/&gt;
 *     &lt;enumeration value="free"/&gt;
 *     &lt;enumeration value="charge"/&gt;
 *     &lt;enumeration value="purchaseWindowSteppedCharge"/&gt;
 *     &lt;enumeration value="numberOfPassengersSteppedCharge"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "GroupSizeChangesEnumeration")
@XmlEnum
public enum GroupSizeChangesEnumeration {

    @XmlEnumValue("noChanges")
    NO_CHANGES("noChanges"),
    @XmlEnumValue("free")
    FREE("free"),
    @XmlEnumValue("charge")
    CHARGE("charge"),
    @XmlEnumValue("purchaseWindowSteppedCharge")
    PURCHASE_WINDOW_STEPPED_CHARGE("purchaseWindowSteppedCharge"),
    @XmlEnumValue("numberOfPassengersSteppedCharge")
    NUMBER_OF_PASSENGERS_STEPPED_CHARGE("numberOfPassengersSteppedCharge");
    private final String value;

    GroupSizeChangesEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static GroupSizeChangesEnumeration fromValue(String v) {
        for (GroupSizeChangesEnumeration c: GroupSizeChangesEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
