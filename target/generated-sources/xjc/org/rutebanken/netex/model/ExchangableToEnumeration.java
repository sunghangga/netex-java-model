//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ExchangableToEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ExchangableToEnumeration"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString"&gt;
 *     &lt;enumeration value="anyProduct"/&gt;
 *     &lt;enumeration value="sameProductSameDay"/&gt;
 *     &lt;enumeration value="sameProductAnyDay"/&gt;
 *     &lt;enumeration value="sameProductLongerJourney"/&gt;
 *     &lt;enumeration value="sameProductShorterJourney"/&gt;
 *     &lt;enumeration value="upgradeToStandardFare"/&gt;
 *     &lt;enumeration value="upgradeToSpecifiedFare"/&gt;
 *     &lt;enumeration value="downgradeToSpecifiedFare"/&gt;
 *     &lt;enumeration value="equivalentProduct"/&gt;
 *     &lt;enumeration value="changeGroupSize"/&gt;
 *     &lt;enumeration value="other"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "ExchangableToEnumeration")
@XmlEnum
public enum ExchangableToEnumeration {

    @XmlEnumValue("anyProduct")
    ANY_PRODUCT("anyProduct"),
    @XmlEnumValue("sameProductSameDay")
    SAME_PRODUCT_SAME_DAY("sameProductSameDay"),
    @XmlEnumValue("sameProductAnyDay")
    SAME_PRODUCT_ANY_DAY("sameProductAnyDay"),
    @XmlEnumValue("sameProductLongerJourney")
    SAME_PRODUCT_LONGER_JOURNEY("sameProductLongerJourney"),
    @XmlEnumValue("sameProductShorterJourney")
    SAME_PRODUCT_SHORTER_JOURNEY("sameProductShorterJourney"),
    @XmlEnumValue("upgradeToStandardFare")
    UPGRADE_TO_STANDARD_FARE("upgradeToStandardFare"),
    @XmlEnumValue("upgradeToSpecifiedFare")
    UPGRADE_TO_SPECIFIED_FARE("upgradeToSpecifiedFare"),
    @XmlEnumValue("downgradeToSpecifiedFare")
    DOWNGRADE_TO_SPECIFIED_FARE("downgradeToSpecifiedFare"),
    @XmlEnumValue("equivalentProduct")
    EQUIVALENT_PRODUCT("equivalentProduct"),
    @XmlEnumValue("changeGroupSize")
    CHANGE_GROUP_SIZE("changeGroupSize"),
    @XmlEnumValue("other")
    OTHER("other");
    private final String value;

    ExchangableToEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ExchangableToEnumeration fromValue(String v) {
        for (ExchangableToEnumeration c: ExchangableToEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
