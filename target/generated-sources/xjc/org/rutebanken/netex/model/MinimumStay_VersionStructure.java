//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.math.BigInteger;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for MinimumStay_VersionStructure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MinimumStay_VersionStructure"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.netex.org.uk/netex}UsageParameter_VersionStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.netex.org.uk/netex}MinimumStayGroup"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MinimumStay_VersionStructure", propOrder = {
    "minimumStayType",
    "requiresNightsAway",
    "minimumNumberOfNightsAway",
    "maximumNumberOfNightsAway"
})
@XmlSeeAlso({
    MinimumStay.class
})
public class MinimumStay_VersionStructure
    extends UsageParameter_VersionStructure
{

    @XmlElement(name = "MinimumStayType")
    @XmlSchemaType(name = "normalizedString")
    protected MinimumStayTypeEnumeration minimumStayType;
    @XmlList
    @XmlElement(name = "RequiresNightsAway")
    protected List<DayOfWeekEnumeration> requiresNightsAway;
    @XmlElement(name = "MinimumNumberOfNightsAway")
    protected BigInteger minimumNumberOfNightsAway;
    @XmlElement(name = "MaximumNumberOfNightsAway")
    protected BigInteger maximumNumberOfNightsAway;

    /**
     * Gets the value of the minimumStayType property.
     * 
     * @return
     *     possible object is
     *     {@link MinimumStayTypeEnumeration }
     *     
     */
    public MinimumStayTypeEnumeration getMinimumStayType() {
        return minimumStayType;
    }

    /**
     * Sets the value of the minimumStayType property.
     * 
     * @param value
     *     allowed object is
     *     {@link MinimumStayTypeEnumeration }
     *     
     */
    public void setMinimumStayType(MinimumStayTypeEnumeration value) {
        this.minimumStayType = value;
    }

    /**
     * Gets the value of the requiresNightsAway property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the requiresNightsAway property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRequiresNightsAway().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DayOfWeekEnumeration }
     * 
     * 
     */
    public List<DayOfWeekEnumeration> getRequiresNightsAway() {
        if (requiresNightsAway == null) {
            requiresNightsAway = new ArrayList<DayOfWeekEnumeration>();
        }
        return this.requiresNightsAway;
    }

    /**
     * Gets the value of the minimumNumberOfNightsAway property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMinimumNumberOfNightsAway() {
        return minimumNumberOfNightsAway;
    }

    /**
     * Sets the value of the minimumNumberOfNightsAway property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMinimumNumberOfNightsAway(BigInteger value) {
        this.minimumNumberOfNightsAway = value;
    }

    /**
     * Gets the value of the maximumNumberOfNightsAway property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaximumNumberOfNightsAway() {
        return maximumNumberOfNightsAway;
    }

    /**
     * Sets the value of the maximumNumberOfNightsAway property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMaximumNumberOfNightsAway(BigInteger value) {
        this.maximumNumberOfNightsAway = value;
    }

    public MinimumStay_VersionStructure withMinimumStayType(MinimumStayTypeEnumeration value) {
        setMinimumStayType(value);
        return this;
    }

    public MinimumStay_VersionStructure withRequiresNightsAway(DayOfWeekEnumeration... values) {
        if (values!= null) {
            for (DayOfWeekEnumeration value: values) {
                getRequiresNightsAway().add(value);
            }
        }
        return this;
    }

    public MinimumStay_VersionStructure withRequiresNightsAway(Collection<DayOfWeekEnumeration> values) {
        if (values!= null) {
            getRequiresNightsAway().addAll(values);
        }
        return this;
    }

    public MinimumStay_VersionStructure withMinimumNumberOfNightsAway(BigInteger value) {
        setMinimumNumberOfNightsAway(value);
        return this;
    }

    public MinimumStay_VersionStructure withMaximumNumberOfNightsAway(BigInteger value) {
        setMaximumNumberOfNightsAway(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withTypeOfUsageParameterRef(TypeOfUsageParameterRefStructure value) {
        setTypeOfUsageParameterRef(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withPrices(UsageParameterPrices_RelStructure value) {
        setPrices(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withName(MultilingualString value) {
        setName(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withDescription(MultilingualString value) {
        setDescription(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withUrl(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withInfoLinks(org.rutebanken.netex.model.PriceableObject_VersionStructure.InfoLinks value) {
        setInfoLinks(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withAlternativeNames(AlternativeNames_RelStructure value) {
        setAlternativeNames(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withNoticeAssignments(NoticeAssignments_RelStructure value) {
        setNoticeAssignments(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withPricingServiceRef(PricingServiceRefStructure value) {
        setPricingServiceRef(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withPricingRuleRef(JAXBElement<? extends PricingRuleRefStructure> value) {
        setPricingRuleRef(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withPriceGroups(PriceGroups_RelStructure value) {
        setPriceGroups(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withFareTables(FareTables_RelStructure value) {
        setFareTables(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withKeyList(KeyListStructure value) {
        setKeyList(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withBrandingRef(BrandingRefStructure value) {
        setBrandingRef(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withResponsibilitySetRef(String value) {
        setResponsibilitySetRef(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public MinimumStay_VersionStructure withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
