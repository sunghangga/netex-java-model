//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.27 at 06:54:48 PM WITA 
//


package org.rutebanken.netex.model;

import java.math.BigInteger;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import net.opengis.gml._3.PolygonType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.rutebanken.netex.OmitNullsToStringStyle;


/**
 * <p>Java class for StopPlace_VersionStructure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="StopPlace_VersionStructure"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.netex.org.uk/netex}Site_VersionStructure"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.netex.org.uk/netex}StopPlaceGroup"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "StopPlace_VersionStructure", propOrder = {
    "publicCode",
    "transportMode",
    "airSubmode",
    "busSubmode",
    "coachSubmode",
    "funicularSubmode",
    "metroSubmode",
    "tramSubmode",
    "telecabinSubmode",
    "railSubmode",
    "waterSubmode",
    "snowAndIceSubmode",
    "otherTransportModes",
    "tariffZones",
    "stopPlaceType",
    "borderCrossing",
    "unlocalisedEquipments",
    "servedPlaces",
    "mainTerminusForPlaces",
    "limitedUse",
    "weighting",
    "stopPlaceWeight",
    "quays",
    "accessSpaces",
    "pathLinks",
    "pathJunctions",
    "accesses",
    "navigationPaths",
    "vehicleStoppingPlaces"
})
@XmlSeeAlso({
    StopPlace.class
})
public class StopPlace_VersionStructure
    extends Site_VersionStructure
{

    @XmlElement(name = "PublicCode")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    @XmlSchemaType(name = "normalizedString")
    protected String publicCode;
    @XmlElement(name = "TransportMode")
    @XmlSchemaType(name = "NMTOKEN")
    protected VehicleModeEnumeration transportMode;
    @XmlElement(name = "AirSubmode", defaultValue = "unknown")
    @XmlSchemaType(name = "NMTOKEN")
    protected AirSubmodeEnumeration airSubmode;
    @XmlElement(name = "BusSubmode", defaultValue = "unknown")
    @XmlSchemaType(name = "NMTOKEN")
    protected BusSubmodeEnumeration busSubmode;
    @XmlElement(name = "CoachSubmode", defaultValue = "unknown")
    @XmlSchemaType(name = "NMTOKEN")
    protected CoachSubmodeEnumeration coachSubmode;
    @XmlElement(name = "FunicularSubmode", defaultValue = "unknown")
    @XmlSchemaType(name = "NMTOKEN")
    protected FunicularSubmodeEnumeration funicularSubmode;
    @XmlElement(name = "MetroSubmode", defaultValue = "unknown")
    @XmlSchemaType(name = "NMTOKEN")
    protected MetroSubmodeEnumeration metroSubmode;
    @XmlElement(name = "TramSubmode", defaultValue = "unknown")
    @XmlSchemaType(name = "NMTOKEN")
    protected TramSubmodeEnumeration tramSubmode;
    @XmlElement(name = "TelecabinSubmode", defaultValue = "unknown")
    @XmlSchemaType(name = "NMTOKEN")
    protected TelecabinSubmodeEnumeration telecabinSubmode;
    @XmlElement(name = "RailSubmode", defaultValue = "unknown")
    @XmlSchemaType(name = "NMTOKEN")
    protected RailSubmodeEnumeration railSubmode;
    @XmlElement(name = "WaterSubmode", defaultValue = "unknown")
    @XmlSchemaType(name = "NMTOKEN")
    protected WaterSubmodeEnumeration waterSubmode;
    @XmlElement(name = "SnowAndIceSubmode", defaultValue = "unknown")
    @XmlSchemaType(name = "NMTOKEN")
    protected SnowAndIceSubmodeEnumeration snowAndIceSubmode;
    @XmlList
    @XmlElement(name = "OtherTransportModes")
    protected List<VehicleModeEnumeration> otherTransportModes;
    protected TariffZoneRefs_RelStructure tariffZones;
    @XmlElement(name = "StopPlaceType")
    @XmlSchemaType(name = "string")
    protected StopTypeEnumeration stopPlaceType;
    @XmlElement(name = "BorderCrossing", defaultValue = "false")
    protected Boolean borderCrossing;
    protected ExplicitEquipments_RelStructure unlocalisedEquipments;
    protected TopographicPlaceRefs_RelStructure servedPlaces;
    protected TopographicPlaceRefs_RelStructure mainTerminusForPlaces;
    @XmlElement(name = "LimitedUse")
    @XmlSchemaType(name = "string")
    protected LimitedUseTypeEnumeration limitedUse;
    @XmlElement(name = "Weighting")
    @XmlSchemaType(name = "string")
    protected InterchangeWeightingEnumeration weighting;
    @XmlElement(name = "StopPlaceWeight")
    @XmlSchemaType(name = "string")
    protected StopPlaceWeightEnumeration stopPlaceWeight;
    protected Quays_RelStructure quays;
    protected AccessSpaces_RelStructure accessSpaces;
    protected SitePathLinks_RelStructure pathLinks;
    protected PathJunctions_RelStructure pathJunctions;
    protected Accesses_RelStructure accesses;
    protected NavigationPaths_RelStructure navigationPaths;
    protected VehicleStoppingPlaces_RelStructure vehicleStoppingPlaces;

    /**
     * Gets the value of the publicCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPublicCode() {
        return publicCode;
    }

    /**
     * Sets the value of the publicCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPublicCode(String value) {
        this.publicCode = value;
    }

    /**
     * Gets the value of the transportMode property.
     * 
     * @return
     *     possible object is
     *     {@link VehicleModeEnumeration }
     *     
     */
    public VehicleModeEnumeration getTransportMode() {
        return transportMode;
    }

    /**
     * Sets the value of the transportMode property.
     * 
     * @param value
     *     allowed object is
     *     {@link VehicleModeEnumeration }
     *     
     */
    public void setTransportMode(VehicleModeEnumeration value) {
        this.transportMode = value;
    }

    /**
     * Gets the value of the airSubmode property.
     * 
     * @return
     *     possible object is
     *     {@link AirSubmodeEnumeration }
     *     
     */
    public AirSubmodeEnumeration getAirSubmode() {
        return airSubmode;
    }

    /**
     * Sets the value of the airSubmode property.
     * 
     * @param value
     *     allowed object is
     *     {@link AirSubmodeEnumeration }
     *     
     */
    public void setAirSubmode(AirSubmodeEnumeration value) {
        this.airSubmode = value;
    }

    /**
     * Gets the value of the busSubmode property.
     * 
     * @return
     *     possible object is
     *     {@link BusSubmodeEnumeration }
     *     
     */
    public BusSubmodeEnumeration getBusSubmode() {
        return busSubmode;
    }

    /**
     * Sets the value of the busSubmode property.
     * 
     * @param value
     *     allowed object is
     *     {@link BusSubmodeEnumeration }
     *     
     */
    public void setBusSubmode(BusSubmodeEnumeration value) {
        this.busSubmode = value;
    }

    /**
     * Gets the value of the coachSubmode property.
     * 
     * @return
     *     possible object is
     *     {@link CoachSubmodeEnumeration }
     *     
     */
    public CoachSubmodeEnumeration getCoachSubmode() {
        return coachSubmode;
    }

    /**
     * Sets the value of the coachSubmode property.
     * 
     * @param value
     *     allowed object is
     *     {@link CoachSubmodeEnumeration }
     *     
     */
    public void setCoachSubmode(CoachSubmodeEnumeration value) {
        this.coachSubmode = value;
    }

    /**
     * Gets the value of the funicularSubmode property.
     * 
     * @return
     *     possible object is
     *     {@link FunicularSubmodeEnumeration }
     *     
     */
    public FunicularSubmodeEnumeration getFunicularSubmode() {
        return funicularSubmode;
    }

    /**
     * Sets the value of the funicularSubmode property.
     * 
     * @param value
     *     allowed object is
     *     {@link FunicularSubmodeEnumeration }
     *     
     */
    public void setFunicularSubmode(FunicularSubmodeEnumeration value) {
        this.funicularSubmode = value;
    }

    /**
     * Gets the value of the metroSubmode property.
     * 
     * @return
     *     possible object is
     *     {@link MetroSubmodeEnumeration }
     *     
     */
    public MetroSubmodeEnumeration getMetroSubmode() {
        return metroSubmode;
    }

    /**
     * Sets the value of the metroSubmode property.
     * 
     * @param value
     *     allowed object is
     *     {@link MetroSubmodeEnumeration }
     *     
     */
    public void setMetroSubmode(MetroSubmodeEnumeration value) {
        this.metroSubmode = value;
    }

    /**
     * Gets the value of the tramSubmode property.
     * 
     * @return
     *     possible object is
     *     {@link TramSubmodeEnumeration }
     *     
     */
    public TramSubmodeEnumeration getTramSubmode() {
        return tramSubmode;
    }

    /**
     * Sets the value of the tramSubmode property.
     * 
     * @param value
     *     allowed object is
     *     {@link TramSubmodeEnumeration }
     *     
     */
    public void setTramSubmode(TramSubmodeEnumeration value) {
        this.tramSubmode = value;
    }

    /**
     * Gets the value of the telecabinSubmode property.
     * 
     * @return
     *     possible object is
     *     {@link TelecabinSubmodeEnumeration }
     *     
     */
    public TelecabinSubmodeEnumeration getTelecabinSubmode() {
        return telecabinSubmode;
    }

    /**
     * Sets the value of the telecabinSubmode property.
     * 
     * @param value
     *     allowed object is
     *     {@link TelecabinSubmodeEnumeration }
     *     
     */
    public void setTelecabinSubmode(TelecabinSubmodeEnumeration value) {
        this.telecabinSubmode = value;
    }

    /**
     * Gets the value of the railSubmode property.
     * 
     * @return
     *     possible object is
     *     {@link RailSubmodeEnumeration }
     *     
     */
    public RailSubmodeEnumeration getRailSubmode() {
        return railSubmode;
    }

    /**
     * Sets the value of the railSubmode property.
     * 
     * @param value
     *     allowed object is
     *     {@link RailSubmodeEnumeration }
     *     
     */
    public void setRailSubmode(RailSubmodeEnumeration value) {
        this.railSubmode = value;
    }

    /**
     * Gets the value of the waterSubmode property.
     * 
     * @return
     *     possible object is
     *     {@link WaterSubmodeEnumeration }
     *     
     */
    public WaterSubmodeEnumeration getWaterSubmode() {
        return waterSubmode;
    }

    /**
     * Sets the value of the waterSubmode property.
     * 
     * @param value
     *     allowed object is
     *     {@link WaterSubmodeEnumeration }
     *     
     */
    public void setWaterSubmode(WaterSubmodeEnumeration value) {
        this.waterSubmode = value;
    }

    /**
     * Gets the value of the snowAndIceSubmode property.
     * 
     * @return
     *     possible object is
     *     {@link SnowAndIceSubmodeEnumeration }
     *     
     */
    public SnowAndIceSubmodeEnumeration getSnowAndIceSubmode() {
        return snowAndIceSubmode;
    }

    /**
     * Sets the value of the snowAndIceSubmode property.
     * 
     * @param value
     *     allowed object is
     *     {@link SnowAndIceSubmodeEnumeration }
     *     
     */
    public void setSnowAndIceSubmode(SnowAndIceSubmodeEnumeration value) {
        this.snowAndIceSubmode = value;
    }

    /**
     * Gets the value of the otherTransportModes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the otherTransportModes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOtherTransportModes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link VehicleModeEnumeration }
     * 
     * 
     */
    public List<VehicleModeEnumeration> getOtherTransportModes() {
        if (otherTransportModes == null) {
            otherTransportModes = new ArrayList<VehicleModeEnumeration>();
        }
        return this.otherTransportModes;
    }

    /**
     * Gets the value of the tariffZones property.
     * 
     * @return
     *     possible object is
     *     {@link TariffZoneRefs_RelStructure }
     *     
     */
    public TariffZoneRefs_RelStructure getTariffZones() {
        return tariffZones;
    }

    /**
     * Sets the value of the tariffZones property.
     * 
     * @param value
     *     allowed object is
     *     {@link TariffZoneRefs_RelStructure }
     *     
     */
    public void setTariffZones(TariffZoneRefs_RelStructure value) {
        this.tariffZones = value;
    }

    /**
     * Gets the value of the stopPlaceType property.
     * 
     * @return
     *     possible object is
     *     {@link StopTypeEnumeration }
     *     
     */
    public StopTypeEnumeration getStopPlaceType() {
        return stopPlaceType;
    }

    /**
     * Sets the value of the stopPlaceType property.
     * 
     * @param value
     *     allowed object is
     *     {@link StopTypeEnumeration }
     *     
     */
    public void setStopPlaceType(StopTypeEnumeration value) {
        this.stopPlaceType = value;
    }

    /**
     * Gets the value of the borderCrossing property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isBorderCrossing() {
        return borderCrossing;
    }

    /**
     * Sets the value of the borderCrossing property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setBorderCrossing(Boolean value) {
        this.borderCrossing = value;
    }

    /**
     * Gets the value of the unlocalisedEquipments property.
     * 
     * @return
     *     possible object is
     *     {@link ExplicitEquipments_RelStructure }
     *     
     */
    public ExplicitEquipments_RelStructure getUnlocalisedEquipments() {
        return unlocalisedEquipments;
    }

    /**
     * Sets the value of the unlocalisedEquipments property.
     * 
     * @param value
     *     allowed object is
     *     {@link ExplicitEquipments_RelStructure }
     *     
     */
    public void setUnlocalisedEquipments(ExplicitEquipments_RelStructure value) {
        this.unlocalisedEquipments = value;
    }

    /**
     * Gets the value of the servedPlaces property.
     * 
     * @return
     *     possible object is
     *     {@link TopographicPlaceRefs_RelStructure }
     *     
     */
    public TopographicPlaceRefs_RelStructure getServedPlaces() {
        return servedPlaces;
    }

    /**
     * Sets the value of the servedPlaces property.
     * 
     * @param value
     *     allowed object is
     *     {@link TopographicPlaceRefs_RelStructure }
     *     
     */
    public void setServedPlaces(TopographicPlaceRefs_RelStructure value) {
        this.servedPlaces = value;
    }

    /**
     * Gets the value of the mainTerminusForPlaces property.
     * 
     * @return
     *     possible object is
     *     {@link TopographicPlaceRefs_RelStructure }
     *     
     */
    public TopographicPlaceRefs_RelStructure getMainTerminusForPlaces() {
        return mainTerminusForPlaces;
    }

    /**
     * Sets the value of the mainTerminusForPlaces property.
     * 
     * @param value
     *     allowed object is
     *     {@link TopographicPlaceRefs_RelStructure }
     *     
     */
    public void setMainTerminusForPlaces(TopographicPlaceRefs_RelStructure value) {
        this.mainTerminusForPlaces = value;
    }

    /**
     * Gets the value of the limitedUse property.
     * 
     * @return
     *     possible object is
     *     {@link LimitedUseTypeEnumeration }
     *     
     */
    public LimitedUseTypeEnumeration getLimitedUse() {
        return limitedUse;
    }

    /**
     * Sets the value of the limitedUse property.
     * 
     * @param value
     *     allowed object is
     *     {@link LimitedUseTypeEnumeration }
     *     
     */
    public void setLimitedUse(LimitedUseTypeEnumeration value) {
        this.limitedUse = value;
    }

    /**
     * Gets the value of the weighting property.
     * 
     * @return
     *     possible object is
     *     {@link InterchangeWeightingEnumeration }
     *     
     */
    public InterchangeWeightingEnumeration getWeighting() {
        return weighting;
    }

    /**
     * Sets the value of the weighting property.
     * 
     * @param value
     *     allowed object is
     *     {@link InterchangeWeightingEnumeration }
     *     
     */
    public void setWeighting(InterchangeWeightingEnumeration value) {
        this.weighting = value;
    }

    /**
     * Gets the value of the stopPlaceWeight property.
     * 
     * @return
     *     possible object is
     *     {@link StopPlaceWeightEnumeration }
     *     
     */
    public StopPlaceWeightEnumeration getStopPlaceWeight() {
        return stopPlaceWeight;
    }

    /**
     * Sets the value of the stopPlaceWeight property.
     * 
     * @param value
     *     allowed object is
     *     {@link StopPlaceWeightEnumeration }
     *     
     */
    public void setStopPlaceWeight(StopPlaceWeightEnumeration value) {
        this.stopPlaceWeight = value;
    }

    /**
     * Gets the value of the quays property.
     * 
     * @return
     *     possible object is
     *     {@link Quays_RelStructure }
     *     
     */
    public Quays_RelStructure getQuays() {
        return quays;
    }

    /**
     * Sets the value of the quays property.
     * 
     * @param value
     *     allowed object is
     *     {@link Quays_RelStructure }
     *     
     */
    public void setQuays(Quays_RelStructure value) {
        this.quays = value;
    }

    /**
     * Gets the value of the accessSpaces property.
     * 
     * @return
     *     possible object is
     *     {@link AccessSpaces_RelStructure }
     *     
     */
    public AccessSpaces_RelStructure getAccessSpaces() {
        return accessSpaces;
    }

    /**
     * Sets the value of the accessSpaces property.
     * 
     * @param value
     *     allowed object is
     *     {@link AccessSpaces_RelStructure }
     *     
     */
    public void setAccessSpaces(AccessSpaces_RelStructure value) {
        this.accessSpaces = value;
    }

    /**
     * Gets the value of the pathLinks property.
     * 
     * @return
     *     possible object is
     *     {@link SitePathLinks_RelStructure }
     *     
     */
    public SitePathLinks_RelStructure getPathLinks() {
        return pathLinks;
    }

    /**
     * Sets the value of the pathLinks property.
     * 
     * @param value
     *     allowed object is
     *     {@link SitePathLinks_RelStructure }
     *     
     */
    public void setPathLinks(SitePathLinks_RelStructure value) {
        this.pathLinks = value;
    }

    /**
     * Gets the value of the pathJunctions property.
     * 
     * @return
     *     possible object is
     *     {@link PathJunctions_RelStructure }
     *     
     */
    public PathJunctions_RelStructure getPathJunctions() {
        return pathJunctions;
    }

    /**
     * Sets the value of the pathJunctions property.
     * 
     * @param value
     *     allowed object is
     *     {@link PathJunctions_RelStructure }
     *     
     */
    public void setPathJunctions(PathJunctions_RelStructure value) {
        this.pathJunctions = value;
    }

    /**
     * Gets the value of the accesses property.
     * 
     * @return
     *     possible object is
     *     {@link Accesses_RelStructure }
     *     
     */
    public Accesses_RelStructure getAccesses() {
        return accesses;
    }

    /**
     * Sets the value of the accesses property.
     * 
     * @param value
     *     allowed object is
     *     {@link Accesses_RelStructure }
     *     
     */
    public void setAccesses(Accesses_RelStructure value) {
        this.accesses = value;
    }

    /**
     * Gets the value of the navigationPaths property.
     * 
     * @return
     *     possible object is
     *     {@link NavigationPaths_RelStructure }
     *     
     */
    public NavigationPaths_RelStructure getNavigationPaths() {
        return navigationPaths;
    }

    /**
     * Sets the value of the navigationPaths property.
     * 
     * @param value
     *     allowed object is
     *     {@link NavigationPaths_RelStructure }
     *     
     */
    public void setNavigationPaths(NavigationPaths_RelStructure value) {
        this.navigationPaths = value;
    }

    /**
     * Gets the value of the vehicleStoppingPlaces property.
     * 
     * @return
     *     possible object is
     *     {@link VehicleStoppingPlaces_RelStructure }
     *     
     */
    public VehicleStoppingPlaces_RelStructure getVehicleStoppingPlaces() {
        return vehicleStoppingPlaces;
    }

    /**
     * Sets the value of the vehicleStoppingPlaces property.
     * 
     * @param value
     *     allowed object is
     *     {@link VehicleStoppingPlaces_RelStructure }
     *     
     */
    public void setVehicleStoppingPlaces(VehicleStoppingPlaces_RelStructure value) {
        this.vehicleStoppingPlaces = value;
    }

    public StopPlace_VersionStructure withPublicCode(String value) {
        setPublicCode(value);
        return this;
    }

    public StopPlace_VersionStructure withTransportMode(VehicleModeEnumeration value) {
        setTransportMode(value);
        return this;
    }

    public StopPlace_VersionStructure withAirSubmode(AirSubmodeEnumeration value) {
        setAirSubmode(value);
        return this;
    }

    public StopPlace_VersionStructure withBusSubmode(BusSubmodeEnumeration value) {
        setBusSubmode(value);
        return this;
    }

    public StopPlace_VersionStructure withCoachSubmode(CoachSubmodeEnumeration value) {
        setCoachSubmode(value);
        return this;
    }

    public StopPlace_VersionStructure withFunicularSubmode(FunicularSubmodeEnumeration value) {
        setFunicularSubmode(value);
        return this;
    }

    public StopPlace_VersionStructure withMetroSubmode(MetroSubmodeEnumeration value) {
        setMetroSubmode(value);
        return this;
    }

    public StopPlace_VersionStructure withTramSubmode(TramSubmodeEnumeration value) {
        setTramSubmode(value);
        return this;
    }

    public StopPlace_VersionStructure withTelecabinSubmode(TelecabinSubmodeEnumeration value) {
        setTelecabinSubmode(value);
        return this;
    }

    public StopPlace_VersionStructure withRailSubmode(RailSubmodeEnumeration value) {
        setRailSubmode(value);
        return this;
    }

    public StopPlace_VersionStructure withWaterSubmode(WaterSubmodeEnumeration value) {
        setWaterSubmode(value);
        return this;
    }

    public StopPlace_VersionStructure withSnowAndIceSubmode(SnowAndIceSubmodeEnumeration value) {
        setSnowAndIceSubmode(value);
        return this;
    }

    public StopPlace_VersionStructure withOtherTransportModes(VehicleModeEnumeration... values) {
        if (values!= null) {
            for (VehicleModeEnumeration value: values) {
                getOtherTransportModes().add(value);
            }
        }
        return this;
    }

    public StopPlace_VersionStructure withOtherTransportModes(Collection<VehicleModeEnumeration> values) {
        if (values!= null) {
            getOtherTransportModes().addAll(values);
        }
        return this;
    }

    public StopPlace_VersionStructure withTariffZones(TariffZoneRefs_RelStructure value) {
        setTariffZones(value);
        return this;
    }

    public StopPlace_VersionStructure withStopPlaceType(StopTypeEnumeration value) {
        setStopPlaceType(value);
        return this;
    }

    public StopPlace_VersionStructure withBorderCrossing(Boolean value) {
        setBorderCrossing(value);
        return this;
    }

    public StopPlace_VersionStructure withUnlocalisedEquipments(ExplicitEquipments_RelStructure value) {
        setUnlocalisedEquipments(value);
        return this;
    }

    public StopPlace_VersionStructure withServedPlaces(TopographicPlaceRefs_RelStructure value) {
        setServedPlaces(value);
        return this;
    }

    public StopPlace_VersionStructure withMainTerminusForPlaces(TopographicPlaceRefs_RelStructure value) {
        setMainTerminusForPlaces(value);
        return this;
    }

    public StopPlace_VersionStructure withLimitedUse(LimitedUseTypeEnumeration value) {
        setLimitedUse(value);
        return this;
    }

    public StopPlace_VersionStructure withWeighting(InterchangeWeightingEnumeration value) {
        setWeighting(value);
        return this;
    }

    public StopPlace_VersionStructure withStopPlaceWeight(StopPlaceWeightEnumeration value) {
        setStopPlaceWeight(value);
        return this;
    }

    public StopPlace_VersionStructure withQuays(Quays_RelStructure value) {
        setQuays(value);
        return this;
    }

    public StopPlace_VersionStructure withAccessSpaces(AccessSpaces_RelStructure value) {
        setAccessSpaces(value);
        return this;
    }

    public StopPlace_VersionStructure withPathLinks(SitePathLinks_RelStructure value) {
        setPathLinks(value);
        return this;
    }

    public StopPlace_VersionStructure withPathJunctions(PathJunctions_RelStructure value) {
        setPathJunctions(value);
        return this;
    }

    public StopPlace_VersionStructure withAccesses(Accesses_RelStructure value) {
        setAccesses(value);
        return this;
    }

    public StopPlace_VersionStructure withNavigationPaths(NavigationPaths_RelStructure value) {
        setNavigationPaths(value);
        return this;
    }

    public StopPlace_VersionStructure withVehicleStoppingPlaces(VehicleStoppingPlaces_RelStructure value) {
        setVehicleStoppingPlaces(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withTopographicPlaceRef(TopographicPlaceRefStructure value) {
        setTopographicPlaceRef(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withTopographicPlaceView(TopographicPlaceView value) {
        setTopographicPlaceView(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withAdditionalTopographicPlaces(TopographicPlaceRefs_RelStructure value) {
        setAdditionalTopographicPlaces(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withSiteType(SiteTypeEnumeration value) {
        setSiteType(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withAtCentre(Boolean value) {
        setAtCentre(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withLocale(LocaleStructure value) {
        setLocale(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withOrganisationRef(JAXBElement<? extends OrganisationRefStructure> value) {
        setOrganisationRef(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withOperatingOrganisationView(Organisation_DerivedViewStructure value) {
        setOperatingOrganisationView(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withParentSiteRef(SiteRefStructure value) {
        setParentSiteRef(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withAdjacentSites(SiteRefs_RelStructure value) {
        setAdjacentSites(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withContainedInPlaceRef(TopographicPlaceRefStructure value) {
        setContainedInPlaceRef(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withLevels(Levels_RelStructure value) {
        setLevels(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withEntrances(SiteEntrances_RelStructure value) {
        setEntrances(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withEquipmentPlaces(EquipmentPlaces_RelStructure value) {
        setEquipmentPlaces(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withPlaceEquipments(PlaceEquipments_RelStructure value) {
        setPlaceEquipments(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withLocalServices(LocalServices_RelStructure value) {
        setLocalServices(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withAccessibilityAssessment(AccessibilityAssessment value) {
        setAccessibilityAssessment(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withAccessModes(AccessModeEnumeration... values) {
        if (values!= null) {
            for (AccessModeEnumeration value: values) {
                getAccessModes().add(value);
            }
        }
        return this;
    }

    @Override
    public StopPlace_VersionStructure withAccessModes(Collection<AccessModeEnumeration> values) {
        if (values!= null) {
            getAccessModes().addAll(values);
        }
        return this;
    }

    @Override
    public StopPlace_VersionStructure withNameSuffix(MultilingualString value) {
        setNameSuffix(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withAlternativeNames(AlternativeNames_RelStructure value) {
        setAlternativeNames(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withCrossRoad(MultilingualString value) {
        setCrossRoad(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withLandmark(MultilingualString value) {
        setLandmark(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withPublicUse(PublicUseEnumeration value) {
        setPublicUse(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withCovered(CoveredEnumeration value) {
        setCovered(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withGated(GatedEnumeration value) {
        setGated(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withLighting(LightingEnumeration value) {
        setLighting(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withAllAreasWheelchairAccessible(Boolean value) {
        setAllAreasWheelchairAccessible(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withPersonCapacity(BigInteger value) {
        setPersonCapacity(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withFacilities(SiteFacilitySets_RelStructure value) {
        setFacilities(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withUrl(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withImage(String value) {
        setImage(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withPostalAddress(PostalAddress value) {
        setPostalAddress(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withRoadAddress(RoadAddress value) {
        setRoadAddress(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withPlaceTypes(TypeOfPlaceRefs_RelStructure value) {
        setPlaceTypes(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withTypes(TypeOfZoneRefs_RelStructure value) {
        setTypes(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withCentroid(SimplePoint_VersionStructure value) {
        setCentroid(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withPolygon(PolygonType value) {
        setPolygon(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withProjections(Projections_RelStructure value) {
        setProjections(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withParentZoneRef(ZoneRefStructure value) {
        setParentZoneRef(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withMembers(PointRefs_RelStructure value) {
        setMembers(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withName(MultilingualString value) {
        setName(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withShortName(MultilingualString value) {
        setShortName(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withDescription(MultilingualString value) {
        setDescription(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withPurposeOfGroupingRef(PurposeOfGroupingRefStructure value) {
        setPurposeOfGroupingRef(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withPrivateCode(PrivateCodeStructure value) {
        setPrivateCode(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withInfoLinks(org.rutebanken.netex.model.GroupOfEntities_VersionStructure.InfoLinks value) {
        setInfoLinks(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withKeyList(KeyListStructure value) {
        setKeyList(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withExtensions(ExtensionsStructure value) {
        setExtensions(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withBrandingRef(BrandingRefStructure value) {
        setBrandingRef(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withResponsibilitySetRef(String value) {
        setResponsibilitySetRef(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withValidityConditions(ValidityConditions_RelStructure value) {
        setValidityConditions(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withValidBetween(ValidBetween... values) {
        if (values!= null) {
            for (ValidBetween value: values) {
                getValidBetween().add(value);
            }
        }
        return this;
    }

    @Override
    public StopPlace_VersionStructure withValidBetween(Collection<ValidBetween> values) {
        if (values!= null) {
            getValidBetween().addAll(values);
        }
        return this;
    }

    @Override
    public StopPlace_VersionStructure withAlternativeTexts(AlternativeTexts_RelStructure value) {
        setAlternativeTexts(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withDataSourceRef(String value) {
        setDataSourceRef(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withCreated(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withChanged(LocalDateTime value) {
        setChanged(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withModification(ModificationEnumeration value) {
        setModification(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withVersion(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withStatus_BasicModificationDetailsGroup(StatusEnumeration value) {
        setStatus_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withDerivedFromVersionRef_BasicModificationDetailsGroup(String value) {
        setDerivedFromVersionRef_BasicModificationDetailsGroup(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withCompatibleWithVersionFrameVersionRef(String value) {
        setCompatibleWithVersionFrameVersionRef(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withDerivedFromObjectRef(String value) {
        setDerivedFromObjectRef(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withNameOfClass(String value) {
        setNameOfClass(value);
        return this;
    }

    @Override
    public StopPlace_VersionStructure withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, OmitNullsToStringStyle.INSTANCE);
    }

}
